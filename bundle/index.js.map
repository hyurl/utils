{"version":3,"sources":["webpack://@hyurl/utils/webpack/universalModuleDefinition","webpack://@hyurl/utils/webpack/bootstrap","webpack://@hyurl/utils/./node_modules/is-like/index.js","webpack://@hyurl/utils/./src/isVoid.ts","webpack://@hyurl/utils/./src/isEmpty.ts","webpack://@hyurl/utils/./src/keysOf.ts","webpack://@hyurl/utils/./src/typeOf.ts","webpack://@hyurl/utils/./src/define.ts","webpack://@hyurl/utils/./src/ensureType.ts","webpack://@hyurl/utils/./src/isBetween.ts","webpack://@hyurl/utils/./src/getGlobal.ts","webpack://@hyurl/utils/./src/isNumeric.ts","webpack://@hyurl/utils/./src/isOwnKey.ts","webpack://@hyurl/utils/./src/rand.ts","webpack://@hyurl/utils/./src/index.ts","webpack://@hyurl/utils/./src/count.ts","webpack://@hyurl/utils/./node_modules/utf8-length/index.js","webpack://@hyurl/utils/./node_modules/could-be-class/index.js","webpack://@hyurl/utils/./src/diff.ts","webpack://@hyurl/utils/./src/flatObject.ts","webpack://@hyurl/utils/./src/isFloat.ts","webpack://@hyurl/utils/./src/isInteger.ts","webpack://@hyurl/utils/./src/isOwnMethod.ts","webpack://@hyurl/utils/./src/isSubClassOf.ts","webpack://@hyurl/utils/./src/omit.ts","webpack://@hyurl/utils/./src/omitVoid.ts","webpack://@hyurl/utils/./src/patch.ts","webpack://@hyurl/utils/./src/pick.ts","webpack://@hyurl/utils/./src/randStr.ts","webpack://@hyurl/utils/./src/sleep.ts","webpack://@hyurl/utils/./src/sort.ts","webpack://@hyurl/utils/./src/split.ts","webpack://@hyurl/utils/./src/timestamp.ts","webpack://@hyurl/utils/./src/typeAs.ts","webpack://@hyurl/utils/./src/until.ts","webpack://@hyurl/utils/./src/useThrottle.ts","webpack://@hyurl/utils/./src/wrap.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isObjectWith","props","every","isArrayLike","strict","Array","isArray","indexes","keys","isNonEnumLength","includes","length","map","Number","filter","isFinite","hasIterator","iterator","isCollectionLike","excludeWeakOnes","WeakMap","WeakSet","isBufferLike","isPromiseLike","isDictLike","constructor","Date","RegExp","obj","str","JSON","stringify","e","isEmptyDict","isErrorLike","is","NaN","BaseEmptyPrimitives","EmptyPrimitives","BigInt","push","deep","test","emptyPrimitives","byteLength","len","size","Map","v","values","Set","Reflect","ownKeys","k","Boolean","target","arguments","TypeError","type","toString","prop","writable","String","isGetter","sign","isGetterAndSetter","configurable","truePattern","falsePattern","nullPattern","nanPattern","infinityPattern","regexPattern","numberInterval","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","ensureArray","from","ensureType","re","match","num","isNaN","reduce","result","min","max","_global","globalThis","self","global","window","Math","floor","random","count","diff","flatObject","getGlobal","isBetween","isEmpty","isFloat","isInteger","isNumeric","isOwnKey","isOwnMethod","isSubClassOf","isVoid","keysOf","omit","omitVoid","patch","pick","rand","randStr","sleep","sort","split","timestamp","typeAs","typeOf","until","useThrottle","wrap","bytes","encoder","TextEncoder","option","Buffer","encode","times","encodeURI","couldBeClass","undefined","getOwnPropertyNames","slice","hasThis","default","origin","input","_keys","forEach","_result","depth","flatArray","flatDeep","carrier","source","field","maxDepth","isArr","isDict","isContent","method","proto","getPrototypeOf","base","Error","doOmit","omitEmptyObjects","omitEmptyStrings","trim","arr","ignoreEmptyStrings","doPatch","isChildNode","assign","chars","ms","Promise","resolve","setTimeout","onlyNumbers","ele","compare","a","b","process","versions","parseFloat","v8","navigator","userAgent","version","shouldUseNativeSort","index","getOwnPropertySymbols","item","checkNumberArgument","RangeError","splitArrayLike","total","j","splitBuffer","buf","sep","offset","indexOf","splitObject","keyChunks","chunk","splitNumber","step","SyntaxError","isBuffer","ctor","list","valueOf","date","dateTime","Y","M","D","H","setFullYear","setMonth","setDate","setHours","setMinutes","setSeconds","setMilliseconds","parseDateRawArgs","getFullYear","getMonth","getDate","_type","primitiveMap","setImmediate","cb","resource","interval","gcTimer","gcInterval","tasks","jobs","setInterval","now","lastActive","delete","unref","task","set","cache","queue","func","throttle","handle","args","error","err","job","reject","add","createThrottleTask","wrapper","fn"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@hyurl/utils\"] = factory();\n\telse\n\t\troot[\"@hyurl/utils\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * @param {any} value \n * @param {Array<[string|symbol, string]>} props \n * @param {Array<string>} types\n */\nfunction isObjectWith(value, ...props) {\n    let isObj = typeof value === \"object\" && value !== null;\n    return isObj && props.every(([p, t]) => p in value && typeof value[p] === t);\n}\n\nfunction isEmptyDict(obj) {\n    try {\n        let str = JSON.stringify(obj);\n        return str === \"{}\" || str === \"[]\";\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction isDictLike(value) {\n    return typeof value === \"object\" && value !== null\n        && (value.constructor === Object || (\n            !(value instanceof Date) &&\n            !(value instanceof RegExp) &&\n            !isArrayLike(value, true) &&\n            !isEmptyDict(value) &&\n            !isBufferLike(value) &&\n            !isCollectionLike(value) &&\n            !isPromiseLike(value)\n        ));\n}\n\nfunction isArrayLike(value, strict = false) {\n    if (Array.isArray(value)) {\n        return true;\n    } else if (!strict) {\n        return isObjectWith(value, [\"length\", \"number\"])\n            || (typeof value === \"string\");\n    } else if (isObjectWith(value, [\"length\", \"number\"])) {\n        let keys = Object.keys(value);\n        let isNonEnumLength = !keys.includes(\"length\");\n        let indexes;\n\n        if (value.length === 0 ||\n            (indexes = keys.map(Number).filter(isFinite)).length === 0) {\n            return isNonEnumLength;\n        } else {\n            let hasIterator = typeof value[Symbol.iterator] === \"function\";\n\n            for (let i = value.length; i--;) {\n                if (!indexes.includes(i) && !(isNonEnumLength || hasIterator)) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isCollectionLike(value, excludeWeakOnes = false) {\n    return (isObjectWith(value, [\"size\", \"number\"], [Symbol.iterator, \"function\"]))\n        || (!excludeWeakOnes &&\n            (value instanceof WeakMap || value instanceof WeakSet));\n}\n\nfunction isBufferLike(value) {\n    return isObjectWith(value, [\"byteLength\", \"number\"], [\"slice\", \"function\"]);\n}\n\nfunction isErrorLike(value) {\n    return isObjectWith(value,\n        [\"name\", \"string\"],\n        [\"message\", \"string\"],\n        [\"stack\", \"string\"]\n    );\n}\n\nfunction isPromiseLike(value) {\n    return isObjectWith(value, [\"then\", \"function\"]);\n}\n\nexports.isDictLike = isDictLike;\nexports.isArrayLike = isArrayLike;\nexports.isCollectionLike = isCollectionLike;\nexports.isBufferLike = isBufferLike;\nexports.isErrorLike = isErrorLike;\nexports.isPromiseLike = isPromiseLike;","/**\n * Checks if a value is resolved to void (`null`, `undefined` or `NaN`).\n */\nexport default function isVoid(value: any): value is void {\n    return value === null || value === undefined || Object.is(value, NaN);\n}","import { isArrayLike, isBufferLike, isCollectionLike } from \"is-like\";\n\nconst BaseEmptyPrimitives: any[] = [\"\", NaN, null, void 0];\nconst EmptyPrimitives: any[] = [...BaseEmptyPrimitives, 0, false];\n\nif (typeof BigInt === \"function\")\n    EmptyPrimitives.push(BigInt(\"0\"));\n\n/**\n * Checks if the value resolves to an empty object or a falsy value.\n */\nexport default function isEmpty(value: any, deep = false): boolean {\n    return test(value, Boolean(deep), EmptyPrimitives);\n}\n\nfunction test(\n    value: any,\n    deep: boolean,\n    emptyPrimitives: any[]\n): boolean {\n    if (emptyPrimitives.includes(value))\n        return true;\n\n    if (typeof value === \"object\") {\n        if (isBufferLike(value)) {\n            return value.byteLength === 0;\n        } else if (isArrayLike(value)) {\n            if (value.length === 0) {\n                return true;\n            } else if (!deep) {\n                return false;\n            } else {\n                for (let i = 0, len = value.length; i < len; ++i) {\n                    if (!test(value[i], deep, BaseEmptyPrimitives)) {\n                        return false;\n                    }\n                }\n\n                return true;\n            }\n        } else if (isCollectionLike(value, true)) {\n            if (value.size === 0) {\n                return true;\n            } else if (!deep) {\n                return false;\n            } else {\n                if (value instanceof Map) {\n                    for (let v of value.values()) {\n                        if (!test(v, deep, BaseEmptyPrimitives)) {\n                            return false;\n                        }\n                    }\n\n                    return true;\n                } else if (value instanceof Set) {\n                    for (let v of value) {\n                        if (!test(v, deep, BaseEmptyPrimitives)) {\n                            return false;\n                        }\n                    }\n\n                    return true;\n                }\n\n                return false;\n            }\n        } else {\n            let keys = Reflect.ownKeys(value);\n\n            if (keys.length === 0) {\n                return true;\n            } else if (!deep) {\n                return false;\n            } else {\n                return keys.every(\n                    k => test(value[k], deep, BaseEmptyPrimitives)\n                );\n            }\n        }\n    }\n\n    return false;\n}","/** Returns the indexes of the given array. */\nexport default function keysOf<T extends any[]>(arr: T): number[];\n/** Returns an array of the given function's own properties. */\nexport default function keysOf<T extends Function>(fn: T): (string | symbol)[];\n/** Returns an array of the given object's own properties. */\nexport default function keysOf<T extends object>(obj: T): (keyof T | symbol)[];\nexport default function keysOf(obj: object): (string | number | symbol)[] {\n    if (Array.isArray(obj)) {\n        return Object.keys(obj).map(Number);\n    } else {\n        return Reflect.ownKeys(obj);\n    }\n}","import isVoid from './isVoid';\nimport isClass from \"could-be-class\";\n\nexport type TypeNames = \"string\"\n    | \"number\"\n    | \"bigint\"\n    | \"boolean\"\n    | \"symbol\"\n    | \"function\"\n    | \"class\"\n    | \"arguments\"\n    | \"void\";\n\n/**\n * Returns a string representation or the constructor of the value's type.\n * NOTE: this function also returns `'void'` when testing `NaN`.\n */\nexport default function typeOf<T extends any>(\n    target: T\n): TypeNames | Constructor<T> {\n    if (arguments.length === 0)\n        throw new TypeError(\"1 argument is required, 0 given\");\n    else if (isVoid(target))\n        return \"void\";\n\n    let type = typeof target;\n\n    if (type === \"function\") {\n        if (isClass(<any>target)) {\n            return \"class\";\n        } else {\n            return \"function\";\n        }\n    } else if (type === \"object\") {\n        if (Object.prototype.toString.call(target) === \"[object Arguments]\") {\n            return \"arguments\";\n        } else {\n            return <any>target.constructor || Object;\n        }\n    } else {\n        return <any>type;\n    }\n}\n","import typeOf from './typeOf';\n\n/**\n * Sets a property on the target object.\n * @param value Normally this is the value bound to the property, however, it\n *  could be used to set the getter and the setter using the signature\n *  `{ get: Function, set?: Function }`.\n * @param enumerable By default, the property is non-enumerable and can't be\n *  seen by the console, use this option to make it enumerable and visible to\n *  the console.\n * @param writable By default, the property is readonly once set, use this\n *  option to allow it being writable.\n *  **This property doesn't work with setter.**\n */\nexport default function define(\n    obj: any,\n    prop: string | symbol,\n    value: any,\n    enumerable = false,\n    writable = false,\n): void {\n    if (typeOf(value) === Object) {\n        if (isGetter(value) || isGetterAndSetter(value)) {\n            Object.defineProperty(obj, prop, {\n                configurable: true,\n                enumerable,\n                ...value\n            });\n            return;\n        }\n    }\n\n    Object.defineProperty(obj, <string | symbol>prop, {\n        configurable: true,\n        enumerable,\n        writable,\n        value\n    });\n}\n\nfunction isGetter(obj: object) {\n    return String(Object.keys(obj)) === \"get\"\n        && typeof obj[\"get\"] === \"function\";\n}\n\nfunction isGetterAndSetter(obj: object) {\n    let sign = String(Object.keys(obj));\n    return (sign === \"get,set\" || sign === \"set,get\")\n        && typeof obj[\"get\"] === \"function\"\n        && typeof obj[\"set\"] === \"function\";\n}","import { isArrayLike, isDictLike } from 'is-like';\nimport isBetween from './isBetween';\nimport keysOf from './keysOf';\n\nconst truePattern = /^\\s*(true|yes|on)\\s*$/i;\nconst falsePattern = /^\\s*(false|no|off)\\s*$/i;\nconst nullPattern = /^\\s*(null|nil|none|void|undefined)\\s*$/i;\nconst nanPattern = /^\\s*NaN\\s*$/;\nconst infinityPattern = /^\\s*-?Infinity\\s*/;\nconst regexPattern = /^\\s*\\/(.+)\\/([gimuys]*)\\s*$/;\nconst numberInterval: [number, number] = [\n    Number.MIN_SAFE_INTEGER,\n    Number.MAX_SAFE_INTEGER\n];\n\n/**\n * Casts the target object or its contents to the closest types automatically.\n * This function is useful when reading config from a file or fetching data from\n * the web.\n */\nexport default function ensureType(target: any): any {\n    switch (typeof target) {\n        case \"string\": {\n            let re: RegExpMatchArray;\n\n            if (truePattern.test(target)) {\n                return true;\n            } else if (falsePattern.test(target)) {\n                return false;\n            } else if (nullPattern.test(target)) {\n                return null;\n            } else if (nanPattern.test(target)) {\n                return NaN;\n            } else if (infinityPattern.test(target)) {\n                return Number(target);\n            } else if (re = target.match(regexPattern)) {\n                return new RegExp(re[1], re[2]);\n            } else {\n                let num = Number(target);\n\n                if (!isNaN(num) &&\n                    isBetween(num, numberInterval) &&\n                    target[0] !== \"+\" // Most likely a telephone number.\n                ) {\n                    return num;\n                } else {\n                    return target;\n                }\n            }\n        }\n\n        case \"object\": {\n            if (target === null) {\n                return null;\n            } else if (isArrayLike(target, true)) {\n                return ensureArray(target).map(ensureType);\n            } else if (isDictLike(target)) {\n                return keysOf(target).reduce((result, key: string) => {\n                    result[key] = ensureType(target[key]);\n                    return result;\n                }, <Record<string, any>>{});\n            } else {\n                return target;\n            }\n        }\n\n        default:\n            return target;\n    }\n}\n\nexport function ensureArray<T>(value: ArrayLike<T>): T[] {\n    return Array.isArray(value) ? value : Array.from(value);\n}","/**\n * Checks if a number is between two numbers (gte than the minimal value and lte\n * than the maximum value).\n */\nexport default function isBetween(value: number, [min, max]: [number, number]) {\n    return value >= min && value <= max;\n}","export type Global = Ensured<Partial<NodeJS.Global & Window & typeof globalThis>, keyof Omit<NodeJS.Global,\n    \"Buffer\" |\n    \"clearImmediate\" |\n    \"gc\" |\n    \"GLOBAL\" |\n    \"global\" |\n    \"process\" |\n    \"root\" |\n    \"setImmediate\" |\n    \"v8debug\">>;\n\n/** Gets the global object of the host environment. */\nexport default function getGlobal(): Global;\n/** Returns a property from the global object. */\nexport default function getGlobal<P extends keyof Global>(prop: P): Global[P];\n/** Returns a property from the global object. */\nexport default function getGlobal(prop: string): any;\nexport default function getGlobal(prop: string = void 0): any {\n    let _global: Global & { [prop: string]: any; };\n\n    if (typeof globalThis === \"object\") {\n        _global = <any>globalThis;\n    } else if (typeof self === \"object\") {\n        _global = self;\n    } else if (typeof global === \"object\") {\n        _global = <any>global;\n    } else if (typeof window === \"object\") {\n        _global = window;\n    }\n\n    return _global && (prop ? _global[prop] : _global);\n}\n","/**\n * Checks if the value is a number or numeric string.\n */\nexport default function isNumeric(\n    value: any\n): value is (number | bigint | string) {\n    let type = typeof value;\n    return (type === \"number\" || type === \"bigint\" || type === \"string\")\n        && !isNaN(Number(value));\n}","import isVoid from './isVoid';\n\n/**\n * Checks if a property name is one of the properties of the target object.\n */\nexport default function isOwnKey<T>(\n    obj: T,\n    prop: string | number | symbol\n): prop is keyof T {\n    return !isVoid(obj) && Object.prototype.hasOwnProperty.call(obj, prop);\n}","/** Generates a random number within the range from `min` to `max`. */\nexport default function rand(min: number, max: number) {\n    return Number(min) + Math.floor(Math.random() * (max - min + 1));\n}","import \"./types\";\nimport count from \"./count\";\nimport define from \"./define\";\nimport diff from \"./diff\";\nimport ensureType from \"./ensureType\";\nimport flatObject from \"./flatObject\";\nimport getGlobal from \"./getGlobal\";\nimport isBetween from \"./isBetween\";\nimport isEmpty from \"./isEmpty\";\nimport isFloat from \"./isFloat\";\nimport isInteger from \"./isInteger\";\nimport isNumeric from \"./isNumeric\";\nimport isOwnKey from \"./isOwnKey\";\nimport isOwnMethod from \"./isOwnMethod\";\nimport isSubClassOf from \"./isSubClassOf\";\nimport isVoid from \"./isVoid\";\nimport keysOf from \"./keysOf\";\nimport omit from \"./omit\";\nimport omitVoid from \"./omitVoid\";\nimport patch from \"./patch\";\nimport pick from \"./pick\";\nimport rand from \"./rand\";\nimport randStr from \"./randStr\";\nimport sleep from \"./sleep\";\nimport sort from \"./sort\";\nimport split from \"./split\";\nimport timestamp from \"./timestamp\";\nimport typeAs from \"./typeAs\";\nimport typeOf from \"./typeOf\";\nimport until from \"./until\";\nimport useThrottle from \"./useThrottle\";\nimport wrap from \"./wrap\";\n\nexport {\n    count,\n    define,\n    diff,\n    ensureType,\n    flatObject,\n    getGlobal,\n    isBetween,\n    isFloat,\n    isInteger,\n    isNumeric,\n    isEmpty,\n    isOwnKey,\n    isOwnMethod,\n    isSubClassOf,\n    isVoid,\n    keysOf,\n    omit,\n    omitVoid,\n    patch,\n    pick,\n    rand,\n    randStr,\n    sleep,\n    sort,\n    split,\n    timestamp,\n    typeAs,\n    typeOf,\n    until,\n    useThrottle,\n    wrap\n};\n","import { isArrayLike, isBufferLike, isCollectionLike } from \"is-like\";\n\nconst bytes: (str: string) => number = require(\"utf8-length\");\nconst encoder = typeof TextEncoder === \"function\" ? new TextEncoder() : null;\n\nexport default count;\n\n/** Counts the length of a string. */\nfunction count(str: string, byteLength?: boolean): number;\n/** Counts how many times a substring appeared in the given string. */\nfunction count(str: string, substr: string): number;\n/** Counts the length of an array-like object. */\nfunction count<T>(arr: ArrayLike<T>): number;\n/** Counts how many times an element appeared in the given array-like object. */\nfunction count<T>(arr: ArrayLike<T>, ele: T): number;\n/** Counts the size of a collection. */\nfunction count(collection: Map<any, any> | Set<any>): number;\n/** Counts the capacity of an object (of how many properties it has). */\nfunction count(obj: any): number;\nfunction count(target: any, option: any = void 0) {\n    if (typeof target === \"string\") {\n        if (typeof option === \"string\") {\n            return target.split(option).length - 1;\n        } else if (option === true) {\n            if (typeof Buffer === \"function\" &&\n                typeof Buffer.byteLength === \"function\"\n            ) {\n                return Buffer.byteLength(target);\n            } else if (encoder) {\n                return encoder.encode(target).byteLength;\n            } else {\n                return bytes(target);\n            }\n        } else {\n            return target.length;\n        }\n    } else if (isArrayLike(target)) {\n        if (arguments.length === 2) {\n            let times = 0;\n\n            for (let i = target.length; i--;) {\n                // treat 0 equals -0 and NaN equals NaN\n                if (target[i] === option || Object.is(target[i], option)) {\n                    times++;\n                }\n            }\n\n            return times;\n        } else {\n            return target.length;\n        }\n    } else if (isBufferLike(target)) {\n        return target.byteLength;\n    } else if (isCollectionLike(target, true)) {\n        return target.size;\n    } else {\n        return Object.keys(target).length;\n    }\n}","module.exports = function(s) {\n  return ~-encodeURI(s).split(/%..|./).length\n}\n","\"use strict\";\n\n/**\n * Checks if an object could be an instantiable class.\n * @param {any} obj\n * @returns {obj is new (...args: any[]) => any}\n */\nfunction couldBeClass(obj) {\n    if (typeof obj != \"function\") return false;\n\n    // async function or arrow function\n    if (obj.prototype === undefined)\n        return false;\n\n    // generator function and malformed inheritance\n    if (obj.prototype.constructor !== obj)\n        return false;\n\n    // has own prototype properties\n    if (Object.getOwnPropertyNames(obj.prototype).length >= 2)\n        return true;\n\n    var str = String(obj);\n\n    // ES6 class\n    if (str.slice(0, 5) == \"class\")\n        return true;\n\n    // anonymous function\n    if (/^function\\s*\\(|^function anonymous\\(/.test(str))\n        return false;\n\n    var hasThis = /(call|apply|_classCallCheck)\\(this(, arguments)?\\)|\\bthis(.\\S+|\\[.+?\\])\\s*(=|\\()|=\\s*this[,;]/.test(str);\n\n    // Upper-cased first char of the name and has `this` in the body, or it's\n    // a native class in ES5 style.\n    if (/^function\\s+[A-Z]/.test(str) && (hasThis ||\n        (/\\[native code\\]/.test(str) &&\n            obj.name !== \"BigInt\" && // ES6 BigInt and Symbol is not class\n            obj.name !== \"Symbol\"\n        )\n    )) {\n        return true;\n    }\n\n    // TypeScript anonymous class to ES5 with default export\n    if (hasThis && obj.name === \"default_1\")\n        return true;\n\n    return false;\n}\n\nexports.couldBeClass = couldBeClass;\nexports.default = couldBeClass;","import { isDictLike } from \"is-like\";\nimport isEmpty from './isEmpty';\nimport isVoid from './isVoid';\n\n\n/**\n * Creates an array that contains the difference set between `origin` and\n * `input`;\n */\nexport default function diff<T>(origin: T[], input: T[]): T[];\n/**\n * Evaluates the differences between `origin` and `input`, if a property exists\n * in both objects and the values are not equal, the `input` one will be taken.\n * \n * NOTE: This function treats all void values equal and will not differ them.\n */\nexport default function diff<T, U>(origin: T, input: U): Diff<T, U>;\nexport default function diff<T, U>(origin: T, input: U, deep: true): DeepPartial<T & U>;\nexport default function diff(origin: any, input: any, deep = false) {\n    if (Array.isArray(origin) && Array.isArray(input)) {\n        return [\n            ...input.filter(value => !origin.includes(value)),\n            ...origin.filter(value => !input.includes(value))\n        ];\n    } else if (isDictLike(origin) && isDictLike(input)) {\n        let keys = Reflect.ownKeys(input);\n        let _keys = Reflect.ownKeys(origin);\n        let result: any = {};\n\n        keys.forEach((key: string) => {\n            if (origin[key] !== input[key] &&\n                !(isVoid(origin[key]) && isVoid(input[key])) // ignore void values\n            ) {\n                if (deep &&\n                    typeof origin[key] === \"object\" && origin[key] !== null &&\n                    typeof input[key] === \"object\" && input[key] !== null\n                ) {\n                    let _result = diff(origin[key], input[key], deep);\n\n                    if (!isEmpty(_result)) {\n                        result[key] = _result;\n                    }\n                } else {\n                    result[key] = input[key];\n                }\n            }\n        });\n\n        _keys.forEach((key: string) => {\n            keys.includes(key) || (result[key] = origin[key]);\n        });\n\n        return result;\n    } else {\n        return input;\n    }\n}","import keysOf from './keysOf';\nimport isVoid from './isVoid';\nimport { isDictLike, isArrayLike, isBufferLike } from 'is-like';\n\ntype OmitChildrenNodes<T> = Pick<T, {\n    [K in keyof T]: T[K] extends TypedArray\n    ? K\n    : T[K] extends (any[] | ArrayLike<any> | Function | Constructor<any> | Map<any, any> | Set<any> | Promise<any> | TypedArray)\n    ? K\n    : T[K] extends object\n    ? never\n    : K;\n}[keyof T]>;\n\ntype OmitChildrenElements<T> = Pick<T, {\n    [K in keyof T]: T[K] extends TypedArray\n    ? K\n    : T[K] extends (Function | Constructor<any> | Map<any, any> | Set<any> | Promise<any> | TypedArray)\n    ? K\n    : T[K] extends (object | any[] | ArrayLike<any>)\n    ? never\n    : K;\n}[keyof T]>;\n\n/**\n * Create an object with flatted properties of the original object, the children\n * nodes' properties will be transformed to a string-represented path.\n * NOTE: this function also flat array/array-like nodes (except for TypedArray).\n * @param depth Default value: `1`.\n * @example\n *  flatObject({ foo: { bar: \"Hello, World!\" } }) === { \"foo.bar\": \"Hello, World!\" }\n */\nexport default function flatObject<T extends object>(\n    obj: T,\n    depth?: number\n): OmitChildrenNodes<T> & Record<string | symbol, any>;\nexport default function flatObject<T extends object>(\n    obj: T,\n    depth: number,\n    flatArray: true\n): OmitChildrenElements<T> & Record<string | symbol, any>;\nexport default function flatObject(obj: any, depth = 1, flatArray = false) {\n    return flatDeep({}, obj, void 0, 0, depth, flatArray);\n}\n\nfunction flatDeep(\n    carrier: any,\n    source: any,\n    field: string,\n    depth: number,\n    maxDepth: number,\n    flatArray: boolean\n) {\n    let isArr: boolean;\n    let isDict: boolean;\n    let isContent = !isVoid(field);\n\n    if (depth === maxDepth || (\n        !(isArr = isArrayLike(source, true) && !isBufferLike(source)) &&\n        !(isDict = isDictLike(source))\n    )) {\n        carrier[field] = source;\n    } else if (isDict) {\n        keysOf(<object>source).forEach((key: string | symbol) => {\n            let value = source[key];\n\n            if (typeof key === \"symbol\") {\n                if (depth === 0) { // only allow top-level symbol properties\n                    carrier[key] = value;\n                }\n            } else {\n                flatDeep(\n                    carrier,\n                    value,\n                    isContent ? `${field}.${key}` : key,\n                    isContent ? depth + 1 : depth,\n                    maxDepth,\n                    flatArray\n                );\n            }\n        });\n    } else if (isArr) {\n        if (flatArray) {\n            for (let i = 0, len = (<any[]>source).length; i < len; ++i) {\n                flatDeep(\n                    carrier,\n                    (<any[]>source)[i],\n                    isContent ? `${field}.${i}` : String(i),\n                    isContent ? depth + 1 : depth,\n                    maxDepth,\n                    flatArray\n                );\n            }\n        } else {\n            carrier[field] = source;\n        }\n    }\n\n    return carrier;\n}\n","/**\n * Checks if the value is a float number.\n */\nexport default function isFloat(value: any): value is number {\n    return typeof value === \"number\"\n        && !isNaN(value)\n        && (!Number.isFinite(value) || value % 1 !== 0);\n}","/**\n * Checks if the value is an integer number (or bigint).\n */\nexport default function isInteger(value: any): value is (number | bigint) {\n    let type = typeof value;\n    return type === \"bigint\"\n        || (type === \"number\" &&\n            !isNaN(value) &&\n            Number.isFinite(value) &&\n            value % 1 === 0);\n}","/**\n * Checks if a property name is one of the own methods of the target object (,\n * this method is defined in the prototype of the object and is not inherited\n * from a super class).\n */\nexport default function isOwnMethod<T>(obj: T, method: string): boolean {\n    let proto = Object.getPrototypeOf(obj);\n    return proto !== null\n        && Object.prototype.hasOwnProperty.call(proto, method)\n        && typeof proto[method] === \"function\";\n}","/** Checks if a class is a sub-class of (inherited from) the base class. */\nexport default function isSubClassOf<T, B>(\n    target: Constructor<T>,\n    base: Constructor<B>\n) {\n    return typeof target === \"function\"\n        && typeof base === \"function\"\n        && target.prototype instanceof base;\n}","import isOwnKey from './isOwnKey';\n\n/** Creates an array composed without the picked items. */\nexport default function omit<T extends any>(arr: T[], items: T[]): T[];\n/**\n * Creates an object composed without the picked properties.\n * NOTE: this function will collect both the own keys and the enumerable\n * properties from the prototype chain.\n */\nexport default function omit<T extends object, U extends keyof T>(obj: T, props: (U | symbol)[]): Omit<T, U>;\nexport default function omit(obj: any, props: (string | number | symbol)[]) {\n    if (Array.isArray(obj)) {\n        return obj.filter(i => !props.includes(i));\n    } else {\n        let keys = Reflect.ownKeys(obj);\n        let result = keys.reduce((result: any, prop: symbol) => {\n            props.includes(prop) || (result[prop] = obj[prop]);\n            return result;\n        }, {});\n\n        // collect properties from the prototype chain\n        for (let prop in Object.getPrototypeOf(obj)) {\n            props.includes(prop) || (result[prop] = obj[prop]);\n        }\n\n        // special treatment for Error types\n        if (obj instanceof Error) {\n            [\"name\", \"message\"].forEach(prop => {\n                if (!props.includes(prop) && !isOwnKey(result, prop))\n                    result[prop] = (<any>obj)[prop];\n            });\n        }\n\n        return result;\n    }\n}\n","import isVoid from \"./isVoid\";\nimport isEmpty from \"./isEmpty\";\nimport keysOf from \"./keysOf\";\nimport { isArrayLike, isBufferLike } from 'is-like';\n\n/**\n * Creates an object composed with only the non-void properties.\n * @param omitEmptyObjects If set, empty properties of type `object` will be\n *  removed as well.\n * @param omitEmptyStrings If set, empty properties of type `string` will be\n *  removed as well.\n */\nexport default function omitVoid<T>(\n    target: T,\n    deep = false,\n    omitEmptyObjects = false,\n    omitEmptyStrings = false\n): T {\n    return doOmit(target, deep, omitEmptyObjects, omitEmptyStrings, 0);\n}\n\nexport function doOmit<T extends any>(\n    target: T,\n    deep: boolean,\n    omitEmptyObjects: boolean,\n    omitEmptyStrings: boolean,\n    depth: number\n): T {\n    if (typeof target === \"string\") {\n        return omitEmptyStrings && target.trim() === \"\" ? void 0 : target;\n    } else if (target === null\n        || typeof target !== \"object\"\n        || isBufferLike(target)\n    ) {\n        return target;\n    } else if (omitEmptyObjects && isEmpty(target)) {\n        return depth > 0 ? void 0 : (isArrayLike(target, true) ? [] : {}) as any;\n    }\n\n    if (isArrayLike(target, true)) {\n        let arr: any[] = [];\n\n        for (let i = 0, len = (<ArrayLike<any>>target).length; i < len; ++i) {\n            let value = target[i];\n\n            if (!isVoid(value)) {\n                if (deep) {\n                    value = doOmit(\n                        value,\n                        deep,\n                        omitEmptyObjects,\n                        omitEmptyStrings,\n                        depth + 1);\n                    isVoid(value) || arr.push(value);\n                } else {\n                    arr.push(value);\n                }\n            }\n        }\n\n        if (depth > 0 && omitEmptyObjects && isEmpty(arr)) {\n            return void 0;\n        } else {\n            return arr as any;\n        }\n    } else {\n        let obj = keysOf(<object><any>target).reduce((obj, key) => {\n            let value = target[key];\n\n            if (!isVoid(value)) {\n                if (deep) {\n                    value = doOmit(\n                        value,\n                        deep,\n                        omitEmptyObjects,\n                        omitEmptyStrings,\n                        depth + 1);\n                    isVoid(value) || (obj[key] = value);\n                } else {\n                    obj[key] = value;\n                }\n            }\n\n            return obj;\n        }, <T>{});\n\n        if (depth > 0 && omitEmptyObjects && isEmpty(obj)) {\n            return void 0;\n        } else {\n            return obj;\n        }\n    }\n}","import { isDictLike } from 'is-like';\nimport isEmpty from './isEmpty';\nimport isVoid from './isVoid';\n\n\n/**\n * Patches the differences onto the `origin` object from the `input` object. If\n * a property exists in both objects and the values are not equal, the `input`\n * one will be taken. However, those properties that are only presents in the\n * `origin` object will remain untouched.\n * \n * NOTE: This function mutates the `origin` object and returns the patched\n * differences, when patching, any void value in the `input` object will be\n * ignored.\n * \n * This function is very useful, for example, a client issued a patch of the\n * resource and the server wants to know what properties has been modified by\n * this update so that it can perform some extra operations to provide a better\n * user experience.\n */\nexport default function patch<T, U>(\n    origin: T,\n    input: U,\n    deep = false,\n    ignoreEmptyStrings = false,\n): T & Partial<U> {\n    return doPatch(origin, input, deep, ignoreEmptyStrings, false);\n}\n\nfunction doPatch(\n    origin: any,\n    input: any,\n    deep: boolean,\n    ignoreEmptyStrings: boolean,\n    isChildNode: boolean\n) {\n    if (isDictLike(origin) && isDictLike(input)) {\n        let keys = Reflect.ownKeys(input);\n        let result: any = {};\n\n        keys.forEach((key: string) => {\n            if (origin[key] !== input[key] &&\n                !isVoid(input[key]) && // ignore invalid values\n                (!ignoreEmptyStrings || input[key] !== \"\")\n            ) {\n                if (deep && isDictLike(origin[key]) && isDictLike(input[key])) {\n                    let _result = doPatch(\n                        origin[key],\n                        input[key],\n                        deep,\n                        ignoreEmptyStrings,\n                        true\n                    );\n\n                    if (!isEmpty(_result)) {\n                        result[key] = _result;\n                        Object.assign(origin[key], input[key]);\n                    }\n                } else {\n                    result[key] = origin[key] = input[key];\n                }\n            }\n        });\n\n        return result;\n    } else if (isChildNode) {\n        return input;\n    } else {\n        return {};\n    }\n}\n","/** Creates an array composed of the picked elements. */\nexport default function pick<T extends any[]>(arr: T, indexes: number[]): T;\n/** Creates an object composed of the picked properties. */\nexport default function pick<T extends object, U extends keyof T>(obj: T, props: (U | symbol)[]): Pick<T, U>;\nexport default function pick(obj: any, props: (string | number | symbol)[]) {\n    if (Array.isArray(obj)) {\n        return (<number[]>props).map(i => obj[i]);\n    } else {\n        return props.reduce((result: any, prop: string) => {\n            prop in obj && (result[prop] = obj[prop]);\n            return result;\n        }, {});\n    }\n}","import rand from './rand';\n\n/** \n * Generates a random string.\n * @param chars The possible characters.\n */\nexport default function randStr(\n    length: number,\n    chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n) {\n    let str = \"\";\n    let max = chars.length - 1;\n\n    while (0 < length--) {\n        str += chars[rand(0, max)];\n    }\n\n    return str;\n}","/**\n * Delays the execution context for a while before running the remaining\n * procedures.\n */\nexport default function sleep(ms: number) {\n    return new Promise<void>(resolve => setTimeout(resolve, Number(ms)));\n}","import { isArrayLike, isDictLike } from 'is-like';\nimport { ensureArray } from \"./ensureType\";\n\n/**\n * Creates a new array with sorted elements of the original array, the sorted\n * array is in ascending order by default, unless providing a `compare` function\n * to determine how should the elements be ordered.\n * Unlike `Array.prototype.sort()`, this function always guarantees a stable\n * sort; and if all elements are numbers, they're sorted by their values instead\n * of converting to strings for sorting.\n */\nexport default function sort<T>(arr: ArrayLike<T>, compare?: (a: T, b: T) => number): T[];\n/**\n * Creates a new object with sorted keys (in ascending order) of the original\n * object, if `deep` is set, the children nodes will be sorted as well.\n * Note: symbol keys are not sorted and remain their original order.\n */\nexport default function sort<T extends object>(obj: T, deep?: boolean): T;\nexport default function sort(\n    target: any | any[],\n    method: ((a: any, b: any) => number) | boolean = void 0\n) {\n    if (isArrayLike(target, true)) {\n        let arr = ensureArray(target);\n        let compare = <(a: any, b: any) => number>method;\n\n        // If the compare function is omitted and all the elements are numbers\n        // (or of bigint), sort them by their values.\n        if (!compare && (onlyNumbers(arr) || onlyNumbers(arr, \"bigint\"))) {\n            compare = (a: number, b: number) => a - b;\n        }\n\n        if (shouldUseNativeSort(arr)) {\n            return arr.sort(compare);\n        }\n\n        // Emulate stable sort.\n        // Reference: http://blog.vjeux.com/2010/javascript/javascript-sorting-table.html\n        return arr\n            .map((value, index) => ({ value, index }))\n            .sort((a, b) => compare(a.value, b.value) || a.index - b.index)\n            .map(({ value }) => value);\n    } else if (isDictLike(target)) {\n        let deep = Boolean(method);\n        let keys = [\n            ...sort(Object.getOwnPropertyNames(target)), // sort the keys\n            ...Object.getOwnPropertySymbols(target)\n        ];\n\n        return keys.reduce((result, key: string) => {\n            let value = target[key];\n\n            if (deep) {\n                if (isArrayLike(value, true)) {\n                    value = ensureArray(value).map(item => {\n                        return isDictLike(item) ? sort(item, deep) : item;\n                    });\n                } else if (isDictLike(value)) {\n                    value = sort(value, deep);\n                }\n            }\n\n            result[key] = value;\n            return result;\n        }, {} as any);\n    } else {\n        if (typeof method === \"function\") {\n            throw new TypeError(\"The target to sort is not an array\");\n        } else if (typeof method === \"boolean\") {\n            throw new TypeError(\"The target to sort is not a pure object\");\n        } else {\n            throw new TypeError(\n                \"The target to sort is not an array or a pure object\"\n            );\n        }\n    }\n}\n\nfunction onlyNumbers(arr: any[], type: \"number\" | \"bigint\" = \"number\") {\n    return arr.every(ele => typeof ele === type);\n}\n\nfunction shouldUseNativeSort(arr: any[]) {\n    if (typeof process?.versions === \"object\") {\n        return arr.length <= 10\n            || parseFloat(process.versions.v8 || \"0\") >= 7.0;\n    } else if (typeof navigator?.userAgent === \"string\") {\n        let match = navigator.userAgent.match(\n            /(Chrome|Firefox|Safari|Edge|OPR)\\/(\\d+)/\n        );\n\n        if (match) {\n            let name = match[1];\n            let version = parseFloat(match[2]);\n\n            if ((name === \"Edge\" && arr.length <= 512) ||\n                (name === \"Chrome\" && (version >= 70) || arr.length <= 10) ||\n                (name === \"Firefox\" && version >= 3) ||\n                (name === \"Safari\" && version >= 10.1) ||\n                (name === \"OPR\" && version >= 54)\n            ) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}","import { isArrayLike, isBufferLike, isCollectionLike } from \"is-like\";\n\nfunction checkNumberArgument(name: string, value: any) {\n    if (typeof value !== \"number\") {\n        throw new TypeError(`argument '${name}' must be a number`);\n    } else if (value < 1) {\n        throw new RangeError(`argument '${name}' must be 1 or higher`);\n    }\n}\n\nfunction splitArrayLike(arr: ArrayLike<any>, length: number, total: number = void 0) {\n    let result = [];\n\n    for (let i = 0, j = (total || arr.length); i < j; i += length) {\n        if (typeof arr[\"slice\"] === \"function\") {\n            result.push(arr[\"slice\"](i, i + length));\n        } else {\n            result.push(Array.prototype.slice.call(arr, i, i + length));\n        }\n    }\n\n    return result;\n}\n\nfunction splitBuffer(buf: Buffer, sep: string | Buffer) {\n    let result: Buffer[] = [];\n    let offset = 0;\n    let length = sep.length;\n    let total = buf.byteLength;\n\n    while (offset < total) {\n        let index = buf.indexOf(sep, offset);\n\n        if (index !== -1) {\n            result.push(buf.slice(offset, index));\n            offset = index + length;\n        } else {\n            result.push(buf.slice(offset));\n            offset = total;\n        }\n    }\n\n    return result;\n}\n\nfunction splitObject(obj: any, size: number) {\n    let proto = Object.getPrototypeOf(obj);\n    let keyChunks = splitArrayLike(Object.keys(obj), size);\n    let result = [];\n\n    for (let keys of keyChunks) {\n        let chunk = Object.create(proto);\n        result.push(chunk);\n\n        for (let key of keys) {\n            chunk[key] = obj[key];\n        }\n    }\n\n    return result;\n}\n\nfunction splitNumber(num: number, step: number) {\n    let result: number[] = [];\n    let offset = 0;\n\n    while ((offset += step) <= num) {\n        result.push(offset);\n    }\n\n    if (num > offset - step) {\n        result.push(num);\n    }\n\n    return result;\n}\n\n/** Splits a string into chunks by the given separator. */\nexport default function split(str: string, separator: string | RegExp): string[];\n/** Splits a string into chunks with the given length. */\nexport default function split(str: string, length: number): string[];\n/** Splits a number into serials with the given step. */\nexport default function split(num: number, step: number): number[];\n/** Splits a Buffer into chunks by the given separator. */\nexport default function split<T extends Buffer>(buf: T, separator: string | Buffer): T[];\n/** Splits a Buffer, an ArrayBuffer, or a TypedArray into chunks with the given byteLength. */\nexport default function split<T extends Buffer | ArrayBufferLike | TypedArray>(buf: T, byteLength: number): T[];\n/** Splits an array into chunks of arrays with the given length. */\nexport default function split<T extends Array<any>>(arr: T, length: number): T[];\n/** Splits an array-like object into chunks of arrays with the given length. */\nexport default function split<T>(list: ArrayLike<T>, length: number): T[][];\n/** Splits a collection into chunks with the given size. */\nexport default function split<T extends Set<any> | Map<any, any>>(collection: T, size: number): T[];\n/** Splits an object into multiple objects with partial properties. */\nexport default function split<T extends object>(obj: T extends Function ? never : T, size: number): Partial<T>[];\nexport default function split(obj: any, sep: any) {\n    if (arguments.length < 2) {\n        throw new SyntaxError(`2 arguments required, received ${arguments.length}`);\n    } else if (typeof obj === \"string\") {\n        if (typeof sep === \"string\" || sep instanceof RegExp) {\n            return obj.split(sep);\n        } else {\n            checkNumberArgument(\"length\", sep);\n            return splitArrayLike(obj, sep);\n        }\n    } else if (typeof obj === \"number\") {\n        checkNumberArgument(\"step\", sep);\n        return splitNumber(obj, sep);\n    } else if (typeof Buffer === \"function\"\n        && Buffer.isBuffer(obj)\n        && (typeof sep === \"string\" || Buffer.isBuffer(sep))\n    ) {\n        return splitBuffer(obj, sep);\n    } else if (isBufferLike(obj)) {\n        checkNumberArgument(\"byteLength\", sep);\n        return splitArrayLike(obj, sep, obj.byteLength);\n    } else if (isArrayLike(obj)) {\n        checkNumberArgument(\"length\", sep);\n        return splitArrayLike(obj, sep);\n    } else if (isCollectionLike(obj)) {\n        let ctor = obj[\"constructor\"];\n        checkNumberArgument(\"size\", sep);\n        return splitArrayLike([...obj], sep).map(list => new ctor(list));\n    } else if (typeof obj === \"object\" && obj !== null) {\n        checkNumberArgument(\"size\", sep);\n        return splitObject(obj, sep);\n    } else {\n        throw new TypeError(\"argument 'obj' must be a string, a number or an object\");\n    }\n}","import isNumeric from './isNumeric';\nimport isVoid from './isVoid';\n\nexport default timestamp;\n\n/** Returns the current UNIX timestamp. */\nfunction timestamp(ms?: boolean): number;\n/**\n * Returns the UNIX timestamp according the input date or time.\n * \n * TIP: since v0.2.3, this function supports the date string format in\n * `<year>,<monthIndex>,[date],[hours],[minutes],[seconds],[milliseconds]`,\n * which segments is used as arguments for `Date` constructor.\n * \n * NOTE: if the input value is a number, it must be of milliseconds.\n */\nfunction timestamp(input: string | number | Date, ms?: boolean): number;\nfunction timestamp(input: any, ms = false) {\n    if (typeof input === \"boolean\") {\n        ms = input;\n        input = void 0;\n    }\n\n    input = input || new Date();\n\n    if (input instanceof Date) {\n        return ms ? input.valueOf() : Math.floor(input.valueOf() / 1000);\n    } else if (typeof input === \"number\") {\n        return ms ? input : Math.floor(input / 1000);\n    } else {\n        let date: Date;\n        let dateTime = String(input).trim();\n\n        if (dateTime.includes(\",\") && dateTime.split(\",\").every(isNumeric)) {\n            date = parseDateRawArgs(dateTime);\n        } else {\n            if (/^\\d{1,2}:\\d{2}(:\\d{2})?/.test(dateTime)) { // time only\n                date = new Date();\n                dateTime = date.getFullYear()\n                    + \"-\" + (date.getMonth() + 1)\n                    + \"-\" + date.getDate()\n                    + \" \" + dateTime;\n            }\n\n            date = new Date(dateTime);\n        }\n\n        if (String(date) !== \"Invalid Date\") {\n            return ms ? date.valueOf() : Math.floor(date.valueOf() / 1000);\n        } else {\n            throw new Error(\"The input argument is not a valid date-time string\");\n        }\n    }\n}\n\nfunction parseDateRawArgs(str: string) {\n    let [Y, M, D, H, m, s, ms] = str.split(\",\").map(Number);\n    let date = new Date();\n\n    isVoid(Y) || date.setFullYear(Y);\n    isVoid(M) || date.setMonth(M);\n    isVoid(D) || date.setDate(D);\n    isVoid(H) || date.setHours(H);\n    isVoid(m) || date.setMinutes(m);\n    isVoid(s) || date.setSeconds(s);\n    isVoid(ms) || date.setMilliseconds(ms);\n\n    return date;\n}","import getGlobal from './getGlobal';\nimport typeOf from './typeOf';\n\n\n/**\n * Returns the object if it's an instance of the type, otherwise returns `null`.\n * This function is used with the syntax shown in the example.\n * @example\n *  let foo = typeAs(bar, SomeType)?.doSomething();\n */\nexport default function typeAs(target: any, type: StringConstructor): string;\nexport default function typeAs(target: any, type: NumberConstructor): number;\nexport default function typeAs(target: any, type: BigIntConstructor): bigint;\nexport default function typeAs(target: any, type: BooleanConstructor): boolean;\nexport default function typeAs(target: any, type: SymbolConstructor): symbol;\nexport default function typeAs<T>(target: T, type: Constructor<T>): T;\nexport default function typeAs(target: any, type: any): any {\n    if (typeOf(type) !== \"class\" &&\n        type !== Symbol &&\n        (typeof BigInt === \"function\" && type !== BigInt)\n    ) {\n        throw new TypeError(\"'type' must be a valid constructor\");\n    }\n\n    let _type: any;\n    let primitiveMap = <Record<string, Function>>{\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": getGlobal(\"BigInt\"),\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n\n    if (target instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return type(target); // make sure the primitives are returned.\n        } else {\n            return target;\n        }\n    } else if ((_type = typeof target) && primitiveMap[_type] === type) {\n        return target;\n    }\n\n    return null;\n}","/**\n * Hangs the execution context until the test is passed.\n */\nexport default async function until(test: () => boolean | Promise<boolean>) {\n    if (typeof setImmediate === \"undefined\") {\n        var setImmediate = (cb: () => void) => setTimeout(cb, 0);\n    }\n\n    do { await new Promise(setImmediate) } while ((await test()) == false);\n}","import isEmpty from './isEmpty';\n\nif (typeof setImmediate === \"undefined\") {\n    // compatible with browsers\n    var setImmediate = (cb: () => void) => setTimeout(cb, 0);\n}\n\nexport default useThrottle;\n\n/**\n * Uses throttle strategy on the given resource and returns a throttle function,\n * if a subsequent call happens within the `interval` time, the previous result\n * will be returned and the current `handle` function will not be invoked.\n * \n * NOTE: this function only creates the throttle function once and uses\n * `interval` only once, any later calls on the same `resource` will return the\n * initial throttle function.\n */\nfunction useThrottle(resource: any, interval: number) {\n    if (interval < 1) {\n        throw new RangeError(\n            \"The 'interval' time for throttle must not be smaller than 1\"\n        );\n    } else if (!useThrottle.gcTimer) {\n        let { gcInterval, tasks: jobs } = useThrottle;\n\n        useThrottle.gcTimer = setInterval(() => {\n            let now = Date.now();\n\n            jobs.forEach(({ interval, lastActive }, key) => {\n                if (now - lastActive > Math.max(interval + 5, gcInterval)) {\n                    jobs.delete(key);\n                }\n            });\n        }, gcInterval);\n        \n        if (typeof useThrottle.gcTimer.unref === \"function\") {\n            useThrottle.gcTimer.unref();\n        }\n    }\n\n    let task = useThrottle.tasks.get(resource);\n\n    if (!task) {\n        useThrottle.tasks.set(resource, task = createThrottleTask(interval));\n    }\n\n    return task.func;\n}\n\nnamespace useThrottle {\n    export var gcInterval = 30000;\n    export let gcTimer: any = void 0;\n    export const tasks = new Map<any, ThrottleTask>();\n}\n\ntype ThrottleTask = {\n    interval: number;\n    lastActive: number;\n    cache: { value: any, error: any };\n    queue: Set<{ resolve: (value: any) => void, reject: (err: any) => void; }>;\n    func: <T, A extends any[]>(\n        handle: (...args: A) => T | Promise<T>,\n        ...args: A\n    ) => Promise<T>;\n};\n\nfunction createThrottleTask(interval: number): ThrottleTask {\n    let task: ThrottleTask = {\n        interval,\n        lastActive: 0,\n        cache: void 0,\n        queue: new Set(),\n        func: void 0\n    };\n\n    async function throttle<T, A extends any[]>(\n        this: ThrottleTask,\n        handle: (...args: A) => T | Promise<T>,\n        ...args: A\n    ): Promise<T> {\n        let now = Date.now();\n\n        if ((now - this.lastActive) >= interval) {\n            // Clear cache and update the invoke time before dispatching the\n            // new job.\n            this.cache = void 0;\n            this.lastActive = now;\n\n            let result: T;\n            let error: any;\n\n            try {\n                result = await handle(...args);\n                this.cache = { value: result, error: null };\n            } catch (err) {\n                this.cache = { value: void 0, error: error = err };\n            }\n\n            // Resolve or reject subsequent jobs once the result is ready,\n            // and make the procedure asynchronous so that they will be\n            // performed after the current job.\n            setImmediate(() => {\n                if (!isEmpty(this.queue)) {\n                    this.queue.forEach((job) => {\n                        error ? job.reject(error) : job.resolve(result);\n                        this.queue.delete(job);\n                    });\n                }\n            });\n\n            if (error)\n                throw error;\n            else\n                return result;\n        } else if (this.cache) {\n            if (this.cache.error)\n                throw this.cache.error;\n            else\n                return this.cache.value as T;\n        } else {\n            return new Promise<T>((resolve, reject) => {\n                this.queue.add({ resolve, reject });\n            });\n        }\n    }\n\n    task.func = throttle.bind(task);\n    return task;\n}\n","import define from './define';\n\n/**\n * Wraps a function inside another function and returns a new function that\n * copies the original function's name and properties.\n */\nexport default function wrap<T extends (...args: any[]) => any>(\n    target: T,\n    wrapper: (target: T, ...args: Parameters<T>) => ReturnType<T>\n) {\n    let fn = function (this: any, ...args: Parameters<T>): ReturnType<T> {\n        return wrapper.call(this, target, ...args);\n    };\n\n    define(fn, \"name\", target.name);\n    define(fn, \"length\", target.length);\n    define(fn, \"toString\", target.toString.bind(target));\n\n    return fn as T;\n}"],"sourceRoot":""}