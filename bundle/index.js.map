{"version":3,"sources":["webpack://@hyurl/utils/webpack/universalModuleDefinition","webpack://@hyurl/utils/./node_modules/could-be-class/index.js","webpack://@hyurl/utils/./node_modules/is-like/index.js","webpack://@hyurl/utils/./src/count.ts","webpack://@hyurl/utils/./src/define.ts","webpack://@hyurl/utils/./src/diff.ts","webpack://@hyurl/utils/./src/ensureType.ts","webpack://@hyurl/utils/./src/flatObject.ts","webpack://@hyurl/utils/./src/getGlobal.ts","webpack://@hyurl/utils/./src/index.ts","webpack://@hyurl/utils/./src/isBetween.ts","webpack://@hyurl/utils/./src/isEmpty.ts","webpack://@hyurl/utils/./src/isFloat.ts","webpack://@hyurl/utils/./src/isInteger.ts","webpack://@hyurl/utils/./src/isNumeric.ts","webpack://@hyurl/utils/./src/isOwnKey.ts","webpack://@hyurl/utils/./src/isOwnMethod.ts","webpack://@hyurl/utils/./src/isSubClassOf.ts","webpack://@hyurl/utils/./src/isVoid.ts","webpack://@hyurl/utils/./src/keysOf.ts","webpack://@hyurl/utils/./src/omit.ts","webpack://@hyurl/utils/./src/omitVoid.ts","webpack://@hyurl/utils/./src/patch.ts","webpack://@hyurl/utils/./src/pick.ts","webpack://@hyurl/utils/./src/rand.ts","webpack://@hyurl/utils/./src/randStr.ts","webpack://@hyurl/utils/./src/sleep.ts","webpack://@hyurl/utils/./src/sort.ts","webpack://@hyurl/utils/./src/split.ts","webpack://@hyurl/utils/./src/timestamp.ts","webpack://@hyurl/utils/./src/typeAs.ts","webpack://@hyurl/utils/./src/typeOf.ts","webpack://@hyurl/utils/./src/until.ts","webpack://@hyurl/utils/./src/useThrottle.ts","webpack://@hyurl/utils/./src/wrap.ts","webpack://@hyurl/utils/./node_modules/utf8-length/index.js","webpack://@hyurl/utils/webpack/bootstrap","webpack://@hyurl/utils/webpack/startup"],"names":["root","factory","exports","module","define","amd","this","couldBeClass","obj","undefined","prototype","constructor","Object","getOwnPropertyNames","length","str","String","slice","test","hasThis","name","default","isObjectWith","value","props","every","p","t","isArrayLike","strict","Array","isArray","indexes","keys","isNonEnumLength","includes","map","Number","filter","isFinite","hasIterator","Symbol","iterator","i","isCollectionLike","excludeWeakOnes","WeakMap","WeakSet","isBufferLike","isPromiseLike","defineProperty","isDictLike","Date","RegExp","JSON","stringify","e","isEmptyDict","isErrorLike","bytes","encoder","TextEncoder","target","option","split","Buffer","byteLength","encode","arguments","times","is","size","prop","enumerable","writable","isGetter","sign","isGetterAndSetter","configurable","diff","origin","input","deep","Reflect","ownKeys","_keys","result","forEach","key","_result","truePattern","falsePattern","nullPattern","nanPattern","infinityPattern","regexPattern","numberInterval","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","ensureArray","from","ensureType","re","NaN","match","num","isNaN","reduce","flatDeep","carrier","source","field","depth","maxDepth","flatArray","isArr","isDict","isContent","len","_global","globalThis","self","global","window","count","flatObject","getGlobal","isBetween","isEmpty","isFloat","isInteger","isNumeric","isOwnKey","isOwnMethod","isSubClassOf","isVoid","keysOf","omit","omitVoid","patch","pick","rand","randStr","sleep","sort","timestamp","typeAs","typeOf","until","useThrottle","wrap","min","max","BaseEmptyPrimitives","EmptyPrimitives","emptyPrimitives","Map","v","values","Set","k","BigInt","push","Boolean","type","hasOwnProperty","call","method","proto","getPrototypeOf","base","Error","doOmit","omitEmptyObjects","omitEmptyStrings","trim","arr","doPatch","ignoreEmptyStrings","isChildNode","assign","Math","floor","random","chars","ms","Promise","resolve","setTimeout","onlyNumbers","ele","compare","a","b","process","versions","parseFloat","v8","navigator","userAgent","version","Deno","shouldUseNativeSort","index","getOwnPropertySymbols","item","TypeError","checkNumberArgument","RangeError","splitArrayLike","total","j","splitBuffer","buf","sep","offset","indexOf","splitObject","keyChunks","chunk","create","splitNumber","step","SyntaxError","isBuffer","ctor","list","valueOf","date","dateTime","Y","M","D","H","m","s","setFullYear","setMonth","setDate","setHours","setMinutes","setSeconds","setMilliseconds","parseDateRawArgs","getFullYear","getMonth","getDate","_type","primitiveMap","toString","setImmediate","cb","resource","interval","gcTimer","gcInterval","tasks","jobs","setInterval","now","lastActive","delete","unref","task","get","set","cache","queue","func","handle","args","error","err","job","reject","add","bind","createThrottleTask","wrapper","fn","encodeURI","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAQ,gBAAkBD,IAE1BD,EAAK,gBAAkBC,IARzB,CASGK,MAAM,WACT,O,4BCHA,SAASC,EAAaC,GAClB,GAAkB,mBAAPA,EAAmB,OAAO,EAGrC,QAAsBC,IAAlBD,EAAIE,UACJ,OAAO,EAGX,GAAIF,EAAIE,UAAUC,cAAgBH,EAC9B,OAAO,EAGX,GAAII,OAAOC,oBAAoBL,EAAIE,WAAWI,QAAU,EACpD,OAAO,EAEX,IAAIC,EAAMC,OAAOR,GAGjB,GAAuB,SAAnBO,EAAIE,MAAM,EAAG,GACb,OAAO,EAGX,GAAI,uCAAuCC,KAAKH,GAC5C,OAAO,EAEX,IAAII,EAAU,gGAAgGD,KAAKH,GAInH,SAAI,oBAAoBG,KAAKH,MAASI,GACjC,kBAAkBD,KAAKH,IACP,WAAbP,EAAIY,MACS,WAAbZ,EAAIY,WAORD,GAAwB,cAAbX,EAAIY,MAMvBlB,EAAQK,aAAeA,EACvBL,EAAQmB,QAAUd,G,yBC7ClB,SAASe,EAAaC,KAAUC,GAE5B,MAD6B,iBAAVD,GAAgC,OAAVA,GACzBC,EAAMC,OAAM,EAAEC,EAAGC,KAAOD,KAAKH,UAAgBA,EAAMG,KAAOC,IAyB9E,SAASC,EAAYL,EAAOM,GAAS,GACjC,GAAIC,MAAMC,QAAQR,GACd,OAAO,EACJ,IAAKM,EACR,OAAOP,EAAaC,EAAO,CAAC,SAAU,YACb,iBAAVA,EACZ,GAAID,EAAaC,EAAO,CAAC,SAAU,WAAY,CAClD,IAEIS,EAFAC,EAAOrB,OAAOqB,KAAKV,GACnBW,GAAmBD,EAAKE,SAAS,UAGrC,GAAqB,IAAjBZ,EAAMT,QACmD,KAAxDkB,EAAUC,EAAKG,IAAIC,QAAQC,OAAOC,WAAWzB,OAC9C,OAAOoB,EACJ,CACH,IAAIM,EAAgD,mBAA3BjB,EAAMkB,OAAOC,UAEtC,IAAK,IAAIC,EAAIpB,EAAMT,OAAQ6B,KACvB,IAAKX,EAAQG,SAASQ,KAAQT,IAAmBM,EAC7C,OAAO,EAIf,OAAO,GAIf,OAAO,EAGX,SAASI,EAAiBrB,EAAOsB,GAAkB,GAC/C,OAAQvB,EAAaC,EAAO,CAAC,OAAQ,UAAW,CAACkB,OAAOC,SAAU,eACzDG,IACAtB,aAAiBuB,SAAWvB,aAAiBwB,SAG1D,SAASC,EAAazB,GAClB,OAAOD,EAAaC,EAAO,CAAC,aAAc,UAAW,CAAC,QAAS,aAWnE,SAAS0B,EAAc1B,GACnB,OAAOD,EAAaC,EAAO,CAAC,OAAQ,aAnFxCX,OAAOsC,eAAehD,EAAS,aAAc,CAAEqB,OAAO,IAsFtDrB,EAAQiD,WAjER,SAAoB5B,GAChB,QAAwB,iBAAVA,GAAgC,OAAVA,GAC5BA,EAAMZ,cAAgBC,SACpBW,aAAiB6B,MACjB7B,aAAiB8B,QAClBzB,EAAYL,GAAO,IAdhC,SAAqBf,GACjB,IACI,IAAIO,EAAMuC,KAAKC,UAAU/C,GACzB,MAAe,OAARO,GAAwB,OAARA,EACzB,MAAOyC,GACL,OAAO,GAUFC,CAAYlC,IACZyB,EAAazB,IACbqB,EAAiBrB,IACjB0B,EAAc1B,MAyD3BrB,EAAQ0B,YAAcA,EACtB1B,EAAQ0C,iBAAmBA,EAC3B1C,EAAQ8C,aAAeA,EACvB9C,EAAQwD,YAhBR,SAAqBnC,GACjB,OAAOD,EAAaC,EAChB,CAAC,OAAQ,UACT,CAAC,UAAW,UACZ,CAAC,QAAS,YAalBrB,EAAQ+C,cAAgBA,G,4EC5FxB,eAEMU,EAAiC,EAAQ,KACzCC,EAAiC,mBAAhBC,YAA6B,IAAIA,YAAgB,KAExE,UAcA,SAAeC,EAAaC,GACxB,GAAsB,iBAAXD,EACP,MAAsB,iBAAXC,EACAD,EAAOE,MAAMD,GAAQjD,OAAS,GACnB,IAAXiD,EACe,mBAAXE,QACsB,mBAAtBA,OAAOC,WAEPD,OAAOC,WAAWJ,GAClBF,EACAA,EAAQO,OAAOL,GAAQI,WAEvBP,EAAMG,GAGVA,EAAOhD,OAEf,GAAI,EAAAc,YAAYkC,GAAS,CAC5B,GAAyB,IAArBM,UAAUtD,OAAc,CACxB,IAAIuD,EAAQ,EAEZ,IAAK,IAAI1B,EAAImB,EAAOhD,OAAQ6B,MAEpBmB,EAAOnB,KAAOoB,GAAUnD,OAAO0D,GAAGR,EAAOnB,GAAIoB,KAC7CM,IAIR,OAAOA,EAEP,OAAOP,EAAOhD,OAEf,OAAI,EAAAkC,aAAac,GACbA,EAAOI,WACP,EAAAtB,iBAAiBkB,GAAQ,GACzBA,EAAOS,KAEP3D,OAAOqB,KAAK6B,GAAQhD,S,4ECxDnC,eAcA,mBACIN,EACAgE,EACAjD,EACAkD,GAAa,EACbC,GAAW,GAEP,UAAOnD,KAAWX,SAmB1B,SAAkBJ,GACd,MAAoC,QAA7BQ,OAAOJ,OAAOqB,KAAKzB,KACG,mBAAfA,EAAS,IApBfmE,CAASpD,KAuBrB,SAA2Bf,GACvB,IAAIoE,EAAO5D,OAAOJ,OAAOqB,KAAKzB,IAC9B,OAAiB,YAAToE,GAA+B,YAATA,IACD,mBAAfpE,EAAS,KACM,mBAAfA,EAAS,IA3BIqE,CAAkBtD,GAU7CX,OAAOsC,eAAe1C,EAAsBgE,EAAM,CAC9CM,cAAc,EACdL,aACAC,WACAnD,UAbIX,OAAOsC,eAAe1C,EAAKgE,EAAM,OAAF,QAC3BM,cAAc,EACdL,cACGlD,M,4EC1BnB,eACA,SACA,QAgBA,mBAAwBwD,EAAKC,EAAaC,EAAYC,GAAO,GACzD,GAAIpD,MAAMC,QAAQiD,IAAWlD,MAAMC,QAAQkD,GACvC,MAAO,IACAA,EAAM3C,QAAOf,IAAUyD,EAAO7C,SAASZ,QACvCyD,EAAO1C,QAAOf,IAAU0D,EAAM9C,SAASZ,MAE3C,GAAI,EAAA4B,WAAW6B,IAAW,EAAA7B,WAAW8B,GAAQ,CAChD,IAAIhD,EAAOkD,QAAQC,QAAQH,GACvBI,EAAQF,QAAQC,QAAQJ,GACxBM,EAAc,GAyBlB,OAvBArD,EAAKsD,SAASC,IACV,KAAIR,EAAOQ,KAASP,EAAMO,IACpB,UAAOR,EAAOQ,KAAS,UAAOP,EAAMO,KAEtC,GAAIN,GACuB,iBAAhBF,EAAOQ,IAAqC,OAAhBR,EAAOQ,IACpB,iBAAfP,EAAMO,IAAoC,OAAfP,EAAMO,GAC1C,CACE,IAAIC,EAAUV,EAAKC,EAAOQ,GAAMP,EAAMO,GAAMN,GAEvC,UAAQO,KACTH,EAAOE,GAAOC,QAGlBH,EAAOE,GAAOP,EAAMO,MAKhCH,EAAME,SAASC,IACXvD,EAAKE,SAASqD,KAASF,EAAOE,GAAOR,EAAOQ,OAGzCF,EAEP,OAAOL,I,iGCtDf,eACA,SACA,SAEMS,EAAc,yBACdC,EAAe,0BACfC,EAAc,0CACdC,EAAa,cACbC,EAAkB,oBAClBC,EAAe,8BACfC,EAAmC,CACrC3D,OAAO4D,iBACP5D,OAAO6D,kBA2DX,SAAgBC,EAAe5E,GAC3B,OAAOO,MAAMC,QAAQR,GAASA,EAAQO,MAAMsE,KAAK7E,GApDrD,mBAAwB8E,EAAWvC,GAC/B,cAAeA,GACX,IAAK,SAAU,CACX,IAAIwC,EAEJ,GAAIZ,EAAYxE,KAAK4C,GACjB,OAAO,EACJ,GAAI6B,EAAazE,KAAK4C,GACzB,OAAO,EACJ,GAAI8B,EAAY1E,KAAK4C,GACxB,OAAO,KACJ,GAAI+B,EAAW3E,KAAK4C,GACvB,OAAOyC,IACJ,GAAIT,EAAgB5E,KAAK4C,GAC5B,OAAOzB,OAAOyB,GACX,GAAIwC,EAAKxC,EAAO0C,MAAMT,GACzB,OAAO,IAAI1C,OAAOiD,EAAG,GAAIA,EAAG,IACzB,CACH,IAAIG,EAAMpE,OAAOyB,GAEjB,OAAK4C,MAAMD,IACP,UAAUA,EAAKT,IACD,MAAdlC,EAAO,GAEA2C,EAEA3C,GAKnB,IAAK,SACD,OAAe,OAAXA,EACO,KACA,EAAAlC,YAAYkC,GAAQ,GACpBqC,EAAYrC,GAAQ1B,IAAIiE,GACxB,EAAAlD,WAAWW,GACX,UAAOA,GAAQ6C,QAAO,CAACrB,EAAQE,KAClCF,EAAOE,GAAOa,EAAWvC,EAAO0B,IACzBF,IACa,IAEjBxB,EAIf,QACI,OAAOA,IAInB,iB,2ECvEA,eACA,QACA,SA2CA,SAAS8C,EACLC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EACAC,EACAC,GAAa,UAAON,GAExB,GAAIC,IAAUC,KACRE,EAAQ,EAAAvF,YAAYkF,GAAQ,KAAU,EAAA9D,aAAa8D,OACnDM,EAAS,EAAAjE,WAAW2D,IAEtBD,EAAQE,GAASD,OACd,GAAIM,EACP,UAAeN,GAAQvB,SAASC,IAC5B,IAAIjE,EAAQuF,EAAOtB,GAEA,iBAARA,EACO,IAAVwB,IACAH,EAAQrB,GAAOjE,GAGnBqF,EACIC,EACAtF,EACA8F,EAAY,GAAGN,KAASvB,IAAQA,EAChC6B,EAAYL,EAAQ,EAAIA,EACxBC,EACAC,WAIT,GAAIC,EACP,GAAID,EACA,IAAK,IAAIvE,EAAI,EAAG2E,EAAcR,EAAQhG,OAAQ6B,EAAI2E,IAAO3E,EACrDiE,EACIC,EACQC,EAAQnE,GAChB0E,EAAY,GAAGN,KAASpE,IAAM3B,OAAO2B,GACrC0E,EAAYL,EAAQ,EAAIA,EACxBC,EACAC,QAIRL,EAAQE,GAASD,EAIzB,OAAOD,EAzDX,mBAAmCrG,EAAUwG,EAAQ,EAAGE,GAAY,GAChE,OAAON,EAAS,GAAIpG,OAAK,EAAQ,EAAGwG,EAAOE,K,yECzB/C,mBAAkC1C,GAC9B,IAAI+C,EAYJ,MAV0B,iBAAfC,WACPD,EAAeC,WACQ,iBAATC,KACdF,EAAUE,KACe,iBAAXC,OACdH,EAAeG,OACU,iBAAXC,SACdJ,EAAUI,QAGPJ,IAAY/C,EAAO+C,EAAQ/C,GAAQ+C,K,uYC9B9C,OACA,eAiCI,EAAAK,MAjCG,UACP,eAiCI,EAAAxH,OAjCG,UACP,eAiCI,EAAA2E,KAjCG,UACP,eAiCI,EAAAsB,WAjCG,UACP,cAiCI,EAAAwB,WAjCG,UACP,cAiCI,EAAAC,UAjCG,UACP,eAiCI,EAAAC,UAjCG,UACP,eAoCI,EAAAC,QApCG,UACP,eAgCI,EAAAC,QAhCG,UACP,eAgCI,EAAAC,UAhCG,UACP,eAgCI,EAAAC,UAhCG,UACP,eAiCI,EAAAC,SAjCG,UACP,eAiCI,EAAAC,YAjCG,UACP,eAiCI,EAAAC,aAjCG,UACP,cAiCI,EAAAC,OAjCG,UACP,eAiCI,EAAAC,OAjCG,UACP,eAiCI,EAAAC,KAjCG,UACP,eAiCI,EAAAC,SAjCG,UACP,eAiCI,EAAAC,MAjCG,UACP,eAiCI,EAAAC,KAjCG,UACP,eAiCI,EAAAC,KAjCG,UACP,eAiCI,EAAAC,QAjCG,UACP,eAiCI,EAAAC,MAjCG,UACP,eAiCI,EAAAC,KAjCG,UACP,eAiCI,EAAAhF,MAjCG,UACP,cAiCI,EAAAiF,UAjCG,UACP,cAiCI,EAAAC,OAjCG,UACP,eAiCI,EAAAC,OAjCG,UACP,eAiCI,EAAAC,MAjCG,UACP,eAiCI,EAAAC,YAjCG,UACP,eAiCI,EAAAC,KAjCG,W,0EC3BP,mBAAkC/H,GAAgBgI,EAAKC,IACnD,OAAOjI,GAASgI,GAAOhI,GAASiI,I,4ECLpC,eAEMC,EAA6B,CAAC,GAAIlD,IAAK,UAAM,GAC7CmD,EAAyB,IAAID,EAAqB,GAAG,GAY3D,SAASvI,EACLK,EACA2D,EACAyE,GAEA,GAAIA,EAAgBxH,SAASZ,GACzB,OAAO,EAEX,GAAqB,iBAAVA,EAAoB,CAC3B,GAAI,EAAAyB,aAAazB,GACb,OAA4B,IAArBA,EAAM2C,WACV,GAAI,EAAAtC,YAAYL,GAAQ,CAC3B,GAAqB,IAAjBA,EAAMT,OACN,OAAO,EACJ,GAAKoE,EAEL,CACH,IAAK,IAAIvC,EAAI,EAAG2E,EAAM/F,EAAMT,OAAQ6B,EAAI2E,IAAO3E,EAC3C,IAAKzB,EAAKK,EAAMoB,GAAIuC,EAAMuE,GACtB,OAAO,EAIf,OAAO,EARP,OAAO,EAUR,GAAI,EAAA7G,iBAAiBrB,GAAO,GAAO,CACtC,GAAmB,IAAfA,EAAMgD,KACN,OAAO,EACJ,GAAKW,EAEL,CACH,GAAI3D,aAAiBqI,IAAK,CACtB,IAAK,IAAIC,KAAKtI,EAAMuI,SAChB,IAAK5I,EAAK2I,EAAG3E,EAAMuE,GACf,OAAO,EAIf,OAAO,EACJ,GAAIlI,aAAiBwI,IAAK,CAC7B,IAAK,IAAIF,KAAKtI,EACV,IAAKL,EAAK2I,EAAG3E,EAAMuE,GACf,OAAO,EAIf,OAAO,EAGX,OAAO,EApBP,OAAO,EAsBR,CACH,IAAIxH,EAAOkD,QAAQC,QAAQ7D,GAE3B,OAAoB,IAAhBU,EAAKnB,UAEGoE,GAGDjD,EAAKR,OACRuI,GAAK9I,EAAKK,EAAMyI,GAAI9E,EAAMuE,MAM1C,OAAO,EA5EW,mBAAXQ,QACPP,EAAgBQ,KAAKD,OAAO,MAKhC,mBAAgC1I,EAAY2D,GAAO,GAC/C,OAAOhE,EAAKK,EAAO4I,QAAQjF,GAAOwE,K,0ECTtC,mBAAgCnI,GAC5B,QAAwB,iBAAVA,GACNmF,MAAMnF,IACLc,OAAOE,SAAShB,IAAUA,EAAQ,GAAM,K,0ECHrD,mBAAkCA,GAC9B,IAAI6I,SAAc7I,EAClB,MAAgB,WAAT6I,GACU,WAATA,IACC1D,MAAMnF,IACPc,OAAOE,SAAShB,IAChBA,EAAQ,GAAM,I,0ECN1B,mBACIA,GAEA,IAAI6I,SAAc7I,EAClB,OAAiB,WAAT6I,GAA8B,WAATA,GAA8B,WAATA,KAC1C1D,MAAMrE,OAAOd,M,4ECRzB,cAKA,mBACIf,EACAgE,GAEA,OAAQ,UAAOhE,IAAQI,OAAOF,UAAU2J,eAAeC,KAAK9J,EAAKgE,K,0ECJrE,mBAAuChE,EAAQ+J,GAC3C,IAAIC,EAAQ5J,OAAO6J,eAAejK,GAClC,OAAiB,OAAVgK,GACA5J,OAAOF,UAAU2J,eAAeC,KAAKE,EAAOD,IACnB,mBAAlBC,EAAMD,K,0ECRxB,mBACIzG,EACA4G,GAEA,MAAyB,mBAAX5G,GACS,mBAAT4G,GACP5G,EAAOpD,qBAAqBgK,I,yECJvC,mBAA+BnJ,GAC3B,OAAOA,SAAyCX,OAAO0D,GAAG/C,EAAOgF,O,0ECErE,mBAA+B/F,GAC3B,OAAIsB,MAAMC,QAAQvB,GACPI,OAAOqB,KAAKzB,GAAK4B,IAAIC,QAErB8C,QAAQC,QAAQ5E,K,4ECV/B,eAUA,mBAA6BA,EAAUgB,GACnC,GAAIM,MAAMC,QAAQvB,GACd,OAAOA,EAAI8B,QAAOK,IAAMnB,EAAMW,SAASQ,KACpC,CACH,IACI2C,EADOH,QAAQC,QAAQ5E,GACTmG,QAAO,CAACrB,EAAad,KACnChD,EAAMW,SAASqC,KAAUc,EAAOd,GAAQhE,EAAIgE,IACrCc,IACR,IAGH,IAAK,IAAId,KAAQ5D,OAAO6J,eAAejK,GACnCgB,EAAMW,SAASqC,KAAUc,EAAOd,GAAQhE,EAAIgE,IAWhD,OAPIhE,aAAemK,OACf,CAAC,OAAQ,WAAWpF,SAAQf,IACnBhD,EAAMW,SAASqC,IAAU,UAASc,EAAQd,KAC3Cc,EAAOd,GAAchE,EAAKgE,OAI/Bc,K,4FCjCf,cACA,SACA,SACA,SAkBA,SAAgBsF,EACZ9G,EACAoB,EACA2F,EACAC,EACA9D,GAEA,GAAsB,iBAAXlD,EACP,OAAOgH,GAAsC,KAAlBhH,EAAOiH,YAAgB,EAASjH,EACxD,GAAe,OAAXA,GACc,iBAAXA,GACP,EAAAd,aAAac,GAEhB,OAAOA,EACJ,GAAI+G,GAAoB,UAAQ/G,GACnC,OAAOkD,EAAQ,OAAI,EAAU,EAAApF,YAAYkC,GAAQ,GAAQ,GAAK,GAGlE,GAAI,EAAAlC,YAAYkC,GAAQ,GAAO,CAC3B,IAAIkH,EAAa,GAEjB,IAAK,IAAIrI,EAAI,EAAG2E,EAAuBxD,EAAQhD,OAAQ6B,EAAI2E,IAAO3E,EAAG,CACjE,IAAIpB,EAAQuC,EAAOnB,GAEd,UAAOpB,KACJ2D,GACA3D,EAAQqJ,EACJrJ,EACA2D,EACA2F,EACAC,EACA9D,EAAQ,GACZ,UAAOzF,IAAUyJ,EAAId,KAAK3I,IAE1ByJ,EAAId,KAAK3I,IAKrB,OAAIyF,EAAQ,GAAK6D,GAAoB,UAAQG,QACzC,EAEOA,EAER,CACH,IAAIxK,EAAM,UAAoBsD,GAAQ6C,QAAO,CAACnG,EAAKgF,KAC/C,IAAIjE,EAAQuC,EAAO0B,GAgBnB,OAdK,UAAOjE,KACJ2D,GACA3D,EAAQqJ,EACJrJ,EACA2D,EACA2F,EACAC,EACA9D,EAAQ,GACZ,UAAOzF,KAAWf,EAAIgF,GAAOjE,IAE7Bf,EAAIgF,GAAOjE,GAIZf,IACL,IAEN,OAAIwG,EAAQ,GAAK6D,GAAoB,UAAQrK,QACzC,EAEOA,GA7EnB,mBACIsD,EACAoB,GAAO,EACP2F,GAAmB,EACnBC,GAAmB,GAEnB,OAAOF,EAAO9G,EAAQoB,EAAM2F,EAAkBC,EAAkB,IAGpE,Y,4ECrBA,eACA,SACA,QA2BA,SAASG,EACLjG,EACAC,EACAC,EACAgG,EACAC,GAEA,GAAI,EAAAhI,WAAW6B,IAAW,EAAA7B,WAAW8B,GAAQ,CACzC,IAAIhD,EAAOkD,QAAQC,QAAQH,GACvBK,EAAc,GA0BlB,OAxBArD,EAAKsD,SAASC,IACV,KAAIR,EAAOQ,KAASP,EAAMO,IACrB,UAAOP,EAAMO,KACZ0F,GAAqC,KAAfjG,EAAMO,IAE9B,GAAIN,GAAQ,EAAA/B,WAAW6B,EAAOQ,KAAS,EAAArC,WAAW8B,EAAMO,IAAO,CAC3D,IAAIC,EAAUwF,EACVjG,EAAOQ,GACPP,EAAMO,GACNN,EACAgG,GACA,GAGC,UAAQzF,KACTH,EAAOE,GAAOC,EACd7E,OAAOwK,OAAOpG,EAAOQ,GAAMP,EAAMO,UAGrCF,EAAOE,GAAOR,EAAOQ,GAAOP,EAAMO,MAKvCF,EACJ,OAAI6F,EACAlG,EAEA,GAhDf,mBACID,EACAC,EACAC,GAAO,EACPgG,GAAqB,GAErB,OAAOD,EAAQjG,EAAQC,EAAOC,EAAMgG,GAAoB,K,0ECtB5D,mBAA6B1K,EAAUgB,GACnC,OAAIM,MAAMC,QAAQvB,GACIgB,EAAOY,KAAIO,GAAKnC,EAAImC,KAE/BnB,EAAMmF,QAAO,CAACrB,EAAad,KAC9BA,KAAQhE,IAAQ8E,EAAOd,GAAQhE,EAAIgE,IAC5Bc,IACR,M,0ECVX,mBAA6BiE,EAAaC,GACtC,OAAOnH,OAAOkH,GAAO8B,KAAKC,MAAMD,KAAKE,UAAY/B,EAAMD,EAAM,M,4ECFjE,eAMA,mBACIzI,EACA0K,EAAQ,kEAER,IAAIzK,EAAM,GACNyI,EAAMgC,EAAM1K,OAAS,EAEzB,KAAO,EAAIA,KACPC,GAAOyK,EAAM,UAAK,EAAGhC,IAGzB,OAAOzI,I,0ECbX,mBAA8B0K,GAC1B,OAAO,IAAIC,SAAcC,GAAWC,WAAWD,EAAStJ,OAAOoJ,Q,4ECLnE,eACA,SA+EA,SAASI,EAAYb,EAAYZ,EAA4B,UACzD,OAAOY,EAAIvJ,OAAMqK,UAAcA,IAAQ1B,IA7D3C,mBAAwBpB,EACpBlF,EACAyG,GAEA,GAAI,EAAA3I,YAAYkC,GAAQ,GAAO,CAC3B,IAAIkH,EAAM,EAAA7E,YAAYrC,GAClBiI,EAAsCxB,EAQ1C,OAJKwB,IAAYF,EAAYb,KAAQa,EAAYb,EAAK,YAClDe,EAAU,CAACC,EAAWC,IAAcD,EAAIC,GAqDpD,SAA6BjB,GACzB,GAAuB,iBAAZkB,SAAoD,iBAArBA,QAAQC,SAC9C,OAAOnB,EAAIlK,QAAU,IACdsL,WAAWF,QAAQC,SAASE,IAAM,MAAQ,EAC9C,GAAyB,iBAAdC,WAAyD,iBAAxBA,UAAUC,UAAwB,CACjF,IAAI/F,EAAQ8F,UAAUC,UAAU/F,MAC5B,2CAGJ,GAAIA,EAAO,CACP,IAAIpF,EAAOoF,EAAM,GACbgG,EAAUJ,WAAW5F,EAAM,IAE/B,GAAc,SAATpF,GAAmB4J,EAAIlK,QAAU,KACxB,WAATM,GAAsBoL,GAAW,IAAOxB,EAAIlK,QAAU,IAC7C,YAATM,GAAsBoL,GAAW,GACxB,WAATpL,GAAqBoL,GAAW,MACvB,QAATpL,GAAkBoL,GAAW,GAE9B,OAAO,QAGZ,GAAoB,iBAATC,KACd,OAAO,EAGX,OAAO,EA5ECC,CAAoB1B,GACbA,EAAIhC,KAAK+C,GAKbf,EACF5I,KAAI,CAACb,EAAOoL,KAAU,CAAGpL,QAAOoL,YAChC3D,MAAK,CAACgD,EAAGC,IAAMF,EAAQC,EAAEzK,MAAO0K,EAAE1K,QAAUyK,EAAEW,MAAQV,EAAEU,QACxDvK,KAAI,EAAGb,WAAYA,IACrB,GAAI,EAAA4B,WAAWW,GAAS,CAC3B,IAAIoB,EAAOiF,QAAQI,GAMnB,MALW,IACJvB,EAAKpI,OAAOC,oBAAoBiD,OAChClD,OAAOgM,sBAAsB9I,IAGxB6C,QAAO,CAACrB,EAAQE,KACxB,IAAIjE,EAAQuC,EAAO0B,GAanB,OAXIN,IACI,EAAAtD,YAAYL,GAAO,GACnBA,EAAQ,EAAA4E,YAAY5E,GAAOa,KAAIyK,GACpB,EAAA1J,WAAW0J,GAAQ7D,EAAK6D,EAAM3H,GAAQ2H,IAE1C,EAAA1J,WAAW5B,KAClBA,EAAQyH,EAAKzH,EAAO2D,KAI5BI,EAAOE,GAAOjE,EACP+D,IACR,IAEH,KAAsB,mBAAXiF,EACD,IAAIuC,UAAU,sCACK,kBAAXvC,EACR,IAAIuC,UAAU,2CAEd,IAAIA,UACN,yD,4EC1EhB,eAEA,SAASC,EAAoB3L,EAAcG,GACvC,GAAqB,iBAAVA,EACP,MAAM,IAAIuL,UAAU,aAAa1L,uBAC9B,GAAIG,EAAQ,EACf,MAAM,IAAIyL,WAAW,aAAa5L,0BAI1C,SAAS6L,EAAejC,EAAqBlK,EAAgBoM,GACzD,IAAI5H,EAAS,GAEb,IAAK,IAAI3C,EAAI,EAAGwK,EAAKD,GAASlC,EAAIlK,OAAS6B,EAAIwK,EAAGxK,GAAK7B,EACvB,mBAAjBkK,EAAW,MAClB1F,EAAO4E,KAAKc,EAAW,MAAErI,EAAGA,EAAI7B,IAEhCwE,EAAO4E,KAAKpI,MAAMpB,UAAUO,MAAMqJ,KAAKU,EAAKrI,EAAGA,EAAI7B,IAI3D,OAAOwE,EAGX,SAAS8H,EAAYC,EAAaC,GAC9B,IAAIhI,EAAmB,GACnBiI,EAAS,EACTzM,EAASwM,EAAIxM,OACboM,EAAQG,EAAInJ,WAEhB,KAAOqJ,EAASL,GAAO,CACnB,IAAIP,EAAQU,EAAIG,QAAQF,EAAKC,IAEd,IAAXZ,GACArH,EAAO4E,KAAKmD,EAAIpM,MAAMsM,EAAQZ,IAC9BY,EAASZ,EAAQ7L,IAEjBwE,EAAO4E,KAAKmD,EAAIpM,MAAMsM,IACtBA,EAASL,GAIjB,OAAO5H,EAGX,SAASmI,EAAYjN,EAAU+D,GAC3B,IAAIiG,EAAQ5J,OAAO6J,eAAejK,GAC9BkN,EAAYT,EAAerM,OAAOqB,KAAKzB,GAAM+D,GAC7Ce,EAAS,GAEb,IAAK,IAAIrD,KAAQyL,EAAW,CACxB,IAAIC,EAAQ/M,OAAOgN,OAAOpD,GAC1BlF,EAAO4E,KAAKyD,GAEZ,IAAK,IAAInI,KAAOvD,EACZ0L,EAAMnI,GAAOhF,EAAIgF,GAIzB,OAAOF,EAGX,SAASuI,EAAYpH,EAAaqH,GAC9B,IAAIxI,EAAmB,GACnBiI,EAAS,EAEb,MAAQA,GAAUO,IAASrH,GACvBnB,EAAO4E,KAAKqD,GAOhB,OAJI9G,EAAM8G,EAASO,GACfxI,EAAO4E,KAAKzD,GAGTnB,EAqBX,mBAA8B9E,EAAU8M,GACpC,GAAIlJ,UAAUtD,OAAS,EACnB,MAAM,IAAIiN,YAAY,kCAAkC3J,UAAUtD,UAC/D,GAAmB,iBAARN,EACd,MAAmB,iBAAR8M,GAAoBA,aAAejK,OACnC7C,EAAIwD,MAAMsJ,IAEjBP,EAAoB,SAAUO,GACvBL,EAAezM,EAAK8M,IAE5B,GAAmB,iBAAR9M,EAEd,OADAuM,EAAoB,OAAQO,GACrBO,EAAYrN,EAAK8M,GACrB,GAAsB,mBAAXrJ,QACXA,OAAO+J,SAASxN,KACA,iBAAR8M,GAAoBrJ,OAAO+J,SAASV,IAE/C,OAAOF,EAAY5M,EAAK8M,GACrB,GAAI,EAAAtK,aAAaxC,GAEpB,OADAuM,EAAoB,aAAcO,GAC3BL,EAAezM,EAAK8M,EAAK9M,EAAI0D,YACjC,GAAI,EAAAtC,YAAYpB,GAEnB,OADAuM,EAAoB,SAAUO,GACvBL,EAAezM,EAAK8M,GACxB,GAAI,EAAA1K,iBAAiBpC,GAAM,CAC9B,IAAIyN,EAAOzN,EAAiB,YAE5B,OADAuM,EAAoB,OAAQO,GACrBL,EAAe,IAAIzM,GAAM8M,GAAKlL,KAAI8L,GAAQ,IAAID,EAAKC,KACvD,GAAmB,iBAAR1N,GAA4B,OAARA,EAElC,OADAuM,EAAoB,OAAQO,GACrBG,EAAYjN,EAAK8M,GAExB,MAAM,IAAIR,UAAU,4D,2EC/H5B,eACA,QAEA,UAcA,SAAmB7H,EAAYwG,GAAK,GAQhC,GAPqB,kBAAVxG,IACPwG,EAAKxG,EACLA,OAAQ,IAGZA,EAAQA,GAAS,IAAI7B,gBAEAA,KACjB,OAAOqI,EAAKxG,EAAMkJ,UAAY9C,KAAKC,MAAMrG,EAAMkJ,UAAY,KACxD,GAAqB,iBAAVlJ,EACd,OAAOwG,EAAKxG,EAAQoG,KAAKC,MAAMrG,EAAQ,KACpC,CACH,IAAImJ,EACAC,EAAWrN,OAAOiE,GAAO8F,OAgB7B,GAdIsD,EAASlM,SAAS,MAAQkM,EAASrK,MAAM,KAAKvC,MAAM,WACpD2M,EAqBZ,SAA0BrN,GACtB,IAAKuN,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGlD,GAAM1K,EAAIiD,MAAM,KAAK5B,IAAIC,QAC5C+L,EAAO,IAAIhL,KAUf,OARA,UAAOkL,IAAMF,EAAKQ,YAAYN,GAC9B,UAAOC,IAAMH,EAAKS,SAASN,GAC3B,UAAOC,IAAMJ,EAAKU,QAAQN,GAC1B,UAAOC,IAAML,EAAKW,SAASN,GAC3B,UAAOC,IAAMN,EAAKY,WAAWN,GAC7B,UAAOC,IAAMP,EAAKa,WAAWN,GAC7B,UAAOlD,IAAO2C,EAAKc,gBAAgBzD,GAE5B2C,EAjCQe,CAAiBd,IAEpB,0BAA0BnN,KAAKmN,KAC/BD,EAAO,IAAIhL,KACXiL,EAAWD,EAAKgB,cACV,KAAOhB,EAAKiB,WAAa,GACzB,IAAMjB,EAAKkB,UACX,IAAMjB,GAGhBD,EAAO,IAAIhL,KAAKiL,IAGC,iBAAjBrN,OAAOoN,GACP,OAAO3C,EAAK2C,EAAKD,UAAY9C,KAAKC,MAAM8C,EAAKD,UAAY,KAEzD,MAAM,IAAIxD,MAAM,yD,2EClD5B,cACA,SAeA,mBAA+B7G,EAAasG,GACxC,GAAqB,UAAjB,UAAOA,IACPA,IAAS3H,QACU,mBAAXwH,QAAyBG,IAASH,OAE1C,MAAM,IAAI6C,UAAU,sCAGxB,IAAIyC,EACAC,EAAyC,CACzC,OAAUxO,OACV,OAAUqB,OACV,OAAU,UAAU,UACpB,QAAW8H,QACX,OAAU1H,QAGd,OAAIqB,aAAkBsG,EACd,CAACpJ,OAAQqB,OAAQ8H,SAAShI,SAASiI,GAC5BA,EAAKtG,GAELA,GAEHyL,SAAezL,IAAW0L,EAAaD,KAAWnF,EACnDtG,EAGJ,O,4EC3CX,cACA,SAgBA,mBACIA,GAEA,GAAyB,IAArBM,UAAUtD,OACV,MAAM,IAAIgM,UAAU,mCACnB,GAAI,UAAOhJ,GACZ,MAAO,OAEX,IAAIsG,SAActG,EAElB,MAAa,aAATsG,EACI,UAAatG,GACN,QAEA,WAEK,WAATsG,EACwC,uBAA3CxJ,OAAOF,UAAU+O,SAASnF,KAAKxG,GACxB,YAEKA,EAAOnD,aAAeC,OAG1BwJ,I,2dCrCpB,mBAAoClJ,G,yCAChC,QAA4B,IAAjBwO,EACP,IAAIA,EAAgBC,GAAmB/D,WAAW+D,EAAI,GAG1D,SAAW,IAAIjE,QAAcgE,SAA0C,UAAXxO,W,kZCRhE,eAEA,QAA4B,IAAjBwO,EAEP,IAAIA,EAAgBC,GAAmB/D,WAAW+D,EAAI,GAc1D,SAAStG,EAAYuG,EAAeC,GAChC,GAAIA,EAAW,EACX,MAAM,IAAI7C,WACN,+DAED,IAAK3D,EAAYyG,QAAS,CAC7B,IAAI,WAAEC,EAAYC,MAAOC,GAAS5G,EAElCA,EAAYyG,QAAUI,aAAY,KAC9B,IAAIC,EAAM/M,KAAK+M,MAEfF,EAAK1K,SAAQ,EAAGsK,WAAUO,cAAc5K,KAChC2K,EAAMC,EAAa/E,KAAK7B,IAAIqG,EAAW,EAAGE,IAC1CE,EAAKI,OAAO7K,QAGrBuK,GAEsC,mBAA9B1G,EAAYyG,QAAQQ,OAC3BjH,EAAYyG,QAAQQ,QAI5B,IAAIC,EAAOlH,EAAY2G,MAAMQ,IAAIZ,GAMjC,OAJKW,GACDlH,EAAY2G,MAAMS,IAAIb,EAAUW,EAuBxC,SAA4BV,GACxB,IAAIU,EAAqB,CACrBV,WACAO,WAAY,EACZM,WAAO,EACPC,MAAO,IAAI5G,IACX6G,UAAM,GAuDV,OADAL,EAAKK,KAnDL,SAEIC,KACGC,G,yCAEH,IAAIX,EAAM/M,KAAK+M,MAEf,GAAKA,EAAM7P,KAAK8P,YAAeP,EAAU,CAMrC,IAAIvK,EACAyL,EAJJzQ,KAAKoQ,WAAQ,EACbpQ,KAAK8P,WAAaD,EAKlB,IACI7K,QAAeuL,KAAUC,GACzBxQ,KAAKoQ,MAAQ,CAAEnP,MAAO+D,EAAQyL,MAAO,MACvC,MAAOC,GACL1Q,KAAKoQ,MAAQ,CAAEnP,WAAO,EAAQwP,MAAOA,EAAQC,GAejD,GATAtB,GAAa,KACJ,UAAQpP,KAAKqQ,QACdrQ,KAAKqQ,MAAMpL,SAAS0L,IAChBF,EAAQE,EAAIC,OAAOH,GAASE,EAAItF,QAAQrG,GACxChF,KAAKqQ,MAAMN,OAAOY,SAK1BF,EACA,MAAMA,EAEN,OAAOzL,EACR,GAAIhF,KAAKoQ,MAAO,CACnB,GAAIpQ,KAAKoQ,MAAMK,MACX,MAAMzQ,KAAKoQ,MAAMK,MAEjB,OAAOzQ,KAAKoQ,MAAMnP,MAEtB,OAAO,IAAImK,SAAW,CAACC,EAASuF,KAC5B5Q,KAAKqQ,MAAMQ,IAAI,CAAExF,UAASuF,kBAKjBE,KAAKb,GACnBA,EApFoCc,CAAmBxB,IAGvDU,EAAKK,KAxChB,UAAevH,EA2Cf,SAAUA,GACK,EAAA0G,WAAa,IACb,EAAAD,aAAe,EACb,EAAAE,MAAQ,IAAIpG,IAH7B,CAAUP,MAAW,M,4EClDrB,eAMA,mBACIvF,EACAwN,GAEA,IAAIC,EAAK,YAAwBT,GAC7B,OAAOQ,EAAQhH,KAAKhK,KAAMwD,KAAWgN,IAOzC,OAJA,UAAOS,EAAI,OAAQzN,EAAO1C,MAC1B,UAAOmQ,EAAI,SAAUzN,EAAOhD,QAC5B,UAAOyQ,EAAI,WAAYzN,EAAO2L,SAAS2B,KAAKtN,IAErCyN,I,QClBXpR,EAAOD,QAAU,SAASyO,GACxB,QAAS6C,UAAU7C,GAAG3K,MAAM,SAASlD,UCAnC2Q,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUzR,QAG3C,IAAIC,EAASsR,EAAyBE,GAAY,CAGjDzR,QAAS,IAOV,OAHA0R,EAAoBD,GAAUrH,KAAKnK,EAAOD,QAASC,EAAQA,EAAOD,QAASwR,GAGpEvR,EAAOD,QCjBRwR,CAAoB,K,MDFvBD","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@hyurl/utils\"] = factory();\n\telse\n\t\troot[\"@hyurl/utils\"] = factory();\n})(this, function() {\nreturn ","\"use strict\";\n\n/**\n * Checks if an object could be an instantiable class.\n * @param {any} obj\n * @returns {obj is new (...args: any[]) => any}\n */\nfunction couldBeClass(obj) {\n    if (typeof obj != \"function\") return false;\n\n    // async function or arrow function\n    if (obj.prototype === undefined)\n        return false;\n\n    // generator function and malformed inheritance\n    if (obj.prototype.constructor !== obj)\n        return false;\n\n    // has own prototype properties\n    if (Object.getOwnPropertyNames(obj.prototype).length >= 2)\n        return true;\n\n    var str = String(obj);\n\n    // ES6 class\n    if (str.slice(0, 5) == \"class\")\n        return true;\n\n    // anonymous function\n    if (/^function\\s*\\(|^function anonymous\\(/.test(str))\n        return false;\n\n    var hasThis = /(call|apply|_classCallCheck)\\(this(, arguments)?\\)|\\bthis(.\\S+|\\[.+?\\])\\s*(=|\\()|=\\s*this[,;]/.test(str);\n\n    // Upper-cased first char of the name and has `this` in the body, or it's\n    // a native class in ES5 style.\n    if (/^function\\s+[A-Z]/.test(str) && (hasThis ||\n        (/\\[native code\\]/.test(str) &&\n            obj.name !== \"BigInt\" && // ES6 BigInt and Symbol is not class\n            obj.name !== \"Symbol\"\n        )\n    )) {\n        return true;\n    }\n\n    // TypeScript anonymous class to ES5 with default export\n    if (hasThis && obj.name === \"default_1\")\n        return true;\n\n    return false;\n}\n\nexports.couldBeClass = couldBeClass;\nexports.default = couldBeClass;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * @param {any} value \n * @param {Array<[string|symbol, string]>} props \n * @param {Array<string>} types\n */\nfunction isObjectWith(value, ...props) {\n    let isObj = typeof value === \"object\" && value !== null;\n    return isObj && props.every(([p, t]) => p in value && typeof value[p] === t);\n}\n\nfunction isEmptyDict(obj) {\n    try {\n        let str = JSON.stringify(obj);\n        return str === \"{}\" || str === \"[]\";\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction isDictLike(value) {\n    return typeof value === \"object\" && value !== null\n        && (value.constructor === Object || (\n            !(value instanceof Date) &&\n            !(value instanceof RegExp) &&\n            !isArrayLike(value, true) &&\n            !isEmptyDict(value) &&\n            !isBufferLike(value) &&\n            !isCollectionLike(value) &&\n            !isPromiseLike(value)\n        ));\n}\n\nfunction isArrayLike(value, strict = false) {\n    if (Array.isArray(value)) {\n        return true;\n    } else if (!strict) {\n        return isObjectWith(value, [\"length\", \"number\"])\n            || (typeof value === \"string\");\n    } else if (isObjectWith(value, [\"length\", \"number\"])) {\n        let keys = Object.keys(value);\n        let isNonEnumLength = !keys.includes(\"length\");\n        let indexes;\n\n        if (value.length === 0 ||\n            (indexes = keys.map(Number).filter(isFinite)).length === 0) {\n            return isNonEnumLength;\n        } else {\n            let hasIterator = typeof value[Symbol.iterator] === \"function\";\n\n            for (let i = value.length; i--;) {\n                if (!indexes.includes(i) && !(isNonEnumLength || hasIterator)) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isCollectionLike(value, excludeWeakOnes = false) {\n    return (isObjectWith(value, [\"size\", \"number\"], [Symbol.iterator, \"function\"]))\n        || (!excludeWeakOnes &&\n            (value instanceof WeakMap || value instanceof WeakSet));\n}\n\nfunction isBufferLike(value) {\n    return isObjectWith(value, [\"byteLength\", \"number\"], [\"slice\", \"function\"]);\n}\n\nfunction isErrorLike(value) {\n    return isObjectWith(value,\n        [\"name\", \"string\"],\n        [\"message\", \"string\"],\n        [\"stack\", \"string\"]\n    );\n}\n\nfunction isPromiseLike(value) {\n    return isObjectWith(value, [\"then\", \"function\"]);\n}\n\nexports.isDictLike = isDictLike;\nexports.isArrayLike = isArrayLike;\nexports.isCollectionLike = isCollectionLike;\nexports.isBufferLike = isBufferLike;\nexports.isErrorLike = isErrorLike;\nexports.isPromiseLike = isPromiseLike;","import { isArrayLike, isBufferLike, isCollectionLike } from \"is-like\";\n\nconst bytes: (str: string) => number = require(\"utf8-length\");\nconst encoder = typeof TextEncoder === \"function\" ? new TextEncoder() : null;\n\nexport default count;\n\n/** Counts the length of a string. */\nfunction count(str: string, byteLength?: boolean): number;\n/** Counts how many times a substring appeared in the given string. */\nfunction count(str: string, substr: string): number;\n/** Counts the length of an array-like object. */\nfunction count<T>(arr: ArrayLike<T>): number;\n/** Counts how many times an element appeared in the given array-like object. */\nfunction count<T>(arr: ArrayLike<T>, ele: T): number;\n/** Counts the size of a collection. */\nfunction count(collection: Map<any, any> | Set<any>): number;\n/** Counts the capacity of an object (of how many properties it has). */\nfunction count(obj: any): number;\nfunction count(target: any, option: any = void 0) {\n    if (typeof target === \"string\") {\n        if (typeof option === \"string\") {\n            return target.split(option).length - 1;\n        } else if (option === true) {\n            if (typeof Buffer === \"function\" &&\n                typeof Buffer.byteLength === \"function\"\n            ) {\n                return Buffer.byteLength(target);\n            } else if (encoder) {\n                return encoder.encode(target).byteLength;\n            } else {\n                return bytes(target);\n            }\n        } else {\n            return target.length;\n        }\n    } else if (isArrayLike(target)) {\n        if (arguments.length === 2) {\n            let times = 0;\n\n            for (let i = target.length; i--;) {\n                // treat 0 equals -0 and NaN equals NaN\n                if (target[i] === option || Object.is(target[i], option)) {\n                    times++;\n                }\n            }\n\n            return times;\n        } else {\n            return target.length;\n        }\n    } else if (isBufferLike(target)) {\n        return target.byteLength;\n    } else if (isCollectionLike(target, true)) {\n        return target.size;\n    } else {\n        return Object.keys(target).length;\n    }\n}","import typeOf from './typeOf';\n\n/**\n * Sets a property on the target object.\n * @param value Normally this is the value bound to the property, however, it\n *  could be used to set the getter and the setter using the signature\n *  `{ get: Function, set?: Function }`.\n * @param enumerable By default, the property is non-enumerable and can't be\n *  seen by the console, use this option to make it enumerable and visible to\n *  the console.\n * @param writable By default, the property is readonly once set, use this\n *  option to allow it being writable.\n *  **This property doesn't work with setter.**\n */\nexport default function define(\n    obj: any,\n    prop: string | symbol,\n    value: any,\n    enumerable = false,\n    writable = false,\n): void {\n    if (typeOf(value) === Object) {\n        if (isGetter(value) || isGetterAndSetter(value)) {\n            Object.defineProperty(obj, prop, {\n                configurable: true,\n                enumerable,\n                ...value\n            });\n            return;\n        }\n    }\n\n    Object.defineProperty(obj, <string | symbol>prop, {\n        configurable: true,\n        enumerable,\n        writable,\n        value\n    });\n}\n\nfunction isGetter(obj: object) {\n    return String(Object.keys(obj)) === \"get\"\n        && typeof obj[\"get\"] === \"function\";\n}\n\nfunction isGetterAndSetter(obj: object) {\n    let sign = String(Object.keys(obj));\n    return (sign === \"get,set\" || sign === \"set,get\")\n        && typeof obj[\"get\"] === \"function\"\n        && typeof obj[\"set\"] === \"function\";\n}","import { isDictLike } from \"is-like\";\nimport isEmpty from './isEmpty';\nimport isVoid from './isVoid';\n\n\n/**\n * Creates an array that contains the difference set between `origin` and\n * `input`;\n */\nexport default function diff<T>(origin: T[], input: T[]): T[];\n/**\n * Evaluates the differences between `origin` and `input`, if a property exists\n * in both objects and the values are not equal, the `input` one will be taken.\n * \n * NOTE: This function treats all void values equal and will not differ them.\n */\nexport default function diff<T, U>(origin: T, input: U): Diff<T, U>;\nexport default function diff<T, U>(origin: T, input: U, deep: true): DeepPartial<T & U>;\nexport default function diff(origin: any, input: any, deep = false) {\n    if (Array.isArray(origin) && Array.isArray(input)) {\n        return [\n            ...input.filter(value => !origin.includes(value)),\n            ...origin.filter(value => !input.includes(value))\n        ];\n    } else if (isDictLike(origin) && isDictLike(input)) {\n        let keys = Reflect.ownKeys(input);\n        let _keys = Reflect.ownKeys(origin);\n        let result: any = {};\n\n        keys.forEach((key: string) => {\n            if (origin[key] !== input[key] &&\n                !(isVoid(origin[key]) && isVoid(input[key])) // ignore void values\n            ) {\n                if (deep &&\n                    typeof origin[key] === \"object\" && origin[key] !== null &&\n                    typeof input[key] === \"object\" && input[key] !== null\n                ) {\n                    let _result = diff(origin[key], input[key], deep);\n\n                    if (!isEmpty(_result)) {\n                        result[key] = _result;\n                    }\n                } else {\n                    result[key] = input[key];\n                }\n            }\n        });\n\n        _keys.forEach((key: string) => {\n            keys.includes(key) || (result[key] = origin[key]);\n        });\n\n        return result;\n    } else {\n        return input;\n    }\n}","import { isArrayLike, isDictLike } from 'is-like';\nimport isBetween from './isBetween';\nimport keysOf from './keysOf';\n\nconst truePattern = /^\\s*(true|yes|on)\\s*$/i;\nconst falsePattern = /^\\s*(false|no|off)\\s*$/i;\nconst nullPattern = /^\\s*(null|nil|none|void|undefined)\\s*$/i;\nconst nanPattern = /^\\s*NaN\\s*$/;\nconst infinityPattern = /^\\s*-?Infinity\\s*/;\nconst regexPattern = /^\\s*\\/(.+)\\/([gimuys]*)\\s*$/;\nconst numberInterval: [number, number] = [\n    Number.MIN_SAFE_INTEGER,\n    Number.MAX_SAFE_INTEGER\n];\n\n/**\n * Casts the target object or its contents to the closest types automatically.\n * This function is useful when reading config from a file or fetching data from\n * the web.\n */\nexport default function ensureType(target: any): any {\n    switch (typeof target) {\n        case \"string\": {\n            let re: RegExpMatchArray;\n\n            if (truePattern.test(target)) {\n                return true;\n            } else if (falsePattern.test(target)) {\n                return false;\n            } else if (nullPattern.test(target)) {\n                return null;\n            } else if (nanPattern.test(target)) {\n                return NaN;\n            } else if (infinityPattern.test(target)) {\n                return Number(target);\n            } else if (re = target.match(regexPattern)) {\n                return new RegExp(re[1], re[2]);\n            } else {\n                let num = Number(target);\n\n                if (!isNaN(num) &&\n                    isBetween(num, numberInterval) &&\n                    target[0] !== \"+\" // Most likely a telephone number.\n                ) {\n                    return num;\n                } else {\n                    return target;\n                }\n            }\n        }\n\n        case \"object\": {\n            if (target === null) {\n                return null;\n            } else if (isArrayLike(target, true)) {\n                return ensureArray(target).map(ensureType);\n            } else if (isDictLike(target)) {\n                return keysOf(target).reduce((result, key: string) => {\n                    result[key] = ensureType(target[key]);\n                    return result;\n                }, <Record<string, any>>{});\n            } else {\n                return target;\n            }\n        }\n\n        default:\n            return target;\n    }\n}\n\nexport function ensureArray<T>(value: ArrayLike<T>): T[] {\n    return Array.isArray(value) ? value : Array.from(value);\n}","import keysOf from './keysOf';\nimport isVoid from './isVoid';\nimport { isDictLike, isArrayLike, isBufferLike } from 'is-like';\n\ntype OmitChildrenNodes<T> = Pick<T, {\n    [K in keyof T]: T[K] extends TypedArray\n    ? K\n    : T[K] extends (any[] | ArrayLike<any> | Function | Constructor<any> | Map<any, any> | Set<any> | Promise<any> | TypedArray)\n    ? K\n    : T[K] extends object\n    ? never\n    : K;\n}[keyof T]>;\n\ntype OmitChildrenElements<T> = Pick<T, {\n    [K in keyof T]: T[K] extends TypedArray\n    ? K\n    : T[K] extends (Function | Constructor<any> | Map<any, any> | Set<any> | Promise<any> | TypedArray)\n    ? K\n    : T[K] extends (object | any[] | ArrayLike<any>)\n    ? never\n    : K;\n}[keyof T]>;\n\n/**\n * Create an object with flatted properties of the original object, the children\n * nodes' properties will be transformed to a string-represented path.\n * NOTE: this function also flat array/array-like nodes (except for TypedArray).\n * @param depth Default value: `1`.\n * @example\n *  flatObject({ foo: { bar: \"Hello, World!\" } }) === { \"foo.bar\": \"Hello, World!\" }\n */\nexport default function flatObject<T extends object>(\n    obj: T,\n    depth?: number\n): OmitChildrenNodes<T> & Record<string | symbol, any>;\nexport default function flatObject<T extends object>(\n    obj: T,\n    depth: number,\n    flatArray: true\n): OmitChildrenElements<T> & Record<string | symbol, any>;\nexport default function flatObject(obj: any, depth = 1, flatArray = false) {\n    return flatDeep({}, obj, void 0, 0, depth, flatArray);\n}\n\nfunction flatDeep(\n    carrier: any,\n    source: any,\n    field: string,\n    depth: number,\n    maxDepth: number,\n    flatArray: boolean\n) {\n    let isArr: boolean;\n    let isDict: boolean;\n    let isContent = !isVoid(field);\n\n    if (depth === maxDepth || (\n        !(isArr = isArrayLike(source, true) && !isBufferLike(source)) &&\n        !(isDict = isDictLike(source))\n    )) {\n        carrier[field] = source;\n    } else if (isDict) {\n        keysOf(<object>source).forEach((key: string | symbol) => {\n            let value = source[key];\n\n            if (typeof key === \"symbol\") {\n                if (depth === 0) { // only allow top-level symbol properties\n                    carrier[key] = value;\n                }\n            } else {\n                flatDeep(\n                    carrier,\n                    value,\n                    isContent ? `${field}.${key}` : key,\n                    isContent ? depth + 1 : depth,\n                    maxDepth,\n                    flatArray\n                );\n            }\n        });\n    } else if (isArr) {\n        if (flatArray) {\n            for (let i = 0, len = (<any[]>source).length; i < len; ++i) {\n                flatDeep(\n                    carrier,\n                    (<any[]>source)[i],\n                    isContent ? `${field}.${i}` : String(i),\n                    isContent ? depth + 1 : depth,\n                    maxDepth,\n                    flatArray\n                );\n            }\n        } else {\n            carrier[field] = source;\n        }\n    }\n\n    return carrier;\n}\n","export type Global = Ensured<Partial<NodeJS.Global & Window & typeof globalThis>, keyof Omit<NodeJS.Global,\n    \"Buffer\" |\n    \"clearImmediate\" |\n    \"gc\" |\n    \"GLOBAL\" |\n    \"global\" |\n    \"process\" |\n    \"root\" |\n    \"setImmediate\" |\n    \"v8debug\">>;\n\n/** Gets the global object of the host environment. */\nexport default function getGlobal(): Global;\n/** Returns a property from the global object. */\nexport default function getGlobal<P extends keyof Global>(prop: P): Global[P];\n/** Returns a property from the global object. */\nexport default function getGlobal(prop: string): any;\nexport default function getGlobal(prop: string = void 0): any {\n    let _global: Global & { [prop: string]: any; };\n\n    if (typeof globalThis === \"object\") {\n        _global = <any>globalThis;\n    } else if (typeof self === \"object\") {\n        _global = self;\n    } else if (typeof global === \"object\") {\n        _global = <any>global;\n    } else if (typeof window === \"object\") {\n        _global = window;\n    }\n\n    return _global && (prop ? _global[prop] : _global);\n}\n","import \"./types\";\nimport count from \"./count\";\nimport define from \"./define\";\nimport diff from \"./diff\";\nimport ensureType from \"./ensureType\";\nimport flatObject from \"./flatObject\";\nimport getGlobal from \"./getGlobal\";\nimport isBetween from \"./isBetween\";\nimport isEmpty from \"./isEmpty\";\nimport isFloat from \"./isFloat\";\nimport isInteger from \"./isInteger\";\nimport isNumeric from \"./isNumeric\";\nimport isOwnKey from \"./isOwnKey\";\nimport isOwnMethod from \"./isOwnMethod\";\nimport isSubClassOf from \"./isSubClassOf\";\nimport isVoid from \"./isVoid\";\nimport keysOf from \"./keysOf\";\nimport omit from \"./omit\";\nimport omitVoid from \"./omitVoid\";\nimport patch from \"./patch\";\nimport pick from \"./pick\";\nimport rand from \"./rand\";\nimport randStr from \"./randStr\";\nimport sleep from \"./sleep\";\nimport sort from \"./sort\";\nimport split from \"./split\";\nimport timestamp from \"./timestamp\";\nimport typeAs from \"./typeAs\";\nimport typeOf from \"./typeOf\";\nimport until from \"./until\";\nimport useThrottle from \"./useThrottle\";\nimport wrap from \"./wrap\";\n\nexport {\n    count,\n    define,\n    diff,\n    ensureType,\n    flatObject,\n    getGlobal,\n    isBetween,\n    isFloat,\n    isInteger,\n    isNumeric,\n    isEmpty,\n    isOwnKey,\n    isOwnMethod,\n    isSubClassOf,\n    isVoid,\n    keysOf,\n    omit,\n    omitVoid,\n    patch,\n    pick,\n    rand,\n    randStr,\n    sleep,\n    sort,\n    split,\n    timestamp,\n    typeAs,\n    typeOf,\n    until,\n    useThrottle,\n    wrap\n};\n","/**\n * Checks if a number is between two numbers (gte than the minimal value and lte\n * than the maximum value).\n */\nexport default function isBetween(value: number, [min, max]: [number, number]) {\n    return value >= min && value <= max;\n}","import { isArrayLike, isBufferLike, isCollectionLike } from \"is-like\";\n\nconst BaseEmptyPrimitives: any[] = [\"\", NaN, null, void 0];\nconst EmptyPrimitives: any[] = [...BaseEmptyPrimitives, 0, false];\n\nif (typeof BigInt === \"function\")\n    EmptyPrimitives.push(BigInt(\"0\"));\n\n/**\n * Checks if the value resolves to an empty object or a falsy value.\n */\nexport default function isEmpty(value: any, deep = false): boolean {\n    return test(value, Boolean(deep), EmptyPrimitives);\n}\n\nfunction test(\n    value: any,\n    deep: boolean,\n    emptyPrimitives: any[]\n): boolean {\n    if (emptyPrimitives.includes(value))\n        return true;\n\n    if (typeof value === \"object\") {\n        if (isBufferLike(value)) {\n            return value.byteLength === 0;\n        } else if (isArrayLike(value)) {\n            if (value.length === 0) {\n                return true;\n            } else if (!deep) {\n                return false;\n            } else {\n                for (let i = 0, len = value.length; i < len; ++i) {\n                    if (!test(value[i], deep, BaseEmptyPrimitives)) {\n                        return false;\n                    }\n                }\n\n                return true;\n            }\n        } else if (isCollectionLike(value, true)) {\n            if (value.size === 0) {\n                return true;\n            } else if (!deep) {\n                return false;\n            } else {\n                if (value instanceof Map) {\n                    for (let v of value.values()) {\n                        if (!test(v, deep, BaseEmptyPrimitives)) {\n                            return false;\n                        }\n                    }\n\n                    return true;\n                } else if (value instanceof Set) {\n                    for (let v of value) {\n                        if (!test(v, deep, BaseEmptyPrimitives)) {\n                            return false;\n                        }\n                    }\n\n                    return true;\n                }\n\n                return false;\n            }\n        } else {\n            let keys = Reflect.ownKeys(value);\n\n            if (keys.length === 0) {\n                return true;\n            } else if (!deep) {\n                return false;\n            } else {\n                return keys.every(\n                    k => test(value[k], deep, BaseEmptyPrimitives)\n                );\n            }\n        }\n    }\n\n    return false;\n}","/**\n * Checks if the value is a float number.\n */\nexport default function isFloat(value: any): value is number {\n    return typeof value === \"number\"\n        && !isNaN(value)\n        && (!Number.isFinite(value) || value % 1 !== 0);\n}","/**\n * Checks if the value is an integer number (or bigint).\n */\nexport default function isInteger(value: any): value is (number | bigint) {\n    let type = typeof value;\n    return type === \"bigint\"\n        || (type === \"number\" &&\n            !isNaN(value) &&\n            Number.isFinite(value) &&\n            value % 1 === 0);\n}","/**\n * Checks if the value is a number or numeric string.\n */\nexport default function isNumeric(\n    value: any\n): value is (number | bigint | string) {\n    let type = typeof value;\n    return (type === \"number\" || type === \"bigint\" || type === \"string\")\n        && !isNaN(Number(value));\n}","import isVoid from './isVoid';\n\n/**\n * Checks if a property name is one of the properties of the target object.\n */\nexport default function isOwnKey<T>(\n    obj: T,\n    prop: string | number | symbol\n): prop is keyof T {\n    return !isVoid(obj) && Object.prototype.hasOwnProperty.call(obj, prop);\n}","/**\n * Checks if a property name is one of the own methods of the target object (,\n * this method is defined in the prototype of the object and is not inherited\n * from a super class).\n */\nexport default function isOwnMethod<T>(obj: T, method: string): boolean {\n    let proto = Object.getPrototypeOf(obj);\n    return proto !== null\n        && Object.prototype.hasOwnProperty.call(proto, method)\n        && typeof proto[method] === \"function\";\n}","/** Checks if a class is a sub-class of (inherited from) the base class. */\nexport default function isSubClassOf<T, B>(\n    target: Constructor<T>,\n    base: Constructor<B>\n) {\n    return typeof target === \"function\"\n        && typeof base === \"function\"\n        && target.prototype instanceof base;\n}","/**\n * Checks if a value is resolved to void (`null`, `undefined` or `NaN`).\n */\nexport default function isVoid(value: any): value is void {\n    return value === null || value === undefined || Object.is(value, NaN);\n}","/** Returns the indexes of the given array. */\nexport default function keysOf<T extends any[]>(arr: T): number[];\n/** Returns an array of the given function's own properties. */\nexport default function keysOf<T extends Function>(fn: T): (string | symbol)[];\n/** Returns an array of the given object's own properties. */\nexport default function keysOf<T extends object>(obj: T): (keyof T | symbol)[];\nexport default function keysOf(obj: object): (string | number | symbol)[] {\n    if (Array.isArray(obj)) {\n        return Object.keys(obj).map(Number);\n    } else {\n        return Reflect.ownKeys(obj);\n    }\n}","import isOwnKey from './isOwnKey';\n\n/** Creates an array composed without the picked items. */\nexport default function omit<T extends any>(arr: T[], items: T[]): T[];\n/**\n * Creates an object composed without the picked properties.\n * NOTE: this function will collect both the own keys and the enumerable\n * properties from the prototype chain.\n */\nexport default function omit<T extends object, U extends keyof T>(obj: T, props: (U | symbol)[]): Omit<T, U>;\nexport default function omit(obj: any, props: (string | number | symbol)[]) {\n    if (Array.isArray(obj)) {\n        return obj.filter(i => !props.includes(i));\n    } else {\n        let keys = Reflect.ownKeys(obj);\n        let result = keys.reduce((result: any, prop: symbol) => {\n            props.includes(prop) || (result[prop] = obj[prop]);\n            return result;\n        }, {});\n\n        // collect properties from the prototype chain\n        for (let prop in Object.getPrototypeOf(obj)) {\n            props.includes(prop) || (result[prop] = obj[prop]);\n        }\n\n        // special treatment for Error types\n        if (obj instanceof Error) {\n            [\"name\", \"message\"].forEach(prop => {\n                if (!props.includes(prop) && !isOwnKey(result, prop))\n                    result[prop] = (<any>obj)[prop];\n            });\n        }\n\n        return result;\n    }\n}\n","import isVoid from \"./isVoid\";\nimport isEmpty from \"./isEmpty\";\nimport keysOf from \"./keysOf\";\nimport { isArrayLike, isBufferLike } from 'is-like';\n\n/**\n * Creates an object composed with only the non-void properties.\n * @param omitEmptyObjects If set, empty properties of type `object` will be\n *  removed as well.\n * @param omitEmptyStrings If set, empty properties of type `string` will be\n *  removed as well.\n */\nexport default function omitVoid<T>(\n    target: T,\n    deep = false,\n    omitEmptyObjects = false,\n    omitEmptyStrings = false\n): T {\n    return doOmit(target, deep, omitEmptyObjects, omitEmptyStrings, 0);\n}\n\nexport function doOmit<T extends any>(\n    target: T,\n    deep: boolean,\n    omitEmptyObjects: boolean,\n    omitEmptyStrings: boolean,\n    depth: number\n): T {\n    if (typeof target === \"string\") {\n        return omitEmptyStrings && target.trim() === \"\" ? void 0 : target;\n    } else if (target === null\n        || typeof target !== \"object\"\n        || isBufferLike(target)\n    ) {\n        return target;\n    } else if (omitEmptyObjects && isEmpty(target)) {\n        return depth > 0 ? void 0 : (isArrayLike(target, true) ? [] : {}) as any;\n    }\n\n    if (isArrayLike(target, true)) {\n        let arr: any[] = [];\n\n        for (let i = 0, len = (<ArrayLike<any>>target).length; i < len; ++i) {\n            let value = target[i];\n\n            if (!isVoid(value)) {\n                if (deep) {\n                    value = doOmit(\n                        value,\n                        deep,\n                        omitEmptyObjects,\n                        omitEmptyStrings,\n                        depth + 1);\n                    isVoid(value) || arr.push(value);\n                } else {\n                    arr.push(value);\n                }\n            }\n        }\n\n        if (depth > 0 && omitEmptyObjects && isEmpty(arr)) {\n            return void 0;\n        } else {\n            return arr as any;\n        }\n    } else {\n        let obj = keysOf(<object><any>target).reduce((obj, key) => {\n            let value = target[key];\n\n            if (!isVoid(value)) {\n                if (deep) {\n                    value = doOmit(\n                        value,\n                        deep,\n                        omitEmptyObjects,\n                        omitEmptyStrings,\n                        depth + 1);\n                    isVoid(value) || (obj[key] = value);\n                } else {\n                    obj[key] = value;\n                }\n            }\n\n            return obj;\n        }, <T>{});\n\n        if (depth > 0 && omitEmptyObjects && isEmpty(obj)) {\n            return void 0;\n        } else {\n            return obj;\n        }\n    }\n}","import { isDictLike } from 'is-like';\nimport isEmpty from './isEmpty';\nimport isVoid from './isVoid';\n\n\n/**\n * Patches the differences onto the `origin` object from the `input` object. If\n * a property exists in both objects and the values are not equal, the `input`\n * one will be taken. However, those properties that are only presents in the\n * `origin` object will remain untouched.\n * \n * NOTE: This function mutates the `origin` object and returns the patched\n * differences, when patching, any void value in the `input` object will be\n * ignored.\n * \n * This function is very useful, for example, a client issued a patch of the\n * resource and the server wants to know what properties has been modified by\n * this update so that it can perform some extra operations to provide a better\n * user experience.\n */\nexport default function patch<T, U>(\n    origin: T,\n    input: U,\n    deep = false,\n    ignoreEmptyStrings = false,\n): T & Partial<U> {\n    return doPatch(origin, input, deep, ignoreEmptyStrings, false);\n}\n\nfunction doPatch(\n    origin: any,\n    input: any,\n    deep: boolean,\n    ignoreEmptyStrings: boolean,\n    isChildNode: boolean\n) {\n    if (isDictLike(origin) && isDictLike(input)) {\n        let keys = Reflect.ownKeys(input);\n        let result: any = {};\n\n        keys.forEach((key: string) => {\n            if (origin[key] !== input[key] &&\n                !isVoid(input[key]) && // ignore invalid values\n                (!ignoreEmptyStrings || input[key] !== \"\")\n            ) {\n                if (deep && isDictLike(origin[key]) && isDictLike(input[key])) {\n                    let _result = doPatch(\n                        origin[key],\n                        input[key],\n                        deep,\n                        ignoreEmptyStrings,\n                        true\n                    );\n\n                    if (!isEmpty(_result)) {\n                        result[key] = _result;\n                        Object.assign(origin[key], input[key]);\n                    }\n                } else {\n                    result[key] = origin[key] = input[key];\n                }\n            }\n        });\n\n        return result;\n    } else if (isChildNode) {\n        return input;\n    } else {\n        return {};\n    }\n}\n","/** Creates an array composed of the picked elements. */\nexport default function pick<T extends any[]>(arr: T, indexes: number[]): T;\n/** Creates an object composed of the picked properties. */\nexport default function pick<T extends object, U extends keyof T>(obj: T, props: (U | symbol)[]): Pick<T, U>;\nexport default function pick(obj: any, props: (string | number | symbol)[]) {\n    if (Array.isArray(obj)) {\n        return (<number[]>props).map(i => obj[i]);\n    } else {\n        return props.reduce((result: any, prop: string) => {\n            prop in obj && (result[prop] = obj[prop]);\n            return result;\n        }, {});\n    }\n}","/** Generates a random number within the range from `min` to `max`. */\nexport default function rand(min: number, max: number) {\n    return Number(min) + Math.floor(Math.random() * (max - min + 1));\n}","import rand from './rand';\n\n/** \n * Generates a random string.\n * @param chars The possible characters.\n */\nexport default function randStr(\n    length: number,\n    chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n) {\n    let str = \"\";\n    let max = chars.length - 1;\n\n    while (0 < length--) {\n        str += chars[rand(0, max)];\n    }\n\n    return str;\n}","/**\n * Delays the execution context for a while before running the remaining\n * procedures.\n */\nexport default function sleep(ms: number) {\n    return new Promise<void>(resolve => setTimeout(resolve, Number(ms)));\n}","import { isArrayLike, isDictLike } from 'is-like';\nimport { ensureArray } from \"./ensureType\";\n\ndeclare var Deno: Object;\n\n/**\n * Creates a new array with sorted elements of the original array, the sorted\n * array is in ascending order by default, unless providing a `compare` function\n * to determine how should the elements be ordered.\n * Unlike `Array.prototype.sort()`, this function always guarantees a stable\n * sort; and if all elements are numbers, they're sorted by their values instead\n * of converting to strings for sorting.\n */\nexport default function sort<T>(arr: ArrayLike<T>, compare?: (a: T, b: T) => number): T[];\n/**\n * Creates a new object with sorted keys (in ascending order) of the original\n * object, if `deep` is set, the children nodes will be sorted as well.\n * Note: symbol keys are not sorted and remain their original order.\n */\nexport default function sort<T extends object>(obj: T, deep?: boolean): T;\nexport default function sort(\n    target: any | any[],\n    method: ((a: any, b: any) => number) | boolean = void 0\n) {\n    if (isArrayLike(target, true)) {\n        let arr = ensureArray(target);\n        let compare = <(a: any, b: any) => number>method;\n\n        // If the compare function is omitted and all the elements are numbers\n        // (or of bigint), sort them by their values.\n        if (!compare && (onlyNumbers(arr) || onlyNumbers(arr, \"bigint\"))) {\n            compare = (a: number, b: number) => a - b;\n        }\n\n        if (shouldUseNativeSort(arr)) {\n            return arr.sort(compare);\n        }\n\n        // Emulate stable sort.\n        // Reference: http://blog.vjeux.com/2010/javascript/javascript-sorting-table.html\n        return arr\n            .map((value, index) => ({ value, index }))\n            .sort((a, b) => compare(a.value, b.value) || a.index - b.index)\n            .map(({ value }) => value);\n    } else if (isDictLike(target)) {\n        let deep = Boolean(method);\n        let keys = [\n            ...sort(Object.getOwnPropertyNames(target)), // sort the keys\n            ...Object.getOwnPropertySymbols(target)\n        ];\n\n        return keys.reduce((result, key: string) => {\n            let value = target[key];\n\n            if (deep) {\n                if (isArrayLike(value, true)) {\n                    value = ensureArray(value).map(item => {\n                        return isDictLike(item) ? sort(item, deep) : item;\n                    });\n                } else if (isDictLike(value)) {\n                    value = sort(value, deep);\n                }\n            }\n\n            result[key] = value;\n            return result;\n        }, {} as any);\n    } else {\n        if (typeof method === \"function\") {\n            throw new TypeError(\"The target to sort is not an array\");\n        } else if (typeof method === \"boolean\") {\n            throw new TypeError(\"The target to sort is not a pure object\");\n        } else {\n            throw new TypeError(\n                \"The target to sort is not an array or a pure object\"\n            );\n        }\n    }\n}\n\nfunction onlyNumbers(arr: any[], type: \"number\" | \"bigint\" = \"number\") {\n    return arr.every(ele => typeof ele === type);\n}\n\nfunction shouldUseNativeSort(arr: any[]) {\n    if (typeof process === \"object\" && typeof process.versions === \"object\") {\n        return arr.length <= 10\n            || parseFloat(process.versions.v8 || \"0\") >= 7.0;\n    } else if (typeof navigator === \"object\" && typeof navigator.userAgent === \"string\") {\n        let match = navigator.userAgent.match(\n            /(Chrome|Firefox|Safari|Edge|OPR)\\/(\\d+)/\n        );\n\n        if (match) {\n            let name = match[1];\n            let version = parseFloat(match[2]);\n\n            if ((name === \"Edge\" && arr.length <= 512) ||\n                (name === \"Chrome\" && (version >= 70) || arr.length <= 10) ||\n                (name === \"Firefox\" && version >= 3) ||\n                (name === \"Safari\" && version >= 10.1) ||\n                (name === \"OPR\" && version >= 54)\n            ) {\n                return true;\n            }\n        }\n    } else if (typeof Deno === \"object\") {\n        return true;\n    }\n\n    return false;\n}\n","import { isArrayLike, isBufferLike, isCollectionLike } from \"is-like\";\n\nfunction checkNumberArgument(name: string, value: any) {\n    if (typeof value !== \"number\") {\n        throw new TypeError(`argument '${name}' must be a number`);\n    } else if (value < 1) {\n        throw new RangeError(`argument '${name}' must be 1 or higher`);\n    }\n}\n\nfunction splitArrayLike(arr: ArrayLike<any>, length: number, total: number = void 0) {\n    let result = [];\n\n    for (let i = 0, j = (total || arr.length); i < j; i += length) {\n        if (typeof arr[\"slice\"] === \"function\") {\n            result.push(arr[\"slice\"](i, i + length));\n        } else {\n            result.push(Array.prototype.slice.call(arr, i, i + length));\n        }\n    }\n\n    return result;\n}\n\nfunction splitBuffer(buf: Buffer, sep: string | Buffer) {\n    let result: Buffer[] = [];\n    let offset = 0;\n    let length = sep.length;\n    let total = buf.byteLength;\n\n    while (offset < total) {\n        let index = buf.indexOf(sep, offset);\n\n        if (index !== -1) {\n            result.push(buf.slice(offset, index));\n            offset = index + length;\n        } else {\n            result.push(buf.slice(offset));\n            offset = total;\n        }\n    }\n\n    return result;\n}\n\nfunction splitObject(obj: any, size: number) {\n    let proto = Object.getPrototypeOf(obj);\n    let keyChunks = splitArrayLike(Object.keys(obj), size);\n    let result = [];\n\n    for (let keys of keyChunks) {\n        let chunk = Object.create(proto);\n        result.push(chunk);\n\n        for (let key of keys) {\n            chunk[key] = obj[key];\n        }\n    }\n\n    return result;\n}\n\nfunction splitNumber(num: number, step: number) {\n    let result: number[] = [];\n    let offset = 0;\n\n    while ((offset += step) <= num) {\n        result.push(offset);\n    }\n\n    if (num > offset - step) {\n        result.push(num);\n    }\n\n    return result;\n}\n\n/** Splits a string into chunks by the given separator. */\nexport default function split(str: string, separator: string | RegExp): string[];\n/** Splits a string into chunks with the given length. */\nexport default function split(str: string, length: number): string[];\n/** Splits a number into serials with the given step. */\nexport default function split(num: number, step: number): number[];\n/** Splits a Buffer into chunks by the given separator. */\nexport default function split<T extends Buffer>(buf: T, separator: string | Buffer): T[];\n/** Splits a Buffer, an ArrayBuffer, or a TypedArray into chunks with the given byteLength. */\nexport default function split<T extends Buffer | ArrayBufferLike | TypedArray>(buf: T, byteLength: number): T[];\n/** Splits an array into chunks of arrays with the given length. */\nexport default function split<T extends Array<any>>(arr: T, length: number): T[];\n/** Splits an array-like object into chunks of arrays with the given length. */\nexport default function split<T>(list: ArrayLike<T>, length: number): T[][];\n/** Splits a collection into chunks with the given size. */\nexport default function split<T extends Set<any> | Map<any, any>>(collection: T, size: number): T[];\n/** Splits an object into multiple objects with partial properties. */\nexport default function split<T extends object>(obj: T extends Function ? never : T, size: number): Partial<T>[];\nexport default function split(obj: any, sep: any) {\n    if (arguments.length < 2) {\n        throw new SyntaxError(`2 arguments required, received ${arguments.length}`);\n    } else if (typeof obj === \"string\") {\n        if (typeof sep === \"string\" || sep instanceof RegExp) {\n            return obj.split(sep);\n        } else {\n            checkNumberArgument(\"length\", sep);\n            return splitArrayLike(obj, sep);\n        }\n    } else if (typeof obj === \"number\") {\n        checkNumberArgument(\"step\", sep);\n        return splitNumber(obj, sep);\n    } else if (typeof Buffer === \"function\"\n        && Buffer.isBuffer(obj)\n        && (typeof sep === \"string\" || Buffer.isBuffer(sep))\n    ) {\n        return splitBuffer(obj, sep);\n    } else if (isBufferLike(obj)) {\n        checkNumberArgument(\"byteLength\", sep);\n        return splitArrayLike(obj, sep, obj.byteLength);\n    } else if (isArrayLike(obj)) {\n        checkNumberArgument(\"length\", sep);\n        return splitArrayLike(obj, sep);\n    } else if (isCollectionLike(obj)) {\n        let ctor = obj[\"constructor\"];\n        checkNumberArgument(\"size\", sep);\n        return splitArrayLike([...obj], sep).map(list => new ctor(list));\n    } else if (typeof obj === \"object\" && obj !== null) {\n        checkNumberArgument(\"size\", sep);\n        return splitObject(obj, sep);\n    } else {\n        throw new TypeError(\"argument 'obj' must be a string, a number or an object\");\n    }\n}","import isNumeric from './isNumeric';\nimport isVoid from './isVoid';\n\nexport default timestamp;\n\n/** Returns the current UNIX timestamp. */\nfunction timestamp(ms?: boolean): number;\n/**\n * Returns the UNIX timestamp according the input date or time.\n * \n * TIP: since v0.2.3, this function supports the date string format in\n * `<year>,<monthIndex>,[date],[hours],[minutes],[seconds],[milliseconds]`,\n * which segments is used as arguments for `Date` constructor.\n * \n * NOTE: if the input value is a number, it must be of milliseconds.\n */\nfunction timestamp(input: string | number | Date, ms?: boolean): number;\nfunction timestamp(input: any, ms = false) {\n    if (typeof input === \"boolean\") {\n        ms = input;\n        input = void 0;\n    }\n\n    input = input || new Date();\n\n    if (input instanceof Date) {\n        return ms ? input.valueOf() : Math.floor(input.valueOf() / 1000);\n    } else if (typeof input === \"number\") {\n        return ms ? input : Math.floor(input / 1000);\n    } else {\n        let date: Date;\n        let dateTime = String(input).trim();\n\n        if (dateTime.includes(\",\") && dateTime.split(\",\").every(isNumeric)) {\n            date = parseDateRawArgs(dateTime);\n        } else {\n            if (/^\\d{1,2}:\\d{2}(:\\d{2})?/.test(dateTime)) { // time only\n                date = new Date();\n                dateTime = date.getFullYear()\n                    + \"-\" + (date.getMonth() + 1)\n                    + \"-\" + date.getDate()\n                    + \" \" + dateTime;\n            }\n\n            date = new Date(dateTime);\n        }\n\n        if (String(date) !== \"Invalid Date\") {\n            return ms ? date.valueOf() : Math.floor(date.valueOf() / 1000);\n        } else {\n            throw new Error(\"The input argument is not a valid date-time string\");\n        }\n    }\n}\n\nfunction parseDateRawArgs(str: string) {\n    let [Y, M, D, H, m, s, ms] = str.split(\",\").map(Number);\n    let date = new Date();\n\n    isVoid(Y) || date.setFullYear(Y);\n    isVoid(M) || date.setMonth(M);\n    isVoid(D) || date.setDate(D);\n    isVoid(H) || date.setHours(H);\n    isVoid(m) || date.setMinutes(m);\n    isVoid(s) || date.setSeconds(s);\n    isVoid(ms) || date.setMilliseconds(ms);\n\n    return date;\n}","import getGlobal from './getGlobal';\nimport typeOf from './typeOf';\n\n\n/**\n * Returns the object if it's an instance of the type, otherwise returns `null`.\n * This function is used with the syntax shown in the example.\n * @example\n *  let foo = typeAs(bar, SomeType)?.doSomething();\n */\nexport default function typeAs(target: any, type: StringConstructor): string;\nexport default function typeAs(target: any, type: NumberConstructor): number;\nexport default function typeAs(target: any, type: BigIntConstructor): bigint;\nexport default function typeAs(target: any, type: BooleanConstructor): boolean;\nexport default function typeAs(target: any, type: SymbolConstructor): symbol;\nexport default function typeAs<T>(target: T, type: Constructor<T>): T;\nexport default function typeAs(target: any, type: any): any {\n    if (typeOf(type) !== \"class\" &&\n        type !== Symbol &&\n        (typeof BigInt === \"function\" && type !== BigInt)\n    ) {\n        throw new TypeError(\"'type' must be a valid constructor\");\n    }\n\n    let _type: any;\n    let primitiveMap = <Record<string, Function>>{\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": getGlobal(\"BigInt\"),\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n\n    if (target instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return type(target); // make sure the primitives are returned.\n        } else {\n            return target;\n        }\n    } else if ((_type = typeof target) && primitiveMap[_type] === type) {\n        return target;\n    }\n\n    return null;\n}","import isVoid from './isVoid';\nimport isClass from \"could-be-class\";\n\nexport type TypeNames = \"string\"\n    | \"number\"\n    | \"bigint\"\n    | \"boolean\"\n    | \"symbol\"\n    | \"function\"\n    | \"class\"\n    | \"arguments\"\n    | \"void\";\n\n/**\n * Returns a string representation or the constructor of the value's type.\n * NOTE: this function also returns `'void'` when testing `NaN`.\n */\nexport default function typeOf<T extends any>(\n    target: T\n): TypeNames | Constructor<T> {\n    if (arguments.length === 0)\n        throw new TypeError(\"1 argument is required, 0 given\");\n    else if (isVoid(target))\n        return \"void\";\n\n    let type = typeof target;\n\n    if (type === \"function\") {\n        if (isClass(<any>target)) {\n            return \"class\";\n        } else {\n            return \"function\";\n        }\n    } else if (type === \"object\") {\n        if (Object.prototype.toString.call(target) === \"[object Arguments]\") {\n            return \"arguments\";\n        } else {\n            return <any>target.constructor || Object;\n        }\n    } else {\n        return <any>type;\n    }\n}\n","/**\n * Hangs the execution context until the test is passed.\n */\nexport default async function until(test: () => boolean | Promise<boolean>) {\n    if (typeof setImmediate === \"undefined\") {\n        var setImmediate = (cb: () => void) => setTimeout(cb, 0);\n    }\n\n    do { await new Promise<void>(setImmediate); } while ((await test()) == false);\n}\n","import isEmpty from './isEmpty';\n\nif (typeof setImmediate === \"undefined\") {\n    // compatible with browsers\n    var setImmediate = (cb: () => void) => setTimeout(cb, 0);\n}\n\nexport default useThrottle;\n\n/**\n * Uses throttle strategy on the given resource and returns a throttle function,\n * if a subsequent call happens within the `interval` time, the previous result\n * will be returned and the current `handle` function will not be invoked.\n * \n * NOTE: this function only creates the throttle function once and uses\n * `interval` only once, any later calls on the same `resource` will return the\n * initial throttle function.\n */\nfunction useThrottle(resource: any, interval: number) {\n    if (interval < 1) {\n        throw new RangeError(\n            \"The 'interval' time for throttle must not be smaller than 1\"\n        );\n    } else if (!useThrottle.gcTimer) {\n        let { gcInterval, tasks: jobs } = useThrottle;\n\n        useThrottle.gcTimer = setInterval(() => {\n            let now = Date.now();\n\n            jobs.forEach(({ interval, lastActive }, key) => {\n                if (now - lastActive > Math.max(interval + 5, gcInterval)) {\n                    jobs.delete(key);\n                }\n            });\n        }, gcInterval);\n        \n        if (typeof useThrottle.gcTimer.unref === \"function\") {\n            useThrottle.gcTimer.unref();\n        }\n    }\n\n    let task = useThrottle.tasks.get(resource);\n\n    if (!task) {\n        useThrottle.tasks.set(resource, task = createThrottleTask(interval));\n    }\n\n    return task.func;\n}\n\nnamespace useThrottle {\n    export var gcInterval = 30000;\n    export let gcTimer: any = void 0;\n    export const tasks = new Map<any, ThrottleTask>();\n}\n\ntype ThrottleTask = {\n    interval: number;\n    lastActive: number;\n    cache: { value: any, error: any };\n    queue: Set<{ resolve: (value: any) => void, reject: (err: any) => void; }>;\n    func: <T, A extends any[]>(\n        handle: (...args: A) => T | Promise<T>,\n        ...args: A\n    ) => Promise<T>;\n};\n\nfunction createThrottleTask(interval: number): ThrottleTask {\n    let task: ThrottleTask = {\n        interval,\n        lastActive: 0,\n        cache: void 0,\n        queue: new Set(),\n        func: void 0\n    };\n\n    async function throttle<T, A extends any[]>(\n        this: ThrottleTask,\n        handle: (...args: A) => T | Promise<T>,\n        ...args: A\n    ): Promise<T> {\n        let now = Date.now();\n\n        if ((now - this.lastActive) >= interval) {\n            // Clear cache and update the invoke time before dispatching the\n            // new job.\n            this.cache = void 0;\n            this.lastActive = now;\n\n            let result: T;\n            let error: any;\n\n            try {\n                result = await handle(...args);\n                this.cache = { value: result, error: null };\n            } catch (err) {\n                this.cache = { value: void 0, error: error = err };\n            }\n\n            // Resolve or reject subsequent jobs once the result is ready,\n            // and make the procedure asynchronous so that they will be\n            // performed after the current job.\n            setImmediate(() => {\n                if (!isEmpty(this.queue)) {\n                    this.queue.forEach((job) => {\n                        error ? job.reject(error) : job.resolve(result);\n                        this.queue.delete(job);\n                    });\n                }\n            });\n\n            if (error)\n                throw error;\n            else\n                return result;\n        } else if (this.cache) {\n            if (this.cache.error)\n                throw this.cache.error;\n            else\n                return this.cache.value as T;\n        } else {\n            return new Promise<T>((resolve, reject) => {\n                this.queue.add({ resolve, reject });\n            });\n        }\n    }\n\n    task.func = throttle.bind(task);\n    return task;\n}\n","import define from './define';\n\n/**\n * Wraps a function inside another function and returns a new function that\n * copies the original function's name and properties.\n */\nexport default function wrap<T extends (...args: any[]) => any>(\n    target: T,\n    wrapper: (target: T, ...args: Parameters<T>) => ReturnType<T>\n) {\n    let fn = function (this: any, ...args: Parameters<T>): ReturnType<T> {\n        return wrapper.call(this, target, ...args);\n    };\n\n    define(fn, \"name\", target.name);\n    define(fn, \"length\", target.length);\n    define(fn, \"toString\", target.toString.bind(target));\n\n    return fn as T;\n}","module.exports = function(s) {\n  return ~-encodeURI(s).split(/%..|./).length\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(341);\n"],"sourceRoot":""}