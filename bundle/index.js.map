{"version":3,"file":"index.js","sources":["../node_modules/is-like/index.mjs","../count.ts","../isVoid.ts","../node_modules/could-be-class/index.js","../typeOf.ts","../isEmpty.ts","../node_modules/@ayonli/jsext/esm/number/index.js","../ensureType.ts","../flatObject.ts","../isBetween.ts","../isFloat.ts","../isNumeric.ts","../node_modules/@ayonli/jsext/esm/object/index.js","../isOwnKey.ts","../isOwnMethod.ts","../isSubClassOf.ts","../node_modules/@ayonli/jsext/esm/mixins.js","../omitInvalid.ts","../omitVoid.ts","../patch.ts","../rand.ts","../sleep.ts","../node_modules/@ayonli/jsext/esm/promise/index.js","../sort.ts","../split.ts","../typeAs.ts","../until.ts","../useThrottle.ts","../wrap.ts","../node_modules/@ayonli/jsext/esm/wrap.js","../define.ts","../diff.ts","../getGlobal.ts","../isInteger.ts","../keysOf.ts","../omit.ts","../pick.ts","../randStr.ts","../timestamp.ts","../trim.ts"],"sourcesContent":["/**\n * @param {any} value \n * @param {Array<[string|symbol, string]>} props \n * @param {Array<string>} types\n */\nfunction isObjectWith(value, ...props) {\n    let isObj = typeof value === \"object\" && value !== null;\n    return isObj && props.every(([p, t]) => p in value && typeof value[p] === t);\n}\n\nfunction isEmptyDict(obj) {\n    try {\n        let str = JSON.stringify(obj);\n        return str === \"{}\" || str === \"[]\";\n    } catch (e) {\n        return false;\n    }\n}\n\n/**\n * Checks if the input value is a dict `object`, which includes key-value pairs.\n * @returns {value is { [x: string | symbol]: any; }}\n */\nexport function isDictLike(value) {\n    return typeof value === \"object\" && value !== null\n        && (value.constructor === Object || (\n            !(value instanceof Date) &&\n            !(value instanceof RegExp) &&\n            !isArrayLike(value, true) &&\n            !isObjectIdLike(value) &&\n            !isEmptyDict(value) &&\n            !isTypedArrayLike(value) &&\n            !isCollectionLike(value) &&\n            !isPromiseLike(value)\n        ));\n}\n\n/**\n * Checks if the input value is an `object` with `length` property or a string.\n * @returns {value is ArrayLike<any>}\n */\nexport function isArrayLike(value, strict = false) {\n    if (Array.isArray(value)) {\n        return true;\n    } else if (!strict) {\n        return isObjectWith(value, [\"length\", \"number\"])\n            || (typeof value === \"string\");\n    } else if (isObjectWith(value, [\"length\", \"number\"])) {\n        let keys = Object.keys(value);\n        let isNonEnumLength = !keys.includes(\"length\");\n        let indexes;\n\n        if (value.length === 0 ||\n            (indexes = keys.map(Number).filter(isFinite)).length === 0) {\n            return isNonEnumLength;\n        } else {\n            let hasIterator = typeof value[Symbol.iterator] === \"function\";\n\n            for (let i = value.length; i--;) {\n                if (!indexes.includes(i) && !(isNonEnumLength || hasIterator)) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n * Checks if the input value is an `object` with `size` property and\n * `[Symbol.iterator]()` method, or is an instance of **WeakMap** or\n * **WeakSet** if `excludeWeakOnes` is not set.\n */\nexport function isCollectionLike(value, excludeWeakOnes = false) {\n    return (isObjectWith(value, [\"size\", \"number\"], [Symbol.iterator, \"function\"]))\n        || (!excludeWeakOnes &&\n            (value instanceof WeakMap || value instanceof WeakSet));\n}\n\n/**\n * \n * @returns {value is ArrayLike<number> & Pick<Uint8Array, \"byteLength\" | \"slice\">}\n */\nexport function isTypedArrayLike(value) {\n    return isObjectWith(value, [\"byteLength\", \"number\"], [\"slice\", \"function\"]);\n}\n\n/** @deprecated An alias of `isTypedArrayLike`. */\nexport const isBufferLike = isTypedArrayLike;\n\n/**\n * Checks if the input value is an `object` with `name`, `message` and `stack`\n * properties.\n * @returns {value is Error}\n */\nexport function isErrorLike(value) {\n    return isObjectWith(value,\n        [\"name\", \"string\"],\n        [\"message\", \"string\"],\n        [\"stack\", \"string\"]\n    );\n}\n\n/**\n * Checks if the input is an `object` with `then()` method.\n * @returns {value is PromiseLike<any>}\n */\nexport function isPromiseLike(value) {\n    return isObjectWith(value, [\"then\", \"function\"]);\n}\n\nexport function isObjectIdLike(value) {\n    return typeof value === \"object\" && value !== null\n        && (value.constructor.name === \"ObjectId\"\n            || value.constructor.name === \"ObjectID\");\n}\n","import { isArrayLike, isBufferLike, isCollectionLike } from \"is-like\";\nconst encoder = new TextEncoder();\nexport default count;\nfunction count(target, option = void 0) {\n    if (typeof target === \"string\") {\n        if (typeof option === \"string\") {\n            if (!option) {\n                return target.length + 1;\n            }\n            else if (!target) {\n                return 0;\n            }\n            return target.split(option).length - 1;\n        }\n        else if (option === true) {\n            if (typeof Buffer === \"function\" &&\n                typeof Buffer.byteLength === \"function\") {\n                return Buffer.byteLength(target);\n            }\n            else {\n                return encoder.encode(target).byteLength;\n            }\n        }\n        else {\n            return target.length;\n        }\n    }\n    else if (isArrayLike(target, true)) {\n        if (arguments.length === 2) {\n            let times = 0;\n            for (let i = target.length; i--;) {\n                // treat 0 equals -0 and NaN equals NaN\n                if (target[i] === option || Object.is(target[i], option)) {\n                    times++;\n                }\n            }\n            return times;\n        }\n        else {\n            return target.length;\n        }\n    }\n    else if (isBufferLike(target)) {\n        return target.byteLength;\n    }\n    else if (isCollectionLike(target, true)) {\n        return target.size;\n    }\n    else {\n        return Object.keys(target).length;\n    }\n}\n//# sourceMappingURL=count.js.map","/**\n * Checks if a value is resolved to void (`null`, `undefined` or `NaN`).\n *\n * @deprecated use `!Object.isValid` from `@ayonli/jsext/object/augment` instead.\n */\nexport default function isVoid(value) {\n    return value === null || value === undefined || Object.is(value, NaN);\n}\n//# sourceMappingURL=isVoid.js.map","\"use strict\";\n\n/**\n * Checks if an object could be an instantiable class.\n * @param {any} obj\n * @returns {obj is new (...args: any[]) => any}\n */\nfunction couldBeClass(obj) {\n    if (typeof obj != \"function\") return false;\n\n    // async function or arrow function\n    if (obj.prototype === undefined)\n        return false;\n\n    // generator function and malformed inheritance\n    if (obj.prototype.constructor !== obj)\n        return false;\n\n    // has own prototype properties\n    if (Object.getOwnPropertyNames(obj.prototype).length >= 2)\n        return true;\n\n    var str = String(obj);\n\n    // ES6 class\n    if (str.slice(0, 5) == \"class\")\n        return true;\n\n    // anonymous function\n    if (/^function\\s*\\(|^function anonymous\\(/.test(str))\n        return false;\n\n    var hasThis = /(call|apply|_classCallCheck)\\(this(, arguments)?\\)|\\bthis(.\\S+|\\[.+?\\])\\s*(=|\\()|=\\s*this[,;]/.test(str);\n\n    // Upper-cased first char of the name and has `this` in the body, or it's\n    // a native class in ES5 style.\n    if (/^function\\s+[A-Z]/.test(str) && (hasThis ||\n        (/\\[native code\\]/.test(str) &&\n            obj.name !== \"BigInt\" && // ES6 BigInt and Symbol is not class\n            obj.name !== \"Symbol\"\n        )\n    )) {\n        return true;\n    }\n\n    // TypeScript anonymous class to ES5 with default export\n    if (hasThis && obj.name === \"default_1\")\n        return true;\n\n    return false;\n}\n\nexports.couldBeClass = couldBeClass;\nexports.default = couldBeClass;","import isVoid from \"./isVoid.ts\";\nimport { couldBeClass as isClass } from \"could-be-class\";\n/**\n * Returns a string representation or the constructor of the value's type.\n * NOTE: this function also returns `'void'` when testing `NaN`.\n */\nexport default function typeOf(target) {\n    if (arguments.length === 0)\n        throw new TypeError(\"1 argument is required, 0 given\");\n    else if (isVoid(target))\n        return \"void\";\n    let type = typeof target;\n    if (type === \"function\") {\n        if (isClass(target)) {\n            return \"class\";\n        }\n        else {\n            return \"function\";\n        }\n    }\n    else if (type === \"object\") {\n        if (Object.prototype.toString.call(target) === \"[object Arguments]\") {\n            return \"arguments\";\n        }\n        else {\n            return target.constructor || Object;\n        }\n    }\n    else {\n        return type;\n    }\n}\n//# sourceMappingURL=typeOf.js.map","import { isArrayLike, isBufferLike, isCollectionLike } from \"is-like\";\nconst BaseEmptyPrimitives = [\"\", NaN, null, void 0];\nconst EmptyPrimitives = [...BaseEmptyPrimitives, 0, false];\nif (typeof BigInt === \"function\")\n    EmptyPrimitives.push(BigInt(\"0\"));\n/**\n * Checks if the value resolves to an empty object or a falsy value.\n */\nexport default function isEmpty(value, deep = false) {\n    return test(value, Boolean(deep), EmptyPrimitives);\n}\nfunction test(value, deep, emptyPrimitives) {\n    if (emptyPrimitives.includes(value))\n        return true;\n    if (typeof value === \"object\") {\n        if (value instanceof RegExp) {\n            return false;\n        }\n        else if (value instanceof Date) {\n            return String(value) === \"Invalid Date\";\n        }\n        else if (value instanceof Error) {\n            return value.message.length === 0;\n        }\n        else if (isBufferLike(value)) {\n            return value.byteLength === 0;\n        }\n        else if (isArrayLike(value, true)) {\n            if (value.length === 0) {\n                return true;\n            }\n            else if (!deep) {\n                return false;\n            }\n            else {\n                for (let i = 0, len = value.length; i < len; ++i) {\n                    if (!test(value[i], deep, BaseEmptyPrimitives)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n        else if (isCollectionLike(value, true)) {\n            if (value.size === 0) {\n                return true;\n            }\n            else if (!deep) {\n                return false;\n            }\n            else {\n                if (value instanceof Map) {\n                    for (let v of value.values()) {\n                        if (!test(v, deep, BaseEmptyPrimitives)) {\n                            return false;\n                        }\n                    }\n                    return true;\n                }\n                else if (value instanceof Set) {\n                    for (let v of value) {\n                        if (!test(v, deep, BaseEmptyPrimitives)) {\n                            return false;\n                        }\n                    }\n                    return true;\n                }\n                return false;\n            }\n        }\n        else {\n            let keys = Reflect.ownKeys(value);\n            if (keys.length === 0) {\n                return true;\n            }\n            else if (!deep) {\n                return false;\n            }\n            else {\n                return keys.every(k => test(value[k], deep, BaseEmptyPrimitives));\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=isEmpty.js.map","/** Returns `true` if the given value is a float number, `false` otherwise. */\nfunction isFloat(value) {\n    return typeof value === \"number\"\n        && !Number.isNaN(value)\n        && (!Number.isFinite(value) || value % 1 !== 0);\n}\n/**\n * Returns `true` if the given value is a numeric value, `false` otherwise. A numeric value is a\n * number, a bigint, or a string that can be converted to a number or bigint.\n */\nfunction isNumeric(value) {\n    const type = typeof value;\n    if (type === \"number\" || type === \"bigint\") {\n        return true;\n    }\n    else if (type === \"string\") {\n        if (!Number.isNaN(value)) {\n            return true;\n        }\n        else {\n            try {\n                BigInt(value);\n                return true;\n            }\n            catch (_a) {\n                return false;\n            }\n        }\n    }\n    return false;\n}\n/** Return `true` if a number is between the given range (inclusive). */\nfunction isBetween(value, [min, max]) {\n    return value >= min && value <= max;\n}\n/** Returns a random integer ranged from `min` to `max` (inclusive). */\nfunction random(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n}\n/** Creates a generator that produces sequential numbers from `min` to `max` (inclusive). */\nfunction* sequence(min, max, step = 1, loop = false) {\n    let id = min;\n    while (true) {\n        yield id;\n        if ((id += step) > max) {\n            if (loop) {\n                id = min;\n            }\n            else {\n                break;\n            }\n        }\n    }\n}\n\nexport { isBetween, isFloat, isNumeric, random, sequence };\n//# sourceMappingURL=index.js.map\n","import { isArrayLike, isDictLike } from \"is-like\";\nimport { isBetween } from \"@ayonli/jsext/number\";\nconst truePattern = /^\\s*(true|yes|on)\\s*$/i;\nconst falsePattern = /^\\s*(false|no|off)\\s*$/i;\nconst nullPattern = /^\\s*(null|nil|none|void|undefined)\\s*$/i;\nconst nanPattern = /^\\s*NaN\\s*$/;\nconst infinityPattern = /^\\s*-?Infinity\\s*/;\nconst regexPattern = /^\\s*\\/(.+)\\/([gimuys]*)\\s*$/;\nconst numberInterval = [\n    Number.MIN_SAFE_INTEGER,\n    Number.MAX_SAFE_INTEGER\n];\n/**\n * Casts the target object or its contents to the closest types automatically.\n * This function is useful when reading config from a file or fetching data from\n * the web.\n */\nexport default function ensureType(target) {\n    switch (typeof target) {\n        case \"string\": {\n            let re;\n            if (truePattern.test(target)) {\n                return true;\n            }\n            else if (falsePattern.test(target)) {\n                return false;\n            }\n            else if (nullPattern.test(target)) {\n                return null;\n            }\n            else if (nanPattern.test(target)) {\n                return NaN;\n            }\n            else if (infinityPattern.test(target)) {\n                return Number(target);\n            }\n            else if (re = target.match(regexPattern)) {\n                return new RegExp(re[1], re[2]);\n            }\n            else {\n                let num = Number(target);\n                if (!isNaN(num) &&\n                    isBetween(num, numberInterval) &&\n                    target[0] !== \"+\" // Most likely a telephone number.\n                ) {\n                    return num;\n                }\n                else {\n                    return target;\n                }\n            }\n        }\n        case \"object\": {\n            if (target === null) {\n                return null;\n            }\n            else if (isArrayLike(target, true)) {\n                return ensureArray(target).map(ensureType);\n            }\n            else if (isDictLike(target)) {\n                return Reflect.ownKeys(target).reduce((result, key) => {\n                    result[key] = ensureType(target[key]);\n                    return result;\n                }, {});\n            }\n            else {\n                return target;\n            }\n        }\n        default:\n            return target;\n    }\n}\nexport function ensureArray(value) {\n    return Array.isArray(value) ? value : Array.from(value);\n}\n//# sourceMappingURL=ensureType.js.map","import { isDictLike, isArrayLike, isBufferLike } from \"is-like\";\nimport isVoid from \"./isVoid.ts\";\nexport default function flatObject(obj, depth = 1, flatArray = false) {\n    return flatDeep({}, obj, \"\", 0, depth, flatArray);\n}\nfunction flatDeep(carrier, source, field, depth, maxDepth, flatArray) {\n    let isArr;\n    let isDict;\n    let isContent = !isVoid(field) && field !== \"\";\n    if (depth === maxDepth || (!(isArr = isArrayLike(source, true) && !isBufferLike(source)) &&\n        !(isDict = isDictLike(source)))) {\n        carrier[field] = source;\n    }\n    else if (isDict) {\n        Reflect.ownKeys(source).forEach(key => {\n            let value = source[key];\n            if (typeof key === \"symbol\") {\n                if (depth === 0) { // only allow top-level symbol properties\n                    carrier[key] = value;\n                }\n            }\n            else {\n                flatDeep(carrier, value, isContent ? `${field}.${key}` : key, isContent ? depth + 1 : depth, maxDepth, flatArray);\n            }\n        });\n    }\n    else if (isArr) {\n        if (flatArray) {\n            for (let i = 0, len = source.length; i < len; ++i) {\n                flatDeep(carrier, source[i], isContent ? `${field}.${i}` : String(i), isContent ? depth + 1 : depth, maxDepth, flatArray);\n            }\n        }\n        else {\n            carrier[field] = source;\n        }\n    }\n    return carrier;\n}\n//# sourceMappingURL=flatObject.js.map","import { isBetween as _isBetween } from \"@ayonli/jsext/number\";\n/** @deprecated use `Number.isBetween` from `@ayonli/jsext/number/augment` instead. */\nconst isBetween = _isBetween;\nexport default isBetween;\n//# sourceMappingURL=isBetween.js.map","import { isFloat as _isFloat } from \"@ayonli/jsext/number\";\n/** @deprecated use `Number.isFloat` from `@ayonli/jsext/number/augment` instead. */\nconst isFloat = _isFloat;\nexport default isFloat;\n//# sourceMappingURL=isFloat.js.map","import { isNumeric as _isNumeric } from \"@ayonli/jsext/number\";\n/** @deprecated use `Number.isNumeric` from `@ayonli/jsext/number/augment` instead. */\nconst isNumeric = _isNumeric;\nexport default isNumeric;\n//# sourceMappingURL=isNumeric.js.map","function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Returns `true` if the specified object has the indicated method as its own method (in its own\n * prototype). If the method is inherited, or is not in the prototype, or does not exist, this\n * function returns `false`.\n */\nfunction hasOwnMethod(obj, method) {\n    var _a;\n    const proto = Object.getPrototypeOf(obj);\n    if (!proto || !hasOwn(proto, method)) {\n        return false;\n    }\n    return typeof ((_a = Object.getOwnPropertyDescriptor(proto, method)) === null || _a === void 0 ? void 0 : _a.value) === \"function\";\n}\nfunction patch(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Reflect.ownKeys(source)) {\n            if (!hasOwn(target, key) || target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\nfunction pick(obj, keys) {\n    return keys.reduce((result, key) => {\n        if (key in obj && obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\nfunction omit(obj, keys) {\n    const allKeys = Reflect.ownKeys(obj);\n    const keptKeys = allKeys.filter(key => !keys.includes(key));\n    const result = pick(obj, keptKeys);\n    // special treatment for Error types\n    if (obj instanceof Error) {\n        [\"name\", \"message\", \"cause\"].forEach(key => {\n            if (!keys.includes(key) &&\n                obj[key] !== undefined &&\n                !hasOwn(result, key)) {\n                result[key] = obj[key];\n            }\n        });\n    }\n    return result;\n}\nfunction as(value, type) {\n    if (typeof type !== \"function\") {\n        throw new TypeError(\"type must be a valid constructor\");\n    }\n    let _type;\n    const primitiveMap = {\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": BigInt,\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n    if (value instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return value.valueOf(); // make sure the primitives are returned.\n        }\n        else {\n            return value;\n        }\n    }\n    else if ((_type = typeof value) && primitiveMap[_type] === type) {\n        return value;\n    }\n    return null;\n}\n/**\n * Returns `true` if the given value is valid. Thee following values are considered invalid:\n *\n * - `undefined`\n * - `null`\n * - `NaN`\n * - `Invalid Date`\n */\nfunction isValid(value) {\n    return value !== undefined\n        && value !== null\n        && !Object.is(value, NaN)\n        && !(value instanceof Date && value.toString() === \"Invalid Date\");\n}\n\nexport { as, hasOwn, hasOwnMethod, isValid, omit, patch, pick };\n//# sourceMappingURL=index.js.map\n","import { hasOwn } from \"@ayonli/jsext/object\";\n/** @deprecated use `Object.hasOwn` from `@ayonli/jsext/object/augment` instead. */\nconst isOwnKey = hasOwn;\nexport default isOwnKey;\n//# sourceMappingURL=isOwnKey.js.map","import { hasOwnMethod } from \"@ayonli/jsext/object\";\n/** @deprecated use `Object.hasOwnMethod` from `@ayonli/jsext/object/augment` instead. */\nconst isOwnMethod = hasOwnMethod;\nexport default isOwnMethod;\n//# sourceMappingURL=isOwnMethod.js.map","import { isSubclassOf as _isSubclassOf } from \"@ayonli/jsext/mixins\";\n/** @deprecated use `jsext.jsSubclassOf` from `@ayonli/jsext` instead. */\nconst isSubClassOf = _isSubclassOf;\nexport default isSubClassOf;\n//# sourceMappingURL=isSubClassOf.js.map","import { hasOwn } from './object/index.js';\n\n/**\n * Merges properties and methods only if they're missing in the class.\n */\nfunction mergeIfNotExists(proto, source, mergeSuper = false) {\n    const props = Reflect.ownKeys(source);\n    for (const prop of props) {\n        if (prop == \"constructor\") {\n            continue;\n        }\n        else if (mergeSuper) {\n            // When merging properties from super classes, the properties in the\n            // base class has the first priority and shall not be overwrite.\n            if (!(prop in proto)) {\n                setProp(proto, source, prop);\n            }\n        }\n        else if (!hasOwn(proto, prop)) {\n            setProp(proto, source, prop);\n        }\n    }\n    return proto;\n}\n/**\n * Merges properties and methods across the prototype chain.\n */\nfunction mergeHierarchy(ctor, mixin, mergeSuper = false) {\n    mergeIfNotExists(ctor.prototype, mixin.prototype, mergeSuper);\n    const _super = Object.getPrototypeOf(mixin);\n    // Every user defined class or functions that can be instantiated have their\n    // own names, if no name appears, that means the function has traveled to \n    // the root of the hierarchical tree.\n    if (_super.name) {\n        mergeHierarchy(ctor, _super, true);\n    }\n}\n/**\n * Sets property for prototype based on the given source and prop name properly.\n */\nfunction setProp(proto, source, prop) {\n    const desc = Object.getOwnPropertyDescriptor(source, prop);\n    if (desc) {\n        Object.defineProperty(proto, prop, desc);\n    }\n    else {\n        proto[prop] = source[prop];\n    }\n}\nfunction mixins(base, ...mixins) {\n    const obj = { ctor: null };\n    obj.ctor = class extends base {\n    }; // make sure this class has no name\n    for (const mixin of mixins) {\n        if (typeof mixin == \"function\") {\n            mergeHierarchy(obj.ctor, mixin);\n        }\n        else if (mixin && typeof mixin == \"object\") {\n            mergeIfNotExists(obj.ctor.prototype, mixin);\n        }\n        else {\n            throw new TypeError(\"mixin must be a constructor or an object\");\n        }\n    }\n    return obj.ctor;\n}\n/**\n * Checks if a class is a subclass of another class.\n *\n * @example\n * ```ts\n * class Moment extends Date {}\n *\n * console.assert(isSubclassOf(Moment, Date));\n * console.assert(isSubclassOf(Moment, Object)); // all classes are subclasses of Object\n * ```\n */\nfunction isSubclassOf(ctor1, ctor2) {\n    return typeof ctor1 === \"function\"\n        && typeof ctor2 === \"function\"\n        && ctor1.prototype instanceof ctor2;\n}\n\nexport { mixins as default, isSubclassOf };\n//# sourceMappingURL=mixins.js.map\n","import { isArrayLike, isBufferLike } from \"is-like\";\nimport { isValid } from \"@ayonli/jsext/object\";\nimport isEmpty from \"./isEmpty.ts\";\n/**\n * Creates an object composed with only the valid properties and values.\n * @param omitEmptyObjects If set, empty properties of type `object` will be\n *  removed as well.\n * @param omitEmptyStrings If set, empty properties of type `string` will be\n *  removed as well.\n */\nexport default function omitInvalid(target, deep = false, omitEmptyObjects = false, omitEmptyStrings = false) {\n    return doOmit(target, deep, omitEmptyObjects, omitEmptyStrings, 0);\n}\nexport function doOmit(target, deep, omitEmptyObjects, omitEmptyStrings, depth) {\n    if (typeof target === \"string\") {\n        return omitEmptyStrings && target.trim() === \"\"\n            ? (depth > 0 ? void 0 : \"\")\n            : target;\n    }\n    else if (target === null\n        || typeof target !== \"object\"\n        || target instanceof Date\n        || target instanceof Error\n        || target instanceof RegExp\n        || isBufferLike(target)) {\n        return target;\n    }\n    else if (omitEmptyObjects && isEmpty(target)) {\n        return depth > 0 ? void 0 : (isArrayLike(target, true) ? [] : {});\n    }\n    if (isArrayLike(target, true)) {\n        let arr = [];\n        for (let i = 0, len = target.length; i < len; ++i) {\n            let value = target[i];\n            if (isValid(value)) {\n                if (deep) {\n                    value = doOmit(value, deep, omitEmptyObjects, omitEmptyStrings, depth + 1);\n                    !isValid(value) || arr.push(value);\n                }\n                else {\n                    arr.push(value);\n                }\n            }\n        }\n        if (depth > 0 && omitEmptyObjects && isEmpty(arr)) {\n            return void 0;\n        }\n        else {\n            return arr;\n        }\n    }\n    else {\n        let obj = Reflect.ownKeys(target).reduce((obj, key) => {\n            let value = target[key];\n            if (isValid(value)) {\n                if (deep) {\n                    value = doOmit(value, deep, omitEmptyObjects, omitEmptyStrings, depth + 1);\n                    !isValid(value) || (obj[key] = value);\n                }\n                else {\n                    obj[key] = value;\n                }\n            }\n            return obj;\n        }, {});\n        if (depth > 0 && omitEmptyObjects && isEmpty(obj)) {\n            return void 0;\n        }\n        else {\n            return obj;\n        }\n    }\n}\n//# sourceMappingURL=omitInvalid.js.map","import omitInvalid from \"./omitInvalid.ts\";\n/**\n * @deprecated use `omitInvalid` instead\n */\nconst omitVoid = omitInvalid;\nexport default omitVoid;\n//# sourceMappingURL=omitVoid.js.map","import { isDictLike } from \"is-like\";\nimport { isValid } from \"@ayonli/jsext/object\";\nimport isEmpty from \"./isEmpty.ts\";\n/**\n * Patches the differences onto the `origin` object from the `input` object. If\n * a property exists in both objects and the values are not equal, the `input`\n * one will be taken. However, those properties that are only presents in the\n * `origin` object will remain untouched.\n *\n * NOTE: This function mutates the `origin` object and returns the patched\n * differences, when patching, any void value in the `input` object will be\n * ignored.\n *\n * This function is very useful, for example, a client issued a patch of the\n * resource and the server wants to know what properties has been modified by\n * this update so that it can perform some extra operations to provide a better\n * user experience.\n */\nexport default function patch(origin, input, deep = false, ignoreEmptyStrings = false) {\n    return doPatch(origin, input, deep, ignoreEmptyStrings, false);\n}\nfunction doPatch(origin, input, deep, ignoreEmptyStrings, isChildNode) {\n    if (isDictLike(origin) && isDictLike(input)) {\n        let keys = Reflect.ownKeys(input);\n        let result = {};\n        keys.forEach(key => {\n            if (origin[key] !== input[key] &&\n                isValid(input[key]) && // ignore invalid values\n                (!ignoreEmptyStrings || input[key] !== \"\")) {\n                if (deep && isDictLike(origin[key]) && isDictLike(input[key])) {\n                    let _result = doPatch(origin[key], input[key], deep, ignoreEmptyStrings, true);\n                    if (!isEmpty(_result)) {\n                        result[key] = _result;\n                        Object.assign(origin[key], input[key]);\n                    }\n                }\n                else {\n                    result[key] = origin[key] = input[key];\n                }\n            }\n        });\n        return result;\n    }\n    else if (isChildNode) {\n        return input;\n    }\n    else {\n        return {};\n    }\n}\n//# sourceMappingURL=patch.js.map","import { random } from \"@ayonli/jsext/number\";\n/** @deprecated use `Number.random` from `@ayonli/jsext/number/augment` instead. */\nconst rand = random;\nexport default rand;\n//# sourceMappingURL=rand.js.map","import { sleep as _sleep } from \"@ayonli/jsext/promise\";\n/** @deprecated use `Promise.sleep` from `@ayonli/jsext/promise/augment` instead. */\nconst sleep = _sleep;\nexport default sleep;\n//# sourceMappingURL=sleep.js.map","/** Try to resolve a promise with a timeout limit. */\nasync function timeout(value, ms) {\n    const result = await Promise.race([\n        value,\n        new Promise((_, reject) => setTimeout(() => {\n            reject(new Error(`operation timeout after ${ms}ms`));\n        }, ms))\n    ]);\n    return result;\n}\n/** Resolves a promise only after the given duration. */\nasync function after(value, ms) {\n    const [result] = await Promise.allSettled([\n        value,\n        new Promise(resolve => setTimeout(resolve, ms))\n    ]);\n    if (result.status === \"fulfilled\") {\n        return result.value;\n    }\n    else {\n        throw result.reason;\n    }\n}\n/** Blocks the context for a given time. */\nasync function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/** Blocks the context until the test is passed. */\nasync function until(test) {\n    while ((await test()) === false) {\n        await new Promise(resolve => setTimeout(resolve));\n    }\n}\n\nexport { after, sleep, timeout, until };\n//# sourceMappingURL=index.js.map\n","import { isArrayLike, isDictLike } from \"is-like\";\nimport { ensureArray } from \"./ensureType.ts\";\nexport default function sort(target, method = void 0) {\n    if (isArrayLike(target, true)) {\n        let arr = ensureArray(target);\n        let compare = method;\n        // If the compare function is omitted and all the elements are numbers\n        // (or of bigint), sort them by their values.\n        if (!compare && (onlyNumbers(arr) || onlyNumbers(arr, \"bigint\"))) {\n            compare = (a, b) => a - b;\n        }\n        if (shouldUseNativeSort(arr)) {\n            return arr.sort(compare);\n        }\n        // Emulate stable sort.\n        // Reference: http://blog.vjeux.com/2010/javascript/javascript-sorting-table.html\n        return arr\n            .map((value, index) => ({ value, index }))\n            .sort((a, b) => compare(a.value, b.value) || a.index - b.index)\n            .map(({ value }) => value);\n    }\n    else if (isDictLike(target)) {\n        let deep = Boolean(method);\n        let keys = [\n            ...sort(Object.getOwnPropertyNames(target)),\n            ...Object.getOwnPropertySymbols(target)\n        ];\n        return keys.reduce((result, key) => {\n            let value = target[key];\n            if (deep) {\n                if (isArrayLike(value, true)) {\n                    value = ensureArray(value).map(item => {\n                        return isDictLike(item) ? sort(item, deep) : item;\n                    });\n                }\n                else if (isDictLike(value)) {\n                    value = sort(value, deep);\n                }\n            }\n            result[key] = value;\n            return result;\n        }, {});\n    }\n    else {\n        if (typeof method === \"function\") {\n            throw new TypeError(\"The target to sort is not an array\");\n        }\n        else if (typeof method === \"boolean\") {\n            throw new TypeError(\"The target to sort is not a pure object\");\n        }\n        else {\n            throw new TypeError(\"The target to sort is not an array or a pure object\");\n        }\n    }\n}\nfunction onlyNumbers(arr, type = \"number\") {\n    return arr.every(ele => typeof ele === type);\n}\nfunction shouldUseNativeSort(arr) {\n    if (typeof process === \"object\" && typeof process.versions === \"object\") {\n        return arr.length <= 10\n            || parseFloat(process.versions.v8 || \"0\") >= 7.0;\n    }\n    else if (typeof Deno === \"object\") {\n        return true;\n    }\n    else if (typeof navigator === \"object\"\n        && typeof navigator.userAgent === \"string\") {\n        let match = navigator.userAgent.match(/(Chrome|Firefox|Safari|Edge|OPR)\\/(\\d+)/);\n        if (match) {\n            let name = match[1];\n            let version = parseFloat(match[2]);\n            if ((name === \"Edge\" && arr.length <= 512) ||\n                (name === \"Chrome\" && (version >= 70) || arr.length <= 10) ||\n                (name === \"Firefox\" && version >= 3) ||\n                (name === \"Safari\" && version >= 10.1) ||\n                (name === \"OPR\" && version >= 54)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=sort.js.map","import { isArrayLike, isBufferLike, isCollectionLike } from \"is-like\";\nfunction checkNumberArgument(name, value) {\n    if (typeof value !== \"number\") {\n        throw new TypeError(`argument '${name}' must be a number`);\n    }\n    else if (value < 1) {\n        throw new RangeError(`argument '${name}' must be 1 or higher`);\n    }\n}\nfunction splitArrayLike(arr, length, total = void 0) {\n    let result = [];\n    for (let i = 0, j = (total || arr.length); i < j; i += length) {\n        if (typeof arr.slice === \"function\") {\n            result.push(arr.slice(i, i + length));\n        }\n        else {\n            result.push(Array.prototype.slice.call(arr, i, i + length));\n        }\n    }\n    return result;\n}\nfunction splitBuffer(buf, sep) {\n    let result = [];\n    let offset = 0;\n    let length = sep.length;\n    let total = buf.byteLength;\n    while (offset < total) {\n        let index = buf.indexOf(sep, offset);\n        if (index !== -1) {\n            result.push(buf.slice(offset, index));\n            offset = index + length;\n        }\n        else {\n            result.push(buf.slice(offset));\n            offset = total;\n        }\n    }\n    return result;\n}\nfunction splitObject(obj, size) {\n    let proto = Object.getPrototypeOf(obj);\n    let keyChunks = splitArrayLike(Object.keys(obj), size);\n    let result = [];\n    for (let keys of keyChunks) {\n        let chunk = Object.create(proto);\n        result.push(chunk);\n        for (let key of keys) {\n            chunk[key] = obj[key];\n        }\n    }\n    return result;\n}\nfunction splitNumber(num, step) {\n    let result = [];\n    let offset = 0;\n    while ((offset += step) <= num) {\n        result.push(offset);\n    }\n    if (num > offset - step) {\n        result.push(num);\n    }\n    return result;\n}\nexport default function split(obj, sep) {\n    if (arguments.length < 2) {\n        throw new SyntaxError(`2 arguments required, received ${arguments.length}`);\n    }\n    else if (typeof obj === \"string\") {\n        if (typeof sep === \"string\" || sep instanceof RegExp) {\n            return obj.split(sep);\n        }\n        else {\n            checkNumberArgument(\"length\", sep);\n            return splitArrayLike(obj, sep);\n        }\n    }\n    else if (typeof obj === \"number\") {\n        checkNumberArgument(\"step\", sep);\n        return splitNumber(obj, sep);\n    }\n    else if (typeof Buffer === \"function\"\n        && Buffer.isBuffer(obj)\n        && (typeof sep === \"string\" || Buffer.isBuffer(sep))) {\n        return splitBuffer(obj, sep);\n    }\n    else if (isBufferLike(obj)) {\n        checkNumberArgument(\"byteLength\", sep);\n        return splitArrayLike(obj, sep, obj.byteLength);\n    }\n    else if (isArrayLike(obj, true)) {\n        checkNumberArgument(\"length\", sep);\n        return splitArrayLike(obj, sep);\n    }\n    else if (isCollectionLike(obj)) {\n        let ctor = obj[\"constructor\"];\n        checkNumberArgument(\"size\", sep);\n        return splitArrayLike([...obj], sep).map(list => new ctor(list));\n    }\n    else if (typeof obj === \"object\" && obj !== null) {\n        checkNumberArgument(\"size\", sep);\n        return splitObject(obj, sep);\n    }\n    else {\n        throw new TypeError(\"argument 'obj' must be a string, a number or an object\");\n    }\n}\n//# sourceMappingURL=split.js.map","import { as } from \"@ayonli/jsext/object\";\n/** @deprecated use `Object.as` from `@ayonli/jsext/object/augment` instead. */\nconst typeAs = as;\nexport default typeAs;\n//# sourceMappingURL=typeAs.js.map","import { until as _until } from \"@ayonli/jsext/promise\";\n/** @deprecated use `Promise.until` from `@ayonli/jsext/promise/augment` instead. */\nconst until = _until;\nexport default until;\n//# sourceMappingURL=until.js.map","import isEmpty from \"./isEmpty.ts\";\n// @ts-ignore\nif (typeof setImmediate === \"undefined\") {\n    // compatible with browsers\n    var setImmediate = (cb) => setTimeout(cb, 0);\n}\nexport default useThrottle;\n/**\n * Uses throttle strategy on the given resource and returns a throttle function,\n * if a subsequent call happens within the `interval` time, the previous result\n * will be returned and the current `handle` function will not be invoked.\n *\n * If `backgroundUpdate` is set, when reaching the `interval` time, the `handle`\n * function will be called in background and updates the result the when it's\n * done, the current call and any calls before the update will return the\n * previous result instead.\n *\n * NOTE: this function only creates the throttle function once and uses\n * `interval` only once, any later calls on the same `resource` will return the\n * initial throttle function.\n *\n * @deprecated this implementation is too complicated and redundant, use\n *  `jsext.throttle` from `@ayonli/jsext` instead.\n */\nfunction useThrottle(resource, interval, backgroundUpdate = false) {\n    if (interval < 1) {\n        throw new RangeError(\"The 'interval' time for throttle must not be smaller than 1\");\n    }\n    else if (!useThrottle.gcTimer) {\n        let { gcInterval, tasks: jobs } = useThrottle;\n        useThrottle.gcTimer = setInterval(() => {\n            let now = Date.now();\n            jobs.forEach(({ interval, lastActive }, key) => {\n                if (now - lastActive > Math.max(interval + 5, gcInterval)) {\n                    jobs.delete(key);\n                }\n            });\n        }, gcInterval);\n        if (typeof useThrottle.gcTimer.unref === \"function\") {\n            useThrottle.gcTimer.unref();\n        }\n    }\n    let task = useThrottle.tasks.get(resource);\n    if (!task) {\n        useThrottle.tasks.set(resource, task = createThrottleTask(interval, backgroundUpdate));\n    }\n    return task.func;\n}\n(function (useThrottle) {\n    useThrottle.gcInterval = 30000;\n    useThrottle.gcTimer = void 0;\n    useThrottle.tasks = new Map();\n})(useThrottle || (useThrottle = {}));\nfunction createThrottleTask(interval, backgroundUpdate = false) {\n    let task = {\n        interval,\n        lastActive: 0,\n        cache: void 0,\n        queue: new Set(),\n        func: void 0,\n        daemon: null,\n    };\n    async function throttle(handle, ...args) {\n        if (backgroundUpdate && !this.daemon) {\n            this.daemon = setInterval(() => { var _a; return (_a = this.func) === null || _a === void 0 ? void 0 : _a.call(this, handle, ...args); }, interval);\n            if (typeof this.daemon.unref === \"function\") {\n                this.daemon.unref();\n            }\n        }\n        let now = Date.now();\n        if ((now - this.lastActive) >= interval) {\n            this.lastActive = now;\n            if (backgroundUpdate && this.cache) {\n                Promise.resolve(handle(...args)).then(result => {\n                    this.cache = { value: result, error: null };\n                }).catch(err => {\n                    this.cache = { value: void 0, error: err };\n                });\n                if (this.cache.error)\n                    throw this.cache.error;\n                else\n                    return this.cache.value;\n            }\n            else {\n                // Clear cache before dispatching the new job.\n                this.cache = void 0;\n                let result;\n                let error;\n                try {\n                    result = await handle(...args);\n                    this.cache = { value: result, error: null };\n                }\n                catch (err) {\n                    this.cache = { value: void 0, error: error = err };\n                }\n                // Resolve or reject subsequent jobs once the result is ready,\n                // and make the procedure asynchronous so that they will be\n                // performed after the current job.\n                setImmediate(() => {\n                    if (!isEmpty(this.queue)) {\n                        this.queue.forEach((job) => {\n                            error ? job.reject(error) : job.resolve(result);\n                            this.queue.delete(job);\n                        });\n                    }\n                });\n                if (error)\n                    throw error;\n                else\n                    return result;\n            }\n        }\n        else if (this.cache) {\n            if (this.cache.error)\n                throw this.cache.error;\n            else\n                return this.cache.value;\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.queue.add({ resolve, reject });\n            });\n        }\n    }\n    task.func = throttle.bind(task);\n    return task;\n}\n//# sourceMappingURL=useThrottle.js.map","import _wrap from \"@ayonli/jsext/wrap\";\n/** @deprecated use `jsext.wrap` from `@ayonli/jsext` instead. */\nconst wrap = _wrap;\nexport default wrap;\n//# sourceMappingURL=wrap.js.map","/**\n * Wraps a function inside another function and returns a new function that copies the original\n * function's name and other properties.\n *\n * @example\n * ```ts\n * function log(text: string) {\n *     console.log(text);\n * }\n *\n * const show = wrap(log, function (fn, text) {\n *     return fn.call(this, new Date().toISOString() + \" \" + text);\n * });\n *\n * console.log(show.name); // log\n * console.log(show.length); // 1\n * console.assert(show.toString() === log.toString());\n * ```\n */\nfunction wrap(fn, wrapper) {\n    const wrapped = function (...args) {\n        return wrapper.call(this, fn, ...args);\n    };\n    Object.defineProperty(wrapped, \"name\", Object.getOwnPropertyDescriptor(fn, \"name\"));\n    Object.defineProperty(wrapped, \"length\", Object.getOwnPropertyDescriptor(fn, \"length\"));\n    Object.defineProperty(wrapped, \"toString\", {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: fn.toString.bind(fn),\n    });\n    return wrapped;\n}\n\nexport { wrap as default };\n//# sourceMappingURL=wrap.js.map\n","import typeOf from \"./typeOf.ts\";\n/**\n * Sets a property on the target object.\n * @param value Normally this is the value bound to the property, however, it\n *  could be used to set the getter and the setter using the signature\n *  `{ get: Function, set?: Function }`.\n * @param enumerable By default, the property is non-enumerable and can't be\n *  seen by the console, use this option to make it enumerable and visible to\n *  the console.\n * @param writable By default, the property is readonly once set, use this\n *  option to allow it being writable.\n *  **This property doesn't work with setter.**\n */\nexport default function define(obj, prop, value, enumerable = false, writable = false) {\n    if (typeOf(value) === Object) {\n        if (isGetter(value) || isGetterAndSetter(value)) {\n            Object.defineProperty(obj, prop, {\n                configurable: true,\n                enumerable,\n                ...value\n            });\n            return;\n        }\n    }\n    Object.defineProperty(obj, prop, {\n        configurable: true,\n        enumerable,\n        writable,\n        value\n    });\n}\nfunction isGetter(obj) {\n    return String(Object.keys(obj)) === \"get\"\n        && typeof obj[\"get\"] === \"function\";\n}\nfunction isGetterAndSetter(obj) {\n    let sign = String(Object.keys(obj));\n    return (sign === \"get,set\" || sign === \"set,get\")\n        && typeof obj[\"get\"] === \"function\"\n        && typeof obj[\"set\"] === \"function\";\n}\n//# sourceMappingURL=define.js.map","import { isDictLike } from \"is-like\";\nimport isEmpty from \"./isEmpty.ts\";\nimport isVoid from \"./isVoid.ts\";\nexport default function diff(origin, input, deep = false) {\n    if (Array.isArray(origin) && Array.isArray(input)) {\n        return [\n            ...input.filter(value => !origin.includes(value)),\n            ...origin.filter(value => !input.includes(value))\n        ];\n    }\n    else if (isDictLike(origin) && isDictLike(input)) {\n        let keys = Reflect.ownKeys(input);\n        let _keys = Reflect.ownKeys(origin);\n        let result = {};\n        keys.forEach(key => {\n            if (origin[key] !== input[key] &&\n                !(isVoid(origin[key]) && isVoid(input[key])) // ignore void values\n            ) {\n                if (deep &&\n                    typeof origin[key] === \"object\" && origin[key] !== null &&\n                    typeof input[key] === \"object\" && input[key] !== null) {\n                    let _result = diff(origin[key], input[key], deep);\n                    if (!isEmpty(_result)) {\n                        result[key] = _result;\n                    }\n                }\n                else {\n                    result[key] = input[key];\n                }\n            }\n        });\n        _keys.forEach(key => {\n            keys.includes(key) || (result[key] = origin[key]);\n        });\n        return result;\n    }\n    else {\n        return input;\n    }\n}\n//# sourceMappingURL=diff.js.map","export default function getGlobal(prop = void 0) {\n    let _global;\n    if (typeof globalThis === \"object\") {\n        _global = globalThis;\n    }\n    else if (typeof self === \"object\") {\n        _global = self;\n    }\n    else if (typeof global === \"object\") {\n        _global = global;\n    }\n    else if (typeof window === \"object\") {\n        _global = window;\n    }\n    return _global && (prop ? _global[prop] : _global);\n}\n//# sourceMappingURL=getGlobal.js.map","/**\n * Checks if the value is an integer number (or bigint).\n *\n * @deprecated use `Number.isInteger` instead.\n */\nexport default function isInteger(value) {\n    return typeof value === \"bigint\" || Number.isInteger(value);\n}\n//# sourceMappingURL=isInteger.js.map","export default function keysOf(obj) {\n    if (Array.isArray(obj)) {\n        return obj.map((_, i) => i);\n    }\n    else {\n        return Reflect.ownKeys(obj);\n    }\n}\n//# sourceMappingURL=keysOf.js.map","import { omit as _omit } from \"@ayonli/jsext/object\";\nexport default function omit(obj, props) {\n    if (Array.isArray(obj)) {\n        return obj.filter(i => !props.includes(i));\n    }\n    else {\n        return _omit(obj, props);\n    }\n}\n//# sourceMappingURL=omit.js.map","import { pick as _pick } from \"@ayonli/jsext/object\";\nexport default function pick(obj, props) {\n    if (Array.isArray(obj)) {\n        return props.map(i => obj[i]);\n    }\n    else {\n        return _pick(obj, props);\n    }\n}\n//# sourceMappingURL=pick.js.map","import rand from \"./rand.ts\";\n/**\n * Generates a random string.\n * @param chars The possible characters.\n * @deprecated use `String.random` from `@ayonli/jsext/string/augment` instead.\n */\nexport default function randStr(length, chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\") {\n    let str = \"\";\n    let max = chars.length - 1;\n    while (0 < length--) {\n        str += chars[rand(0, max)];\n    }\n    return str;\n}\n//# sourceMappingURL=randStr.js.map","import { isValid } from \"@ayonli/jsext/object\";\nimport { isNumeric } from \"@ayonli/jsext/number\";\nexport default timestamp;\nfunction timestamp(input, ms = false) {\n    var _a;\n    if (typeof input === \"boolean\") {\n        ms = input;\n        input = void 0;\n    }\n    input = input || new Date();\n    if (input instanceof Date) {\n        return ms ? input.valueOf() : Math.floor(input.valueOf() / 1000);\n    }\n    else if (typeof input === \"number\") {\n        return ms ? input : Math.floor(input / 1000);\n    }\n    else {\n        let date;\n        let dateTime = String(input).trim();\n        if (dateTime.includes(\",\") && dateTime.split(\",\").every(isNumeric)) {\n            date = parseDateRawArgs(dateTime);\n        }\n        else {\n            let match = null;\n            if (match = dateTime.match(/^(\\d{1,2}):\\d{2}(:\\d{2})?/)) { // time only\n                if (((_a = match[1]) === null || _a === void 0 ? void 0 : _a.length) !== 2) {\n                    dateTime = \"0\" + dateTime;\n                }\n                if (!match[2]) {\n                    dateTime += \":00\";\n                }\n                date = new Date();\n                dateTime = date.getFullYear()\n                    + \"-\" + String(date.getMonth() + 1).padStart(2, \"0\")\n                    + \"-\" + String(date.getDate()).padStart(2, \"0\")\n                    + \" \" + dateTime;\n            }\n            date = new Date(dateTime);\n        }\n        if (String(date) !== \"Invalid Date\") {\n            return ms ? date.valueOf() : Math.floor(date.valueOf() / 1000);\n        }\n        else {\n            console.log(dateTime);\n            throw new Error(\"The input argument is not a valid date-time string\");\n        }\n    }\n}\nfunction parseDateRawArgs(str) {\n    let [Y, M, D, H, m, s, ms] = str.split(\",\").map(Number);\n    let date = new Date();\n    isValid(Y) && date.setFullYear(Y);\n    isValid(M) && date.setMonth(M);\n    isValid(D) && date.setDate(D);\n    isValid(H) && date.setHours(H);\n    isValid(m) && date.setMinutes(m);\n    isValid(s) && date.setSeconds(s);\n    isValid(ms) && date.setMilliseconds(ms);\n    return date;\n}\n//# sourceMappingURL=timestamp.js.map","import { isArrayLike, isDictLike } from \"is-like\";\nimport { ensureArray } from \"./ensureType.ts\";\n/**\n * Trims the leading and tailing spaces of a string, the string properties of\n * an object, or the string and object elements in an array.\n */\nexport default function trim(target, deep = false) {\n    if (typeof target === \"string\") {\n        return target.trim();\n    }\n    else if (isArrayLike(target, true)) {\n        return ensureArray(target).map(item => trim(item, deep));\n    }\n    else if (isDictLike(target)) {\n        const keys = [\n            ...Object.getOwnPropertyNames(target),\n            ...Object.getOwnPropertySymbols(target)\n        ];\n        return keys.reduce((result, key) => {\n            let value = target[key];\n            if (typeof value === \"string\") {\n                value = value.trim();\n            }\n            else if (deep) {\n                if (isArrayLike(value, true)) {\n                    value = ensureArray(value).map(item => {\n                        return isDictLike(item) ? trim(item, deep) : item;\n                    });\n                }\n                else if (isDictLike(value)) {\n                    value = trim(value, deep);\n                }\n            }\n            result[key] = value;\n            return result;\n        }, {});\n    }\n    else {\n        return target;\n    }\n}\n//# sourceMappingURL=trim.js.map"],"names":["isObjectWith","value","props","every","p","t","isDictLike","constructor","Object","Date","RegExp","isArrayLike","name","isObjectIdLike","obj","str","JSON","stringify","e","isEmptyDict","isTypedArrayLike","isCollectionLike","isPromiseLike","strict","Array","isArray","indexes","keys","isNonEnumLength","includes","length","map","Number","filter","isFinite","hasIterator","Symbol","iterator","i","excludeWeakOnes","WeakMap","WeakSet","isBufferLike","encoder","TextEncoder","isVoid","is","NaN","couldBeClass_2","undefined","prototype","getOwnPropertyNames","String","slice","test","hasThis","typeOf","target","arguments","TypeError","type","isClass","toString","call","BaseEmptyPrimitives","EmptyPrimitives","isEmpty","deep","Boolean","emptyPrimitives","Error","message","byteLength","len","size","Map","v","values","Set","Reflect","ownKeys","k","isNumeric","isNaN","BigInt","_a","isBetween","min","max","push","truePattern","falsePattern","nullPattern","nanPattern","infinityPattern","regexPattern","numberInterval","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","ensureArray","from","flatDeep","carrier","source","field","depth","maxDepth","flatArray","isArr","isDict","isContent","forEach","key","_isBetween","isFloat","_isNumeric","hasOwn","hasOwnProperty","pick","reduce","result","isValid","isOwnKey","isOwnMethod","method","proto","getPrototypeOf","getOwnPropertyDescriptor","isSubClassOf","ctor1","ctor2","doOmit","omitEmptyObjects","omitEmptyStrings","trim","arr","omitVoid","doPatch","origin","input","ignoreEmptyStrings","isChildNode","_result","assign","rand","Math","floor","random","sleep","async","ms","Promise","resolve","setTimeout","onlyNumbers","ele","checkNumberArgument","RangeError","splitArrayLike","total","j","typeAs","_type","primitiveMap","string","number","bigint","boolean","symbol","valueOf","until","setImmediate","cb","useThrottle","resource","interval","backgroundUpdate","gcTimer","gcInterval","tasks","jobs","setInterval","now","lastActive","delete","unref","task","get","set","cache","queue","func","daemon","throttle","handle","args","this","then","error","catch","err","job","reject","add","bind","createThrottleTask","wrap","fn","wrapper","wrapped","defineProperty","configurable","enumerable","writable","option","split","Buffer","encode","times","prop","isGetter","sign","isGetterAndSetter","diff","_keys","ensureType","re","match","num","_global","globalThis","self","global","window","isInteger","_","keptKeys","_omit","_pick","chars","sort","compare","a","b","process","versions","parseFloat","v8","Deno","navigator","userAgent","version","shouldUseNativeSort","index","getOwnPropertySymbols","item","sep","SyntaxError","step","offset","splitNumber","isBuffer","buf","indexOf","splitBuffer","ctor","list","keyChunks","chunk","create","splitObject","date","dateTime","Y","M","D","H","m","s","setFullYear","setMonth","setDate","setHours","setMinutes","setSeconds","setMilliseconds","parseDateRawArgs","getFullYear","getMonth","padStart","getDate","console","log"],"mappings":"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","x_google_ignoreList":[0,3,6,12,16,22,29]}