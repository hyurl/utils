{"version":3,"file":"ensureType.js","sources":["../ensureType.ts"],"sourcesContent":["import { isArrayLike, isDictLike } from 'is-like';\nimport isBetween from './isBetween';\nimport keysOf from './keysOf';\nconst truePattern = /^\\s*(true|yes|on)\\s*$/i;\nconst falsePattern = /^\\s*(false|no|off)\\s*$/i;\nconst nullPattern = /^\\s*(null|nil|none|void|undefined)\\s*$/i;\nconst nanPattern = /^\\s*NaN\\s*$/;\nconst infinityPattern = /^\\s*-?Infinity\\s*/;\nconst regexPattern = /^\\s*\\/(.+)\\/([gimuys]*)\\s*$/;\nconst numberInterval = [\n    Number.MIN_SAFE_INTEGER,\n    Number.MAX_SAFE_INTEGER\n];\n/**\n * Casts the target object or its contents to the closest types automatically.\n * This function is useful when reading config from a file or fetching data from\n * the web.\n */\nexport default function ensureType(target) {\n    switch (typeof target) {\n        case \"string\": {\n            let re;\n            if (truePattern.test(target)) {\n                return true;\n            }\n            else if (falsePattern.test(target)) {\n                return false;\n            }\n            else if (nullPattern.test(target)) {\n                return null;\n            }\n            else if (nanPattern.test(target)) {\n                return NaN;\n            }\n            else if (infinityPattern.test(target)) {\n                return Number(target);\n            }\n            else if (re = target.match(regexPattern)) {\n                return new RegExp(re[1], re[2]);\n            }\n            else {\n                let num = Number(target);\n                if (!isNaN(num) &&\n                    isBetween(num, numberInterval) &&\n                    target[0] !== \"+\" // Most likely a telephone number.\n                ) {\n                    return num;\n                }\n                else {\n                    return target;\n                }\n            }\n        }\n        case \"object\": {\n            if (target === null) {\n                return null;\n            }\n            else if (isArrayLike(target, true)) {\n                return ensureArray(target).map(ensureType);\n            }\n            else if (isDictLike(target)) {\n                return keysOf(target).reduce((result, key) => {\n                    result[key] = ensureType(target[key]);\n                    return result;\n                }, {});\n            }\n            else {\n                return target;\n            }\n        }\n        default:\n            return target;\n    }\n}\nexport function ensureArray(value) {\n    return Array.isArray(value) ? value : Array.from(value);\n}\n//# sourceMappingURL=ensureType.js.map"],"names":["isArrayLike","isDictLike"],"mappings":"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"}