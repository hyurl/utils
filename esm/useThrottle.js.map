{"version":3,"file":"useThrottle.js","sources":["../useThrottle.ts"],"sourcesContent":["import isEmpty from './isEmpty';\n// @ts-ignore\nif (typeof setImmediate === \"undefined\") {\n    // compatible with browsers\n    var setImmediate = (cb) => setTimeout(cb, 0);\n}\nexport default useThrottle;\n/**\n * Uses throttle strategy on the given resource and returns a throttle function,\n * if a subsequent call happens within the `interval` time, the previous result\n * will be returned and the current `handle` function will not be invoked.\n *\n * If `backgroundUpdate` is set, when reaching the `interval` time, the `handle`\n * function will be called in background and updates the result the when it's\n * done, the current call and any calls before the update will return the\n * previous result instead.\n *\n * NOTE: this function only creates the throttle function once and uses\n * `interval` only once, any later calls on the same `resource` will return the\n * initial throttle function.\n *\n * @deprecated this implementation is too complicated and redundant, use\n *  `jsext.throttle` from `@ayonli/jsext` instead.\n */\nfunction useThrottle(resource, interval, backgroundUpdate = false) {\n    if (interval < 1) {\n        throw new RangeError(\"The 'interval' time for throttle must not be smaller than 1\");\n    }\n    else if (!useThrottle.gcTimer) {\n        let { gcInterval, tasks: jobs } = useThrottle;\n        useThrottle.gcTimer = setInterval(() => {\n            let now = Date.now();\n            jobs.forEach(({ interval, lastActive }, key) => {\n                if (now - lastActive > Math.max(interval + 5, gcInterval)) {\n                    jobs.delete(key);\n                }\n            });\n        }, gcInterval);\n        if (typeof useThrottle.gcTimer.unref === \"function\") {\n            useThrottle.gcTimer.unref();\n        }\n    }\n    let task = useThrottle.tasks.get(resource);\n    if (!task) {\n        useThrottle.tasks.set(resource, task = createThrottleTask(interval, backgroundUpdate));\n    }\n    return task.func;\n}\n(function (useThrottle) {\n    useThrottle.gcInterval = 30000;\n    useThrottle.gcTimer = void 0;\n    useThrottle.tasks = new Map();\n})(useThrottle || (useThrottle = {}));\nfunction createThrottleTask(interval, backgroundUpdate = false) {\n    let task = {\n        interval,\n        lastActive: 0,\n        cache: void 0,\n        queue: new Set(),\n        func: void 0,\n        daemon: null,\n    };\n    async function throttle(handle, ...args) {\n        if (backgroundUpdate && !this.daemon) {\n            this.daemon = setInterval(() => { var _a; return (_a = this.func) === null || _a === void 0 ? void 0 : _a.call(this, handle, ...args); }, interval);\n            if (typeof this.daemon.unref === \"function\") {\n                this.daemon.unref();\n            }\n        }\n        let now = Date.now();\n        if ((now - this.lastActive) >= interval) {\n            this.lastActive = now;\n            if (backgroundUpdate && this.cache) {\n                Promise.resolve(handle(...args)).then(result => {\n                    this.cache = { value: result, error: null };\n                }).catch(err => {\n                    this.cache = { value: void 0, error: err };\n                });\n                if (this.cache.error)\n                    throw this.cache.error;\n                else\n                    return this.cache.value;\n            }\n            else {\n                // Clear cache before dispatching the new job.\n                this.cache = void 0;\n                let result;\n                let error;\n                try {\n                    result = await handle(...args);\n                    this.cache = { value: result, error: null };\n                }\n                catch (err) {\n                    this.cache = { value: void 0, error: error = err };\n                }\n                // Resolve or reject subsequent jobs once the result is ready,\n                // and make the procedure asynchronous so that they will be\n                // performed after the current job.\n                setImmediate(() => {\n                    if (!isEmpty(this.queue)) {\n                        this.queue.forEach((job) => {\n                            error ? job.reject(error) : job.resolve(result);\n                            this.queue.delete(job);\n                        });\n                    }\n                });\n                if (error)\n                    throw error;\n                else\n                    return result;\n            }\n        }\n        else if (this.cache) {\n            if (this.cache.error)\n                throw this.cache.error;\n            else\n                return this.cache.value;\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.queue.add({ resolve, reject });\n            });\n        }\n    }\n    task.func = throttle.bind(task);\n    return task;\n}\n//# sourceMappingURL=useThrottle.js.map"],"names":["useThrottle"],"mappings":"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"}